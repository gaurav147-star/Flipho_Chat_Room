{"version":3,"sources":["Context/ChatProvider.js","components/Authentication/Login.js","components/Authentication/Signup.js","Pages/Homepage.js","components/SingleChat.js","config/ChatLogics.js","components/miscellaneous/ProfileModal.js","components/ScrollableChat.js","components/userAvatar/UserBadgeItem.js","components/userAvatar/UserListItem.js","components/userAvatar/existGroupUserListItem.js","components/miscellaneous/UpdateGroupChatModal.js","components/Chatbox.js","components/ChatLoading.js","components/miscellaneous/GroupChatModal.js","components/MyChats.js","components/miscellaneous/SideDrawer.js","Pages/Chatpage.js","App.js","index.js"],"names":["ChatContext","createContext","ChatState","useContext","ChatProvider","_ref","children","_useState","useState","_useState2","_slicedToArray","selectedChat","setSelectedChat","_useState3","_useState4","user","setUser","_useState5","_useState6","notification","setNotification","_useState7","_useState8","chats","setChats","history","useHistory","useEffect","userInfo","JSON","parse","localStorage","getItem","push","_jsx","Provider","value","Login","show","setShow","toast","useToast","email","setEmail","password","setPassword","loading","setLoading","_ChatState","submitHandler","_asyncToGenerator","_regeneratorRuntime","mark","_callee","config","_yield$axios$post","data","wrap","_context","prev","next","title","status","duration","isClosable","position","abrupt","headers","axios","post","sent","setItem","stringify","t0","description","response","message","stop","apply","arguments","_jsxs","VStack","spacing","FormControl","id","isRequired","FormLabel","Input","type","placeholder","onChange","e","target","InputGroup","size","InputRightElement","width","Button","h","onClick","ViewOffIcon","ViewIcon","bg","_hover","color","border","style","marginTop","isLoading","Signup","cshow","setCshow","name","setName","_useState9","_useState10","confirmpassword","setConfirmpassword","_useState11","_useState12","_useState13","_useState14","pic","setPic","_useState15","_useState16","picLoading","setPicLoading","p","accept","pics","undefined","FormData","append","fetch","method","body","then","res","json","url","toString","catch","err","console","log","postDetails","files","Homepage","socket","selectedChatCompare","Container","maxW","centerContent","Box","d","justifyContent","w","m","borderRadius","borderWidth","Text","fontSize","fontFamily","Tabs","isFitted","variant","TabList","mb","Tab","TabPanels","TabPanel","isSameSenderMargin","messages","i","userId","length","sender","_id","isSameSender","isLastMessage","isSameUser","getSender","loggedUser","users","getSenderPic","ProfileModal","_useDisclosure","useDisclosure","isOpen","onOpen","onClose","_Fragment","IconButton","base","icon","Modal","isCentered","ModalOverlay","ModalContent","ModalHeader","ModalCloseButton","ModalBody","flexDir","alignItems","Image","boxSize","src","alt","md","ModalFooter","ScrollableChat","ScrollableFeed","map","display","Tooltip","label","placement","hasArrow","Avatar","mt","mr","cursor","backgroundColor","concat","marginLeft","padding","maxWidth","content","UserBadgeItem","handleFunction","admin","Badge","px","py","colorScheme","CloseIcon","pl","UserListItem","background","ExistGroupUserListItem","useringroup","handleRemoveFunction","handleAddToGroupAdminFunction","handleRemoveToGroupAdminFunction","setIsOpen","pos","ml","some","SmallCloseIcon","SmallAddIcon","right","top","flexDirection","zIndex","UpdateGroupChatModal","fetchMessages","fetchAgain","setFetchAgain","btnRef","React","useRef","groupChatName","setGroupChatName","search","setSearch","searchResult","setSearchResult","renameloading","setRenameLoading","handleSearch","_ref2","query","_yield$axios$get","Authorization","token","get","_x","handleRename","_ref3","_callee2","_yield$axios$put","_context2","put","chatId","chatName","handleAddUser","_ref4","_callee3","user1","_yield$axios$put2","_context3","find","u","groupAdmin","_x2","handleRemove","_ref5","_callee4","_yield$axios$put3","_context4","groupOwner","_x3","AddToGroupAdmin","_ref6","_callee5","_yield$axios$put4","_context5","_x4","RemoveToGroupAdmin","_ref7","_callee6","_yield$axios$put5","_context6","_x5","Drawer","finalFocusRef","DrawerOverlay","DrawerContent","DrawerCloseButton","pt","chatname","my","htmlFor","EditIcon","DrawerHeader","DrawerBody","fontStyle","pb","createdAt","slice","Spinner","Stack","overflowY","searchUser","textAlign","filter","reverse","DrawerFooter","SingleChat","setMessages","newMessage","setNewMessage","socketConnected","setSocketConnected","typing","setTyping","istyping","setIsTyping","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","emit","sendMessage","event","key","_toConsumableArray","io","on","newMessageRecieved","chat","includes","capitalizeFirstLetter","str","charAt","toUpperCase","isGroupChat","as","alignSelf","margin","className","onKeyDown","Lottie","options","marginBottom","lastTypingTime","Date","getTime","setTimeout","Chatbox","ChatLoading","Skeleton","height","GroupChatModal","selectedUsers","setSelectedUsers","handleSubmit","flexWrap","delUser","sel","userToAdd","MyChats","setLoggedUser","fetchChats","lg","rightIcon","AddIcon","latestMessage","substring","SideDrawer","loadingChat","setLoadingChat","accessChat","c","Menu","MenuButton","NotificationBadge","count","effect","Effect","SCALE","BellIcon","MenuList","notif","MenuItem","n","ChevronDownIcon","MenuDivider","removeItem","borderBottomWidth","searuser","Chatpage","App","Route","path","component","exact","ReactDOM","render","BrowserRouter","ChakraProvider","document","getElementById"],"mappings":"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","file":"static/js/main.45f1ce7a.chunk.js","sourcesContent":["import React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst ChatContext = createContext();\n\nconst ChatProvider = ({ children }) => {\n  const [selectedChat, setSelectedChat] = useState();\n  const [user, setUser] = useState();\n  const [notification, setNotification] = useState([]);\n  const [chats, setChats] = useState();\n\n  const history = useHistory();\n\n  useEffect(() => {\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\n    setUser(userInfo);\n    // setUser(user);\n\n    if (!userInfo) history.push(\"/\");\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [history]);\n\n  return (\n    <ChatContext.Provider\n      value={{\n        selectedChat,\n        setSelectedChat,\n        user,\n        setUser,\n        notification,\n        setNotification,\n        chats,\n        setChats,\n      }}\n    >\n      {children}\n    </ChatContext.Provider>\n  );\n};\n\nexport const ChatState = () => {\n  return useContext(ChatContext);\n};\n\nexport default ChatProvider;\n","import { Button } from \"@chakra-ui/button\";\nimport { FormControl, FormLabel } from \"@chakra-ui/form-control\";\nimport { Input, InputGroup, InputRightElement } from \"@chakra-ui/input\";\nimport { VStack } from \"@chakra-ui/layout\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { useToast } from \"@chakra-ui/react\";\nimport { useHistory } from \"react-router-dom\";\nimport { ChatState } from \"../../Context/ChatProvider\";\nimport { ViewIcon, ViewOffIcon } from \"@chakra-ui/icons\";\n\nconst Login = () => {\n  const [show, setShow] = useState(false);\n  const handleClick = () => setShow(!show);\n  const toast = useToast();\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const [loading, setLoading] = useState(false);\n\n  const history = useHistory();\n  const { user, setUser } = ChatState();\n\n  const submitHandler = async () => {\n    setLoading(true);\n    if (!email || !password) {\n      toast({\n        title: \"Please Fill all the Feilds\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n      return;\n    }\n\n    try {\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n      };\n\n      const { data } = await axios.post(\n        \"/api/user/login\",\n        { email, password },\n        config\n      );\n\n      toast({\n        title: \"Login Successful\",\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\n      setUser(data);\n      setLoading(false);\n      history.push(\"/chats\");\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n    }\n  };\n\n  return (\n    <VStack spacing=\"10px\">\n      <FormControl id=\"email\" isRequired>\n        <FormLabel>Email Address</FormLabel>\n        <Input\n          value={email}\n          type=\"email\"\n          placeholder=\"Enter Your Email Address\"\n          onChange={(e) => setEmail(e.target.value)}\n        />\n      </FormControl>\n      <FormControl id=\"password\" isRequired>\n        <FormLabel>Password</FormLabel>\n        <InputGroup size=\"md\">\n          <Input\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            type={show ? \"text\" : \"password\"}\n            placeholder=\"Enter password\"\n          />\n          <InputRightElement width=\"4.5rem\">\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\n              {show ? <ViewOffIcon /> : <ViewIcon />}\n            </Button>\n          </InputRightElement>\n        </InputGroup>\n      </FormControl>\n      <Button\n        bg=\"#000\"\n        width=\"30%\"\n        _hover={{ bg: \"#fff\", color: \"#000\", border: \"1px solid #000\" }}\n        color=\"#fff\"\n        style={{ marginTop: 15 }}\n        onClick={submitHandler}\n        isLoading={loading}\n      >\n        Login\n      </Button>\n    </VStack>\n  );\n};\n\nexport default Login;\n","import { Button } from \"@chakra-ui/button\";\nimport { FormControl, FormLabel } from \"@chakra-ui/form-control\";\nimport { Input, InputGroup, InputRightElement } from \"@chakra-ui/input\";\nimport { VStack } from \"@chakra-ui/layout\";\nimport { useToast } from \"@chakra-ui/toast\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { ChatState } from \"../../Context/ChatProvider\";\nimport { ViewIcon, ViewOffIcon } from \"@chakra-ui/icons\";\n\nconst Signup = () => {\n  const [show, setShow] = useState(false);\n  const [cshow, setCshow] = useState(false);\n  const handleClick = () => setShow(!show);\n  const toast = useToast();\n  const history = useHistory();\n\n  const [name, setName] = useState();\n  const [email, setEmail] = useState();\n  const [confirmpassword, setConfirmpassword] = useState();\n  const [password, setPassword] = useState();\n  const [pic, setPic] = useState();\n  const [picLoading, setPicLoading] = useState(false);\n\n  const { user, setUser } = ChatState();\n\n  const submitHandler = async () => {\n    setPicLoading(true);\n    if (!name || !email || !password || !confirmpassword) {\n      toast({\n        title: \"Please Fill all the Feilds\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setPicLoading(false);\n      return;\n    }\n    if (password !== confirmpassword) {\n      toast({\n        title: \"Passwords Do Not Match\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n    try {\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n      };\n      const { data } = await axios.post(\n        \"/api/user\",\n        {\n          name,\n          email,\n          password,\n          pic,\n        },\n        config\n      );\n\n      toast({\n        title: \"Registration Successful\",\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setUser(data);\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\n      setPicLoading(false);\n      history.push(\"/chats\");\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setPicLoading(false);\n    }\n  };\n\n  const postDetails = (pics) => {\n    setPicLoading(true);\n    if (pics === undefined) {\n      toast({\n        title: \"Please Select an Image!\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n\n    if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\n      const data = new FormData();\n      data.append(\"file\", pics);\n      data.append(\"upload_preset\", \"chat-app\");\n      data.append(\"cloud_name\", \"djn1nfuky\");\n      fetch(\"https://api.cloudinary.com/v1_1/djn1nfuky/image/upload\", {\n        method: \"post\",\n        body: data,\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          setPic(data.url.toString());\n\n          setPicLoading(false);\n        })\n        .catch((err) => {\n          console.log(err);\n          setPicLoading(false);\n        });\n    } else {\n      toast({\n        title: \"Please Select an Image!\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setPicLoading(false);\n      return;\n    }\n  };\n\n  return (\n    <VStack spacing=\"5px\">\n      <FormControl id=\"first-name\" isRequired>\n        <FormLabel>Name</FormLabel>\n        <Input\n          placeholder=\"Enter Your Name\"\n          onChange={(e) => setName(e.target.value)}\n        />\n      </FormControl>\n      <FormControl id=\"email\" isRequired>\n        <FormLabel>Email Address</FormLabel>\n        <Input\n          type=\"email\"\n          placeholder=\"Enter Your Email Address\"\n          onChange={(e) => setEmail(e.target.value)}\n        />\n      </FormControl>\n      <FormControl id=\"password\" isRequired>\n        <FormLabel>Password</FormLabel>\n        <InputGroup size=\"md\">\n          <Input\n            type={show ? \"text\" : \"password\"}\n            placeholder=\"Enter Password\"\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          <InputRightElement width=\"4.5rem\">\n            <Button h=\"1.75rem\" size=\"sm\" onClick={() => setShow(!show)}>\n              {show ? <ViewOffIcon /> : <ViewIcon />}\n            </Button>\n          </InputRightElement>\n        </InputGroup>\n      </FormControl>\n      <FormControl id=\"password\" isRequired>\n        <FormLabel>Confirm Password</FormLabel>\n        <InputGroup size=\"md\">\n          <Input\n            type={cshow ? \"text\" : \"password\"}\n            placeholder=\"Confirm password\"\n            onChange={(e) => setConfirmpassword(e.target.value)}\n          />\n          <InputRightElement width=\"4.5rem\">\n            <Button h=\"1.75rem\" size=\"sm\" onClick={() => setCshow(!cshow)}>\n              {cshow ? <ViewOffIcon /> : <ViewIcon />}\n            </Button>\n          </InputRightElement>\n        </InputGroup>\n      </FormControl>\n      <FormControl id=\"pic\">\n        <FormLabel>Upload your Picture</FormLabel>\n        <Input\n          type=\"file\"\n          p={1.5}\n          accept=\"image/*\"\n          onChange={(e) => postDetails(e.target.files[0])}\n        />\n      </FormControl>\n      <Button\n        bg=\"#000\"\n        width=\"30%\"\n        _hover={{ bg: \"#fff\", color: \"#000\", border: \"1px solid #000\" }}\n        color=\"#fff\"\n        style={{ marginTop: 15 }}\n        onClick={submitHandler}\n        isLoading={picLoading}\n      >\n        Sign Up\n      </Button>\n    </VStack>\n  );\n};\n\nexport default Signup;\n","import {\n  Box,\n  Container,\n  Tab,\n  TabList,\n  TabPanel,\n  TabPanels,\n  Tabs,\n  Text,\n} from \"@chakra-ui/react\";\nimport { useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport Login from \"../components/Authentication/Login\";\nimport Signup from \"../components/Authentication/Signup\";\n\nfunction Homepage() {\n  const history = useHistory();\n\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem(\"userInfo\"));\n\n    if (user) history.push(\"/chats\");\n  }, [history]);\n\n  return (\n    <Container maxW=\"xl\" centerContent>\n      <Box\n        d=\"flex\"\n        justifyContent=\"center\"\n        p={3}\n        bg=\"white\"\n        w=\"100%\"\n        m=\"40px 0 15px 0\"\n        borderRadius=\"lg\"\n        borderWidth=\"1px\"\n      >\n        <Text fontSize=\"4xl\" fontFamily=\"Work sans\">\n          Flipho-Chat-Room\n        </Text>\n      </Box>\n      <Box bg=\"white\" w=\"100%\" p={4} borderRadius=\"lg\" borderWidth=\"1px\">\n        <Tabs isFitted variant=\"enclosed\">\n          <TabList mb=\"1em\">\n            <Tab>Login</Tab>\n            <Tab>Sign Up</Tab>\n          </TabList>\n          <TabPanels>\n            <TabPanel>\n              <Login />\n            </TabPanel>\n            <TabPanel>\n              <Signup />\n            </TabPanel>\n          </TabPanels>\n        </Tabs>\n      </Box>\n    </Container>\n  );\n}\n\nexport default Homepage;\n","import { FormControl } from \"@chakra-ui/form-control\";\nimport { Input } from \"@chakra-ui/input\";\nimport { Box, Text } from \"@chakra-ui/layout\";\nimport \"./styles.css\";\nimport { IconButton, Spinner, useToast, Avatar } from \"@chakra-ui/react\";\nimport { getSender, getSenderPic, getSenderFull } from \"../config/ChatLogics\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { ArrowBackIcon } from \"@chakra-ui/icons\";\nimport ProfileModal from \"./miscellaneous/ProfileModal\";\nimport ScrollableChat from \"./ScrollableChat\";\nimport Lottie from \"react-lottie\";\nimport animationData from \"../animations/typing.json\";\n\nimport io from \"socket.io-client\";\nimport UpdateGroupChatModal from \"./miscellaneous/UpdateGroupChatModal\";\nimport { ChatState } from \"../Context/ChatProvider\";\nconst ENDPOINT = \"https://fliphochat.onrender.com/\";\n// const ENDPOINT = \"http://localhost:5000\";\nvar socket, selectedChatCompare;\n\nconst SingleChat = ({ fetchAgain, setFetchAgain }) => {\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [socketConnected, setSocketConnected] = useState(false);\n  const [typing, setTyping] = useState(false);\n  const [istyping, setIsTyping] = useState(false);\n  const toast = useToast();\n\n  const defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: animationData,\n    rendererSettings: {\n      preserveAspectRatio: \"xMidYMid slice\",\n    },\n  };\n  const { selectedChat, setSelectedChat, user, notification, setNotification } =\n    ChatState();\n\n  const fetchMessages = async () => {\n    if (!selectedChat) return;\n\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      setLoading(true);\n\n      const { data } = await axios.get(\n        `/api/message/${selectedChat._id}`,\n        config\n      );\n      setMessages(data);\n      setLoading(false);\n\n      socket.emit(\"join chat\", selectedChat._id);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Messages\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n    }\n  };\n\n  const sendMessage = async (event) => {\n    if (event.key === \"Enter\" && newMessage) {\n      socket.emit(\"stop typing\", selectedChat._id);\n      try {\n        const config = {\n          headers: {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${user.token}`,\n          },\n        };\n        setNewMessage(\"\");\n        const { data } = await axios.post(\n          \"/api/message\",\n          {\n            content: newMessage,\n            chatId: selectedChat,\n          },\n          config\n        );\n        socket.emit(\"new message\", data);\n        setMessages([...messages, data]);\n      } catch (error) {\n        toast({\n          title: \"Error Occured!\",\n          description: \"Failed to send the Message\",\n          status: \"error\",\n          duration: 5000,\n          isClosable: true,\n          position: \"bottom\",\n        });\n      }\n    }\n  };\n\n  useEffect(() => {\n    socket = io(ENDPOINT);\n    socket.emit(\"setup\", user);\n    socket.on(\"connected\", () => setSocketConnected(true));\n    socket.on(\"typing\", () => setIsTyping(true));\n    socket.on(\"stop typing\", () => setIsTyping(false));\n\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    fetchMessages();\n\n    selectedChatCompare = selectedChat;\n    // eslint-disable-next-line\n  }, [selectedChat]);\n\n  useEffect(() => {\n    socket.on(\"message recieved\", (newMessageRecieved) => {\n      if (\n        !selectedChatCompare || // if chat is not selected or doesn't match current chat\n        selectedChatCompare._id !== newMessageRecieved.chat._id\n      ) {\n        if (!notification.includes(newMessageRecieved)) {\n          setNotification([newMessageRecieved, ...notification]);\n          setFetchAgain(!fetchAgain);\n        }\n      } else {\n        setMessages([...messages, newMessageRecieved]);\n      }\n    });\n  });\n\n  const typingHandler = (e) => {\n    setNewMessage(e.target.value);\n\n    if (!socketConnected) return;\n\n    if (!typing) {\n      setTyping(true);\n      socket.emit(\"typing\", selectedChat._id);\n    }\n    let lastTypingTime = new Date().getTime();\n    var timerLength = 3000;\n    setTimeout(() => {\n      var timeNow = new Date().getTime();\n      var timeDiff = timeNow - lastTypingTime;\n      if (timeDiff >= timerLength && typing) {\n        socket.emit(\"stop typing\", selectedChat._id);\n        setTyping(false);\n      }\n    }, timerLength);\n  };\n\n  const capitalizeFirstLetter = (str) => {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  };\n\n  return (\n    <>\n      {selectedChat ? (\n        <>\n          <Box\n            fontSize={{ base: \"28px\", md: \"30px\" }}\n            pb={3}\n            px={2}\n            w=\"100%\"\n            fontFamily=\"Work sans\"\n            d=\"flex\"\n            flexDirection=\"row\"\n            justifyContent={{ base: \"space-between\" }}\n            alignItems=\"center\"\n          >\n            {messages &&\n              (!selectedChat.isGroupChat ? (\n                <>\n                  <Box d=\"flex\">\n                    <Avatar src={getSenderPic(user, selectedChat.users)} />\n                    <Text pl={2} as=\"b\" fontSize=\"2xl\">\n                      {getSender(user, selectedChat.users) &&\n                        capitalizeFirstLetter(\n                          getSender(user, selectedChat.users)\n                        )}\n                    </Text>\n                  </Box>\n                  <ProfileModal\n                    user={getSenderFull(user, selectedChat.users)}\n                  />\n                </>\n              ) : (\n                <>\n                  <Box d=\"flex\">\n                    <Avatar src={getSenderPic(user, selectedChat.users)} />\n                    <Text pl={2} fontSize=\"2xl\" as=\"b\">\n                      {selectedChat.chatName &&\n                        capitalizeFirstLetter(selectedChat.chatName)}\n                    </Text>\n                  </Box>\n                  <UpdateGroupChatModal\n                    fetchMessages={fetchMessages}\n                    fetchAgain={fetchAgain}\n                    setFetchAgain={setFetchAgain}\n                  />\n                </>\n              ))}\n          </Box>\n          <Box\n            d=\"flex\"\n            flexDir=\"column\"\n            justifyContent=\"flex-end\"\n            p={3}\n            bg=\"#E8E8E8\"\n            w=\"100%\"\n            h=\"100%\"\n            borderRadius=\"lg\"\n            overflowY=\"hidden\"\n          >\n            {loading ? (\n              <Spinner\n                size=\"xl\"\n                w={20}\n                h={20}\n                alignSelf=\"center\"\n                margin=\"auto\"\n              />\n            ) : (\n              <div className=\"messages\">\n                <ScrollableChat messages={messages} />\n              </div>\n            )}\n\n            <FormControl\n              onKeyDown={sendMessage}\n              id=\"first-name\"\n              isRequired\n              mt={3}\n            >\n              {istyping ? (\n                <div>\n                  <Lottie\n                    options={defaultOptions}\n                    // height={50}\n                    width={70}\n                    style={{ marginBottom: 15, marginLeft: 0 }}\n                  />\n                </div>\n              ) : (\n                <></>\n              )}\n              <Input\n                variant=\"filled\"\n                bg=\"#E0E0E0\"\n                placeholder=\"Enter a message..\"\n                value={newMessage}\n                onChange={typingHandler}\n              />\n            </FormControl>\n          </Box>\n        </>\n      ) : (\n        // to get socket.io on same page\n        <Box d=\"flex\" alignItems=\"center\" justifyContent=\"center\" h=\"100%\">\n          <Text fontSize=\"3xl\" pb={3} fontFamily=\"Work sans\">\n            Click on a user to start chatting\n          </Text>\n        </Box>\n      )}\n    </>\n  );\n};\n\nexport default SingleChat;\n","export const isSameSenderMargin = (messages, m, i, userId) => {\n  if (\n    i < messages.length - 1 &&\n    messages[i + 1].sender._id === m.sender._id &&\n    messages[i].sender._id !== userId\n  )\n    return 33;\n  else if (\n    (i < messages.length - 1 &&\n      messages[i + 1].sender._id !== m.sender._id &&\n      messages[i].sender._id !== userId) ||\n    (i === messages.length - 1 && messages[i].sender._id !== userId)\n  )\n    return 0;\n  else return \"auto\";\n};\n\nexport const isSameSender = (messages, m, i, userId) => {\n  return (\n    i < messages.length - 1 &&\n    (messages[i + 1].sender._id !== m.sender._id ||\n      messages[i + 1].sender._id === undefined) &&\n    messages[i].sender._id !== userId\n  );\n};\n\nexport const isLastMessage = (messages, i, userId) => {\n  return (\n    i === messages.length - 1 &&\n    messages[messages.length - 1].sender._id !== userId &&\n    messages[messages.length - 1].sender._id\n  );\n};\n\nexport const isSameUser = (messages, m, i) => {\n  return i > 0 && messages[i - 1].sender._id === m.sender._id;\n};\n\nexport const getSender = (loggedUser, users) => {\n  return users[0]._id === loggedUser._id ? users[1].name : users[0].name;\n};\nexport const getSenderPic = (loggedUser, users) => {\n  return users[0]._id === loggedUser._id ? users[1].pic : users[0].pic;\n};\n\nexport const getSenderFull = (loggedUser, users) => {\n  return users[0]._id === loggedUser._id ? users[1] : users[0];\n};\n","import { ViewIcon } from \"@chakra-ui/icons\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Button,\n  useDisclosure,\n  IconButton,\n  Text,\n  Image,\n} from \"@chakra-ui/react\";\n\nconst ProfileModal = ({ user, children }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  return (\n    <>\n      {children ? (\n        <span onClick={onOpen}>{children}</span>\n      ) : (\n        <IconButton d={{ base: \"flex\" }} icon={<ViewIcon />} onClick={onOpen} />\n      )}\n      <Modal size=\"lg\" onClose={onClose} isOpen={isOpen} isCentered>\n        <ModalOverlay />\n        <ModalContent h=\"410px\">\n          <ModalHeader\n            fontSize=\"40px\"\n            fontFamily=\"Work sans\"\n            d=\"flex\"\n            justifyContent=\"center\"\n          >\n            {user.name}\n          </ModalHeader>\n          <ModalCloseButton />\n          <ModalBody\n            d=\"flex\"\n            flexDir=\"column\"\n            alignItems=\"center\"\n            justifyContent=\"space-between\"\n          >\n            <Image\n              borderRadius=\"full\"\n              boxSize=\"150px\"\n              src={user.pic}\n              alt={user.name}\n            />\n            <Text\n              fontSize={{ base: \"28px\", md: \"30px\" }}\n              fontFamily=\"Work sans\"\n            >\n              Email: {user.email}\n            </Text>\n          </ModalBody>\n          <ModalFooter>\n            <Button onClick={onClose}>Close</Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default ProfileModal;\n","import { Avatar } from \"@chakra-ui/avatar\";\nimport { Tooltip } from \"@chakra-ui/tooltip\";\nimport ScrollableFeed from \"react-scrollable-feed\";\nimport {\n  isLastMessage,\n  isSameSender,\n  isSameSenderMargin,\n  isSameUser,\n} from \"../config/ChatLogics\";\nimport { ChatState } from \"../Context/ChatProvider\";\n\nconst ScrollableChat = ({ messages }) => {\n  const { user } = ChatState();\n\n  return (\n    <ScrollableFeed>\n      {messages &&\n        messages.map((m, i) => (\n          <div style={{ display: \"flex\" }} key={m._id}>\n            {(isSameSender(messages, m, i, user._id) ||\n              isLastMessage(messages, i, user._id)) && (\n              <Tooltip label={m.sender.name} placement=\"bottom-start\" hasArrow>\n                <Avatar\n                  mt=\"7px\"\n                  mr={1}\n                  size=\"sm\"\n                  cursor=\"pointer\"\n                  name={m.sender.name}\n                  src={m.sender.pic}\n                />\n              </Tooltip>\n            )}\n            <span\n              style={{\n                backgroundColor: `${\n                  m.sender._id === user._id ? \"#BEE3F8\" : \"#B9F5D0\"\n                }`,\n                marginLeft: isSameSenderMargin(messages, m, i, user._id),\n                marginTop: isSameUser(messages, m, i, user._id) ? 3 : 10,\n                borderRadius: \"20px\",\n                padding: \"5px 15px\",\n                maxWidth: \"75%\",\n              }}\n            >\n              {m.content}\n            </span>\n          </div>\n        ))}\n    </ScrollableFeed>\n  );\n};\n\nexport default ScrollableChat;\n","import { CloseIcon } from \"@chakra-ui/icons\";\nimport { Badge } from \"@chakra-ui/layout\";\n\nconst UserBadgeItem = ({ user, handleFunction, admin }) => {\n  return (\n    <Badge\n      px={2}\n      py={1}\n      borderRadius=\"lg\"\n      m={1}\n      mb={2}\n      variant=\"solid\"\n      fontSize={12}\n      colorScheme=\"purple\"\n      cursor=\"pointer\"\n      onClick={handleFunction}\n    >\n      {user.name}\n      {admin === user._id && <span> (Admin)</span>}\n      <CloseIcon pl={1} />\n    </Badge>\n  );\n};\n\nexport default UserBadgeItem;\n","import { Avatar } from \"@chakra-ui/avatar\";\nimport { Box, Text } from \"@chakra-ui/layout\";\n\nconst UserListItem = ({ user, handleFunction }) => {\n  return (\n    <Box\n      onClick={handleFunction}\n      cursor=\"pointer\"\n      bg=\"#E8E8E8\"\n      _hover={{\n        background: \"#38B2AC\",\n        color: \"white\",\n      }}\n      w=\"100%\"\n      d=\"flex\"\n      alignItems=\"center\"\n      color=\"black\"\n      px={3}\n      py={2}\n      // mb={2}\n      borderRadius=\"lg\"\n    >\n      <Avatar\n        mr={2}\n        size=\"sm\"\n        cursor=\"pointer\"\n        name={user.name}\n        src={user.pic}\n      />\n      <Box>\n        <Text>{user.name}</Text>\n        <Text fontSize=\"xs\">\n          <b>Email : </b>\n          {user.email}\n        </Text>\n      </Box>\n    </Box>\n  );\n};\n\nexport default UserListItem;\n","import { Avatar } from \"@chakra-ui/avatar\";\nimport { Box, Text } from \"@chakra-ui/layout\";\nimport { ChatState } from \"../../Context/ChatProvider\";\nimport { useState } from \"react\";\nimport { SmallAddIcon, SmallCloseIcon } from \"@chakra-ui/icons\";\nimport { Badge, Button } from \"@chakra-ui/react\";\nconst ExistGroupUserListItem = ({\n  admin,\n  useringroup,\n  handleRemoveFunction,\n  handleAddToGroupAdminFunction,\n  handleRemoveToGroupAdminFunction,\n}) => {\n  const { user, setSelectedChat } = ChatState();\n  const [isOpen, setIsOpen] = useState(false);\n\n  return (\n    <Box\n      cursor=\"pointer\"\n      bg=\"#E8E8E8\"\n      _hover={{\n        background: \"#38B2AC\",\n        color: \"white\",\n      }}\n      w=\"100%\"\n      d=\"flex\"\n      alignItems=\"center\"\n      color=\"black\"\n      px={3}\n      py={2}\n      mb={2}\n      borderRadius=\"lg\"\n      justifyContent=\"space-between\"\n      pos=\"relative\"\n    >\n      <Box ml={2} d=\"flex\" alignItems=\"center\" w=\"100%\">\n        <Avatar\n          mr={2}\n          size=\"sm\"\n          cursor=\"pointer\"\n          name={useringroup.name}\n          src={useringroup.pic}\n        />\n        <Box\n          w=\"100%\"\n          d=\"flex\"\n          alignItems=\"center\"\n          justifyContent=\"space-between\"\n        >\n          <Box>\n            <Text>{useringroup.name}</Text>\n            <Text fontSize=\"xs\">\n              <b>Email : </b>\n              {useringroup.email}\n            </Text>\n          </Box>\n          {admin.some((admin) => admin._id === useringroup._id) && (\n            <Badge\n              ml=\"3\"\n              colorScheme=\"green\"\n              mr={3}\n              px={2}\n              py={1}\n              borderRadius=\"lg\"\n            >\n              Chat Admin\n            </Badge>\n          )}\n        </Box>\n        {admin.some((admin) => admin._id === user._id) && (\n          <>\n            <Box onClick={() => setIsOpen(!isOpen)}>\n              {!isOpen ? <SmallAddIcon /> : <SmallCloseIcon />}\n            </Box>\n            {isOpen && (\n              <Box\n                pos=\"absolute\"\n                right=\"7\"\n                top=\"10\"\n                bg=\"#fff\"\n                color=\"#000\"\n                d=\"flex\"\n                flexDirection=\"column\"\n                zIndex=\"100\"\n                borderRadius=\"md\"\n              >\n                <Box\n                  variant=\"link\"\n                  py={1}\n                  px={2}\n                  // onClick={() => setSelectedChat(useringroup)}\n                >\n                  Message {useringroup.name}\n                </Box>\n                {!admin.some((admin) => admin._id === useringroup._id) ? (\n                  <Box\n                    variant=\"link\"\n                    py={1}\n                    px={2}\n                    onClick={() => {\n                      handleAddToGroupAdminFunction();\n                      setIsOpen(!isOpen);\n                    }}\n                  >\n                    Make group admin\n                  </Box>\n                ) : (\n                  <Box\n                    variant=\"link\"\n                    py={1}\n                    px={2}\n                    onClick={() => {\n                      handleRemoveToGroupAdminFunction();\n                      setIsOpen(!isOpen);\n                    }}\n                  >\n                    Dismiss as admin\n                  </Box>\n                )}\n\n                <Box\n                  py={1}\n                  px={2}\n                  variant=\"link\"\n                  onClick={() => {\n                    handleRemoveFunction();\n                    setIsOpen(!isOpen);\n                  }}\n                >\n                  Remove {useringroup.name}\n                </Box>\n              </Box>\n            )}\n          </>\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nexport default ExistGroupUserListItem;\n","import { ViewIcon, CloseIcon, SmallAddIcon, EditIcon } from \"@chakra-ui/icons\";\nimport {\n  Button,\n  useDisclosure,\n  FormControl,\n  Input,\n  useToast,\n  Box,\n  IconButton,\n  Text,\n  Spinner,\n  Image,\n  Drawer,\n  DrawerBody,\n  DrawerFooter,\n  DrawerHeader,\n  DrawerOverlay,\n  DrawerContent,\n  DrawerCloseButton,\n  Stack,\n} from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { ChatState } from \"../../Context/ChatProvider\";\nimport UserBadgeItem from \"../userAvatar/UserBadgeItem\";\nimport UserListItem from \"../userAvatar/UserListItem\";\nimport ExistGroupUserListItem from \"../userAvatar/existGroupUserListItem\";\nimport React from \"react\";\n\nconst UpdateGroupChatModal = ({ fetchMessages, fetchAgain, setFetchAgain }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const btnRef = React.useRef();\n\n  const [groupChatName, setGroupChatName] = useState();\n  const [search, setSearch] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [renameloading, setRenameLoading] = useState(false);\n  const toast = useToast();\n\n  const { selectedChat, setSelectedChat, user } = ChatState();\n\n  const [pic, setPic] = useState();\n  const [picLoading, setPicLoading] = useState(false);\n\n  const handleSearch = async (query) => {\n    setSearch(query);\n    if (!query) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\n\n      setLoading(false);\n      setSearchResult(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Search Results\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n      setLoading(false);\n    }\n  };\n\n  const handleRename = async () => {\n    if (!groupChatName) return;\n\n    try {\n      setRenameLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.put(\n        `/api/chat/rename`,\n        {\n          chatId: selectedChat._id,\n          chatName: groupChatName,\n        },\n        config\n      );\n\n      setSelectedChat(data);\n      setFetchAgain(!fetchAgain);\n      setRenameLoading(false);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setRenameLoading(false);\n    }\n    setGroupChatName(\"\");\n  };\n\n  const handleAddUser = async (user1) => {\n    if (selectedChat.users.find((u) => u._id === user1._id)) {\n      toast({\n        title: \"User Already in group!\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n    if (!selectedChat.groupAdmin.some((admin) => admin._id === user._id)) {\n      toast({\n        title: \"Only admins can add someone!\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.put(\n        `/api/chat/groupadd`,\n        {\n          chatId: selectedChat._id,\n          userId: user1._id,\n        },\n        config\n      );\n\n      setSelectedChat(data);\n      setFetchAgain(!fetchAgain);\n      setLoading(false);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n    }\n    setGroupChatName(\"\");\n  };\n\n  const handleRemove = async (user1) => {\n    if (selectedChat.groupOwner._id === user1._id) {\n      if (selectedChat.groupOwner._id === user._id) {\n        toast({\n          title: \"You cannot remove youself until transfer group ownership!\",\n          status: \"error\",\n          duration: 5000,\n          isClosable: true,\n          position: \"bottom\",\n        });\n        return;\n      } else {\n        toast({\n          title: \"You cant remove Group Owner!\",\n          status: \"error\",\n          duration: 5000,\n          isClosable: true,\n          position: \"bottom\",\n        });\n        return;\n      }\n    }\n\n    if (\n      !selectedChat.groupAdmin.some((admin) => admin._id === user._id) &&\n      !selectedChat.groupAdmin.some((admin) => admin._id === user1._id)\n    ) {\n      toast({\n        title: \"Only admins can remove someone!\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.put(\n        `/api/chat/groupremove`,\n        {\n          chatId: selectedChat._id,\n          userId: user1._id,\n        },\n        config\n      );\n\n      setSelectedChat(data);\n      setFetchAgain(!fetchAgain);\n      fetchMessages();\n      setLoading(false);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n    }\n    setGroupChatName(\"\");\n  };\n\n  const AddToGroupAdmin = async (user1) => {\n    if (selectedChat.groupAdmin.some((admin) => admin._id === user1._id)) {\n      toast({\n        title: \"User is already an admin!\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n    if (!selectedChat.groupAdmin.some((admin) => admin._id === user._id)) {\n      toast({\n        title: \"Only Group Owner can add Admin!\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.put(\n        `/api/chat/groupaddadmin`,\n        {\n          chatId: selectedChat._id,\n          userId: user1._id,\n        },\n        config\n      );\n\n      setSelectedChat(data);\n      setFetchAgain(!fetchAgain);\n      setLoading(false);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n    }\n  };\n\n  const RemoveToGroupAdmin = async (user1) => {\n    if (selectedChat.groupOwner._id === user1._id) {\n      toast({\n        title: \"You cannot remove Group Owner!\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n\n    if (\n      !selectedChat.groupAdmin.some((admin) => admin._id === user._id) &&\n      !selectedChat.groupAdmin.some((admin) => admin._id === user1._id)\n    ) {\n      toast({\n        title: \"Only admins can remove someone!\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.put(\n        `/api/chat/groupremoveadmin`,\n        {\n          chatId: selectedChat._id,\n          userId: user1._id,\n        },\n        config\n      );\n\n      setSelectedChat(data);\n      setFetchAgain(!fetchAgain);\n      setLoading(false);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n    }\n  };\n  const postDetails = (pics) => {\n    setPicLoading(true);\n    if (pics === undefined) {\n      toast({\n        title: \"Please Select an Image!\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n\n    if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\n      const data = new FormData();\n      data.append(\"file\", pics);\n      data.append(\"upload_preset\", \"chat-app\");\n      data.append(\"cloud_name\", \"djn1nfuky\");\n      fetch(\"https://api.cloudinary.com/v1_1/djn1nfuky/image/upload\", {\n        method: \"post\",\n        body: data,\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          setPic(data.url.toString());\n\n          setPicLoading(false);\n        })\n        .catch((err) => {\n          setPicLoading(false);\n        });\n    } else {\n      toast({\n        title: \"Please Select an Image!\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setPicLoading(false);\n      return;\n    }\n  };\n\n  return (\n    <>\n      <IconButton d={{ base: \"flex\" }} icon={<ViewIcon />} onClick={onOpen} />\n\n      <Drawer\n        isOpen={isOpen}\n        placement=\"right\"\n        onClose={onClose}\n        finalFocusRef={btnRef}\n        size=\"sm\"\n      >\n        <DrawerOverlay />\n        <DrawerContent>\n          <DrawerCloseButton />\n          <Box\n            d=\"flex\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n            w=\"100%\"\n            pt={10}\n          >\n            <Image\n              borderRadius=\"full\"\n              boxSize=\"110px\"\n              src={selectedChat.pic}\n              alt={selectedChat.chatname}\n            />\n          </Box>\n          <Box\n            d=\"flex\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n            w=\"100%\"\n            pl={20}\n            my={-3}\n          >\n            <label htmlFor=\"upload-input\">\n              <EditIcon color=\"#bdbdbd\" />\n            </label>\n            <Input\n              type=\"file\"\n              display=\"none\"\n              onChange={(e) => postDetails(e.target.files[0])}\n              id=\"upload-input\"\n            />\n          </Box>\n          <DrawerHeader\n            fontSize=\"35px\"\n            fontFamily=\"Work sans\"\n            d=\"flex\"\n            justifyContent=\"center\"\n          >\n            {selectedChat.chatName}\n          </DrawerHeader>\n\n          <DrawerBody d=\"flex\" flexDir=\"column\" alignItems=\"center\">\n            <Text fontStyle=\"italic\" w=\"100%\" pl={3} pb={2} color=\"#7e7e7e\">\n              Created by{\" \"}\n              {selectedChat.groupOwner._id === user._id\n                ? \"You\"\n                : selectedChat.groupOwner.name}\n              , {selectedChat.createdAt.slice(0, 10)}\n            </Text>\n            <FormControl d=\"flex\">\n              <Input\n                placeholder=\"Chat Name\"\n                mb={3}\n                value={groupChatName}\n                onChange={(e) => setGroupChatName(e.target.value)}\n              />\n              <Button\n                variant=\"solid\"\n                colorScheme=\"teal\"\n                ml={1}\n                isLoading={renameloading}\n                onClick={handleRename}\n              >\n                Update\n              </Button>\n            </FormControl>\n            <FormControl>\n              <Input\n                placeholder=\"Add User to group\"\n                mb={1}\n                onChange={(e) => handleSearch(e.target.value)}\n              />\n            </FormControl>\n            {searchResult.length > 0 && (\n              <Box d=\"flex\" w=\"100%\" px={3} py={3}>\n                <CloseIcon boxSize={2} onClick={() => setSearchResult([])} />\n              </Box>\n            )}\n            {loading ? (\n              <Spinner size=\"lg\" />\n            ) : (\n              <>\n                <Stack\n                  overflowY=\"scroll\"\n                  w=\"100%\"\n                  h={searchResult.length > 3 && \"197px\"}\n                >\n                  {searchResult?.map((searchUser) => (\n                    <UserListItem\n                      key={searchUser._id}\n                      user={searchUser}\n                      handleFunction={() => handleAddUser(searchUser)}\n                    />\n                  ))}\n                </Stack>\n              </>\n            )}\n            <Text\n              w=\"100%\"\n              textAlign=\"start\"\n              pl={3}\n              color=\"#7e7e7e\"\n              fontStyle=\"italic\"\n              my={2}\n            >\n              {selectedChat && selectedChat.users.length} participant\n              {selectedChat.length !== 1 ? \"s\" : \"\"}\n            </Text>\n\n            {selectedChat.users\n              .filter(\n                (u) =>\n                  !selectedChat.groupAdmin.some((admin) => admin._id === u._id)\n              )\n              .concat(\n                selectedChat.users.filter((u) =>\n                  selectedChat.groupAdmin.some((admin) => admin._id === u._id)\n                )\n              )\n              .reverse()\n              .map((u) => (\n                <ExistGroupUserListItem\n                  key={u._id}\n                  useringroup={u}\n                  admin={selectedChat.groupAdmin}\n                  handleRemoveFunction={() => handleRemove(u)}\n                  handleAddToGroupAdminFunction={() => AddToGroupAdmin(u)}\n                  handleRemoveToGroupAdminFunction={() => RemoveToGroupAdmin(u)}\n                />\n              ))}\n          </DrawerBody>\n          <DrawerFooter>\n            <Button onClick={() => handleRemove(user)} colorScheme=\"red\">\n              Leave Group\n            </Button>\n          </DrawerFooter>\n        </DrawerContent>\n      </Drawer>\n    </>\n  );\n};\n\nexport default UpdateGroupChatModal;\n","import { Box } from \"@chakra-ui/layout\";\nimport \"./styles.css\";\nimport SingleChat from \"./SingleChat\";\nimport { ChatState } from \"../Context/ChatProvider\";\n\nconst Chatbox = ({ fetchAgain, setFetchAgain }) => {\n  const { selectedChat } = ChatState();\n\n  return (\n    <Box\n      d={{ base: selectedChat ? \"flex\" : \"none\", md: \"flex\" }}\n      alignItems=\"center\"\n      flexDir=\"column\"\n      p={3}\n      bg=\"white\"\n      w={{ base: \"100%\", md: \"71%\" }}\n      borderRadius=\"lg\"\n      borderWidth=\"1px\"\n    >\n      <SingleChat fetchAgain={fetchAgain} setFetchAgain={setFetchAgain} />\n    </Box>\n  );\n};\n\nexport default Chatbox;\n","import { Stack } from \"@chakra-ui/layout\";\nimport { Skeleton } from \"@chakra-ui/skeleton\";\n\nconst ChatLoading = () => {\n  return (\n    <Stack>\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n    </Stack>\n  );\n};\n\nexport default ChatLoading;\n","import {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Button,\n  useDisclosure,\n  FormControl,\n  Input,\n  useToast,\n  Box,\n} from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { ChatState } from \"../../Context/ChatProvider\";\nimport UserBadgeItem from \"../userAvatar/UserBadgeItem\";\nimport UserListItem from \"../userAvatar/UserListItem\";\n\nconst GroupChatModal = ({ children }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [groupChatName, setGroupChatName] = useState();\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const toast = useToast();\n\n  const { user, chats, setChats } = ChatState();\n\n  const handleGroup = (userToAdd) => {\n    if (selectedUsers.includes(userToAdd)) {\n      toast({\n        title: \"User already added\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top\",\n      });\n      return;\n    }\n\n    setSelectedUsers([...selectedUsers, userToAdd]);\n  };\n\n  const handleSearch = async (query) => {\n    setSearch(query);\n    if (!query) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\n      \n      setLoading(false);\n      setSearchResult(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Search Results\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  const handleDelete = (delUser) => {\n    setSelectedUsers(selectedUsers.filter((sel) => sel._id !== delUser._id));\n  };\n\n  const handleSubmit = async () => {\n    if (!groupChatName || !selectedUsers) {\n      toast({\n        title: \"Please fill all the feilds\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top\",\n      });\n      return;\n    }\n\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.post(\n        `/api/chat/group`,\n        {\n          name: groupChatName,\n          users: JSON.stringify(selectedUsers.map((u) => u._id)),\n        },\n        config\n      );\n      setChats([data, ...chats]);\n      onClose();\n      toast({\n        title: \"New Group Chat Created!\",\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n    } catch (error) {\n      toast({\n        title: \"Failed to Create the Chat!\",\n        description: error.response.data,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n    }\n  };\n\n  return (\n    <>\n      <span onClick={onOpen}>{children}</span>\n\n      <Modal onClose={onClose} isOpen={isOpen} isCentered>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader\n            fontSize=\"35px\"\n            fontFamily=\"Work sans\"\n            d=\"flex\"\n            justifyContent=\"center\"\n          >\n            Create Group Chat\n          </ModalHeader>\n          <ModalCloseButton />\n          <ModalBody d=\"flex\" flexDir=\"column\" alignItems=\"center\">\n            <FormControl>\n              <Input\n                placeholder=\"Chat Name\"\n                mb={3}\n                onChange={(e) => setGroupChatName(e.target.value)}\n              />\n            </FormControl>\n            <FormControl>\n              <Input\n                placeholder=\"Add Users eg: John, Piyush, Jane\"\n                mb={1}\n                onChange={(e) => handleSearch(e.target.value)}\n              />\n            </FormControl>\n            <Box w=\"100%\" d=\"flex\" flexWrap=\"wrap\">\n              {selectedUsers.map((u) => (\n                <UserBadgeItem\n                  key={u._id}\n                  user={u}\n                  handleFunction={() => handleDelete(u)}\n                />\n              ))}\n            </Box>\n            {loading ? (\n              // <ChatLoading />\n              <div>Loading...</div>\n            ) : (\n              searchResult\n                ?.slice(0, 4)\n                .map((user) => (\n                  <UserListItem\n                    key={user._id}\n                    user={user}\n                    handleFunction={() => handleGroup(user)}\n                  />\n                ))\n            )}\n          </ModalBody>\n          <ModalFooter>\n            <Button onClick={handleSubmit} colorScheme=\"blue\">\n              Create Chat\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default GroupChatModal;\n","import { AddIcon } from \"@chakra-ui/icons\";\nimport { Box, Stack, Text } from \"@chakra-ui/layout\";\nimport { useToast } from \"@chakra-ui/toast\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { getSender, getSenderPic } from \"../config/ChatLogics\";\nimport ChatLoading from \"./ChatLoading\";\nimport GroupChatModal from \"./miscellaneous/GroupChatModal\";\nimport { Button, Avatar } from \"@chakra-ui/react\";\nimport { ChatState } from \"../Context/ChatProvider\";\n\nconst MyChats = ({ fetchAgain }) => {\n  const [loggedUser, setLoggedUser] = useState();\n\n  const { selectedChat, setSelectedChat, user, chats, setChats } = ChatState();\n\n  const toast = useToast();\n\n  const fetchChats = async () => {\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      const { data } = await axios.get(\"/api/chat\", config);\n\n      setChats(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the chats\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    // setLoggedUser(user);\n    setLoggedUser(JSON.parse(localStorage.getItem(\"userInfo\")));\n    fetchChats();\n    // eslint-disable-next-line\n  }, [fetchAgain]);\n\n  const capitalizeFirstLetter = (str) => {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  };\n\n  return (\n    <Box\n      d={{ base: selectedChat ? \"none\" : \"flex\", md: \"flex\" }}\n      flexDir=\"column\"\n      alignItems=\"center\"\n      p={3}\n      bg=\"white\"\n      w={{ base: \"100%\", md: \"28%\" }}\n      borderRadius=\"lg\"\n      borderWidth=\"1px\"\n    >\n      <Box\n        pb={3}\n        px={3}\n        fontSize={{ base: \"28px\", md: \"30px\" }}\n        fontFamily=\"Work sans\"\n        d=\"flex\"\n        w=\"100%\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n      >\n        My Chats\n        <GroupChatModal>\n          <Button\n            d=\"flex\"\n            fontSize={{ base: \"17px\", md: \"10px\", lg: \"17px\" }}\n            rightIcon={<AddIcon />}\n          >\n            New Group Chat\n          </Button>\n        </GroupChatModal>\n      </Box>\n      <Box\n        d=\"flex\"\n        flexDir=\"column\"\n        p={3}\n        bg=\"#F8F8F8\"\n        w=\"100%\"\n        h=\"100%\"\n        borderRadius=\"lg\"\n        overflowY=\"hidden\"\n      >\n        {chats ? (\n          <Stack overflowY=\"scroll\">\n            {chats.map((chat) => (\n              <Box\n                onClick={() => setSelectedChat(chat)}\n                cursor=\"pointer\"\n                bg={selectedChat === chat ? \"#38B2AC\" : \"#E8E8E8\"}\n                color={selectedChat === chat ? \"white\" : \"black\"}\n                px={3}\n                py={2}\n                borderRadius=\"lg\"\n                key={chat._id}\n                d=\"flex\"\n              >\n                <Box d=\"flex\" alignItems=\"center\">\n                  <Avatar src={getSenderPic(loggedUser, chat.users)} />\n                </Box>\n                <Box ml={3}>\n                  <Text fontSize=\"xl\">\n                    {!chat.isGroupChat\n                      ? getSender(loggedUser, chat.users) &&\n                        capitalizeFirstLetter(getSender(loggedUser, chat.users))\n                      : chat.chatName && capitalizeFirstLetter(chat.chatName)}\n                  </Text>\n                  {chat.latestMessage && (\n                    <Text fontSize=\"xs\" color=\"#3a3a3a\">\n                      {chat.latestMessage.content.length > 50\n                        ? chat.latestMessage.content.substring(0, 51) + \"...\"\n                        : chat.latestMessage.content}\n                    </Text>\n                  )}\n                </Box>\n              </Box>\n            ))}\n          </Stack>\n        ) : (\n          <ChatLoading />\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nexport default MyChats;\n","import { Button } from \"@chakra-ui/button\";\nimport { useDisclosure } from \"@chakra-ui/hooks\";\nimport { Input } from \"@chakra-ui/input\";\nimport { Box, Text } from \"@chakra-ui/layout\";\nimport {\n  Menu,\n  MenuButton,\n  MenuDivider,\n  MenuItem,\n  MenuList,\n} from \"@chakra-ui/menu\";\nimport {\n  Drawer,\n  DrawerBody,\n  DrawerContent,\n  DrawerHeader,\n  DrawerOverlay,\n} from \"@chakra-ui/modal\";\nimport { Tooltip } from \"@chakra-ui/tooltip\";\nimport { BellIcon, ChevronDownIcon } from \"@chakra-ui/icons\";\nimport { Avatar } from \"@chakra-ui/avatar\";\nimport { useHistory } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { useToast } from \"@chakra-ui/toast\";\nimport ChatLoading from \"../ChatLoading\";\nimport { Spinner } from \"@chakra-ui/spinner\";\nimport ProfileModal from \"./ProfileModal\";\nimport NotificationBadge from \"react-notification-badge\";\nimport { Effect } from \"react-notification-badge\";\nimport { getSender } from \"../../config/ChatLogics\";\nimport UserListItem from \"../userAvatar/UserListItem\";\nimport { ChatState } from \"../../Context/ChatProvider\";\n\nfunction SideDrawer() {\n  const [search, setSearch] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [loadingChat, setLoadingChat] = useState(false);\n\n  const {\n    setSelectedChat,\n    user,\n    notification,\n    setNotification,\n    chats,\n    setChats,\n  } = ChatState();\n\n  const toast = useToast();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const history = useHistory();\n\n  const logoutHandler = () => {\n    localStorage.removeItem(\"userInfo\");\n    history.push(\"/\");\n  };\n\n  const handleSearch = async () => {\n    if (!search) {\n      toast({\n        title: \"Please Enter something in search\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top-left\",\n      });\n      return;\n    }\n\n    try {\n      setLoading(true);\n\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\n\n      setLoading(false);\n      setSearchResult(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Search Results\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  const accessChat = async (userId) => {\n\n    try {\n      setLoadingChat(true);\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.post(`/api/chat`, { userId }, config);\n\n      if (!chats.find((c) => c._id === data._id)) setChats([data, ...chats]);\n      setSelectedChat(data);\n      setLoadingChat(false);\n      onClose();\n    } catch (error) {\n      toast({\n        title: \"Error fetching the chat\",\n        description: error.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  return (\n    <>\n      <Box\n        d=\"flex\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        bg=\"white\"\n        w=\"100%\"\n        p=\"5px 10px 5px 10px\"\n        borderWidth=\"5px\"\n      >\n        <Tooltip label=\"Search Users to chat\" hasArrow placement=\"bottom-end\">\n          <Button variant=\"ghost\" onClick={onOpen}>\n            <i className=\"fas fa-search\"></i>\n            <Text d={{ base: \"none\", md: \"flex\" }} px={4}>\n              Search User\n            </Text>\n          </Button>\n        </Tooltip>\n        <Text fontSize=\"2xl\" fontFamily=\"Work sans\">\n          Flipho-Chat-Room\n        </Text>\n        <div>\n          <Menu>\n            <MenuButton p={1}>\n              <NotificationBadge\n                count={notification.length}\n                effect={Effect.SCALE}\n              />\n              <BellIcon fontSize=\"2xl\" m={1} />\n            </MenuButton>\n            <MenuList pl={2}>\n              {!notification.length && \"No New Messages\"}\n              {notification.map((notif) => (\n                <MenuItem\n                  key={notif._id}\n                  onClick={() => {\n                    setSelectedChat(notif.chat);\n                    setNotification(notification.filter((n) => n !== notif));\n                  }}\n                >\n                  {notif.chat.isGroupChat\n                    ? `New Message in ${notif.chat.chatName}`\n                    : `New Message from ${getSender(user, notif.chat.users)}`}\n                </MenuItem>\n              ))}\n            </MenuList>\n          </Menu>\n          <Menu>\n            <MenuButton as={Button} bg=\"white\" rightIcon={<ChevronDownIcon />}>\n              <Avatar\n                size=\"sm\"\n                cursor=\"pointer\"\n                name={user.name}\n                src={user.pic}\n              />\n            </MenuButton>\n            <MenuList>\n              <ProfileModal user={user}>\n                <MenuItem>My Profile</MenuItem>{\" \"}\n              </ProfileModal>\n              <MenuDivider />\n              <MenuItem onClick={logoutHandler}>Logout</MenuItem>\n            </MenuList>\n          </Menu>\n        </div>\n      </Box>\n\n      <Drawer placement=\"left\" onClose={onClose} isOpen={isOpen}>\n        <DrawerOverlay />\n        <DrawerContent>\n          <DrawerHeader borderBottomWidth=\"1px\">Search Users</DrawerHeader>\n          <DrawerBody>\n            <Box d=\"flex\" pb={2}>\n              <Input\n                placeholder=\"Search by name or email\"\n                mr={2}\n                value={search}\n                onChange={(e) => setSearch(e.target.value)}\n              />\n              <Button onClick={handleSearch}>Go</Button>\n            </Box>\n            {loading ? (\n              <ChatLoading />\n            ) : (\n              searchResult?.map((searuser) => (\n                <UserListItem\n                  key={searuser._id}\n                  user={searuser}\n                  handleFunction={() => accessChat(searuser._id)}\n                />\n              ))\n            )}\n            {loadingChat && <Spinner ml=\"auto\" d=\"flex\" />}\n          </DrawerBody>\n        </DrawerContent>\n      </Drawer>\n    </>\n  );\n}\n\nexport default SideDrawer;\n","import { Box } from \"@chakra-ui/layout\";\nimport { useState } from \"react\";\nimport Chatbox from \"../components/Chatbox\";\nimport MyChats from \"../components/MyChats\";\nimport SideDrawer from \"../components/miscellaneous/SideDrawer\";\nimport { ChatState } from \"../Context/ChatProvider\";\n\nconst Chatpage = () => {\n  const [fetchAgain, setFetchAgain] = useState(false);\n  const { user } = ChatState();\n\n  return (\n    <div style={{ width: \"100%\" }}>\n      {user && <SideDrawer />}\n      <Box d=\"flex\" justifyContent=\"space-between\" w=\"100%\" h=\"91.5vh\" p=\"10px\">\n        {user && <MyChats fetchAgain={fetchAgain} />}\n        {user && (\n          <Chatbox fetchAgain={fetchAgain} setFetchAgain={setFetchAgain} />\n        )}\n      </Box>\n    </div>\n  );\n};\n\nexport default Chatpage;\n","import \"./App.css\";\nimport Homepage from \"./Pages/Homepage\";\nimport { Route } from \"react-router-dom\";\nimport Chatpage from \"./Pages/Chatpage\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Route path=\"/\" component={Homepage} exact />\n      <Route path=\"/chats\" component={Chatpage} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport ChatProvider from \"./Context/ChatProvider\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <ChakraProvider>\n      <ChatProvider>\n        <App />\n      </ChatProvider>\n    </ChakraProvider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}