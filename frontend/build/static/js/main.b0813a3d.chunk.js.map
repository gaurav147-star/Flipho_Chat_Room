{"version":3,"sources":["Context/ChatProvider.js","components/Authentication/Login.js","components/Authentication/Signup.js","Pages/Homepage.js","components/SingleChat.js","config/ChatLogics.js","components/miscellaneous/ProfileModal.js","components/ScrollableChat.js","components/userAvatar/UserListItem.js","components/userAvatar/existGroupUserListItem.js","components/miscellaneous/UpdateGroupChatModal.js","components/Chatbox.js","components/ChatLoading.js","components/userAvatar/UserBadgeItem.js","components/miscellaneous/GroupChatModal.js","components/MyChats.js","components/miscellaneous/MineprofileModal.js","components/miscellaneous/SideDrawer.js","Pages/Chatpage.js","App.js","index.js"],"names":["ChatContext","createContext","ChatState","useContext","ChatProvider","_ref","children","_useState","useState","_useState2","_slicedToArray","selectedChat","setSelectedChat","_useState3","_useState4","user","setUser","_useState5","_useState6","notification","setNotification","_useState7","_useState8","chats","setChats","history","useHistory","useEffect","userInfo","JSON","parse","localStorage","getItem","push","_jsx","Provider","value","Login","show","setShow","toast","useToast","email","setEmail","password","setPassword","loading","setLoading","_ChatState","submitHandler","_asyncToGenerator","_regeneratorRuntime","mark","_callee","config","_yield$axios$post","data","wrap","_context","prev","next","title","status","duration","isClosable","position","abrupt","headers","axios","post","sent","setItem","stringify","t0","description","response","message","stop","apply","arguments","_jsxs","VStack","spacing","FormControl","id","isRequired","FormLabel","Input","type","placeholder","onChange","e","target","InputGroup","size","InputRightElement","width","Button","h","onClick","ViewOffIcon","ViewIcon","bg","_hover","color","border","style","marginTop","isLoading","Signup","cshow","setCshow","name","setName","_useState9","_useState10","confirmpassword","setConfirmpassword","_useState11","_useState12","_useState13","_useState14","pic","setPic","_useState15","_useState16","picLoading","setPicLoading","p","accept","pics","undefined","FormData","append","fetch","method","body","then","res","json","url","toString","catch","err","console","log","postDetails","files","Homepage","socket","selectedChatCompare","Container","maxW","centerContent","Box","d","justifyContent","w","m","borderRadius","borderWidth","Text","fontSize","fontFamily","Tabs","isFitted","variant","TabList","mb","Tab","TabPanels","TabPanel","isSameSenderMargin","messages","i","userId","length","sender","_id","isSameSender","isLastMessage","isSameUser","getSender","loggedUser","users","getSenderPic","getSenderFull","ProfileModal","_useDisclosure","useDisclosure","isOpen","onOpen","onClose","btnRef","React","useRef","_Fragment","IconButton","base","icon","Drawer","placement","finalFocusRef","DrawerOverlay","DrawerContent","DrawerCloseButton","alignItems","pt","Image","boxSize","src","alt","DrawerHeader","flexDirection","DrawerBody","flexDir","fontStyle","pl","pb","DrawerFooter","ScrollableChat","ScrollableFeed","map","display","Tooltip","label","hasArrow","Avatar","mt","mr","cursor","backgroundColor","concat","marginLeft","padding","maxWidth","content","UserListItem","handleFunction","background","px","py","ExistGroupUserListItem","admin","useringroup","handleRemoveFunction","handleAddToGroupAdminFunction","handleRemoveToGroupAdminFunction","setIsOpen","pos","ml","some","Badge","colorScheme","SmallCloseIcon","SmallAddIcon","right","top","zIndex","gap","UpdateGroupChatModal","fetchMessages","fetchAgain","setFetchAgain","_useDisclosure2","isOpenImage","onOpenImage","onCloseImage","groupChatName","setGroupChatName","search","setSearch","searchResult","setSearchResult","renameloading","setRenameLoading","handleSearch","_ref2","_yield$axios$get","Authorization","token","get","_x","handleRename","_ref3","_callee2","_yield$axios$put","_context2","put","chatId","chatName","handleAddUser","_ref4","_callee3","user1","_yield$axios$put2","_context3","find","u","groupAdmin","_x2","handleRemove","_ref5","_callee4","_yield$axios$put3","_context4","groupOwner","_x3","AddToGroupAdmin","_ref6","_callee5","_yield$axios$put4","_context5","_x4","RemoveToGroupAdmin","_ref7","_callee6","_yield$axios$put5","_context6","_x5","handleGroupImageUpload","_ref8","_callee7","_yield$axios$put6","_context7","chatname","my","EditIcon","Modal","ModalOverlay","ModalContent","ModalHeader","ModalCloseButton","ModalBody","event","ModalFooter","createdAt","slice","CloseIcon","Spinner","searchUser","textAlign","filter","reverse","SingleChat","setMessages","newMessage","setNewMessage","socketConnected","setSocketConnected","typing","setTyping","istyping","setIsTyping","setOnline","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","emit","sendMessage","key","_toConsumableArray","onlineUsers","setOnlineUsers","io","on","disconnect","newMessageRecieved","chat","includes","isGroupChat","isUserOnline","capitalizeFirstLetter","str","charAt","toUpperCase","md","ArrowBackIcon","as","substring","overflowY","alignSelf","margin","className","onKeyDown","Lottie","options","marginBottom","lastTypingTime","Date","getTime","setTimeout","Chatbox","ChatLoading","Stack","Skeleton","height","UserBadgeItem","GroupChatModal","selectedUsers","setSelectedUsers","query","handleSubmit","isCentered","flexWrap","delUser","sel","userToAdd","MyChats","setLoggedUser","fetchChats","lg","rightIcon","AddIcon","AvatarGroup","max","mx","latestMessage","MineprofileModal","updatePic","setUpdatepic","parsedUserInfo","updatedUserInfo","_objectSpread","SideDrawer","loadingChat","setLoadingChat","accessChat","c","pr","Menu","MenuButton","NotificationBadge","count","effect","Effect","SCALE","BellIcon","MenuList","notif","MenuItem","n","ChevronDownIcon","MenuDivider","removeItem","borderBottomWidth","searuser","Chatpage","App","Route","path","component","exact","ReactDOM","render","BrowserRouter","ChakraProvider","document","getElementById"],"mappings":"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","file":"static/js/main.b0813a3d.chunk.js","sourcesContent":["import React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst ChatContext = createContext();\n\nconst ChatProvider = ({ children }) => {\n  const [selectedChat, setSelectedChat] = useState();\n  const [user, setUser] = useState();\n  const [notification, setNotification] = useState([]);\n  const [chats, setChats] = useState();\n\n  const history = useHistory();\n\n  useEffect(() => {\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\n    setUser(userInfo);\n    // setUser(user);\n\n    if (!userInfo) history.push(\"/\");\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [history]);\n\n  return (\n    <ChatContext.Provider\n      value={{\n        selectedChat,\n        setSelectedChat,\n        user,\n        setUser,\n        notification,\n        setNotification,\n        chats,\n        setChats,\n      }}\n    >\n      {children}\n    </ChatContext.Provider>\n  );\n};\n\nexport const ChatState = () => {\n  return useContext(ChatContext);\n};\n\nexport default ChatProvider;\n","import { Button } from \"@chakra-ui/button\";\nimport { FormControl, FormLabel } from \"@chakra-ui/form-control\";\nimport { Input, InputGroup, InputRightElement } from \"@chakra-ui/input\";\nimport { VStack } from \"@chakra-ui/layout\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { useToast } from \"@chakra-ui/react\";\nimport { useHistory } from \"react-router-dom\";\nimport { ChatState } from \"../../Context/ChatProvider\";\nimport { ViewIcon, ViewOffIcon } from \"@chakra-ui/icons\";\n\nconst Login = () => {\n  const [show, setShow] = useState(false);\n  const handleClick = () => setShow(!show);\n  const toast = useToast();\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const [loading, setLoading] = useState(false);\n\n  const history = useHistory();\n  const { user, setUser } = ChatState();\n\n  const submitHandler = async () => {\n    setLoading(true);\n    if (!email || !password) {\n      toast({\n        title: \"Please Fill all the Feilds\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n      return;\n    }\n\n    try {\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n      };\n\n      const { data } = await axios.post(\n        \"/api/user/login\",\n        { email, password },\n        config\n      );\n\n      toast({\n        title: \"Login Successful\",\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\n      setUser(data);\n      setLoading(false);\n      history.push(\"/chats\");\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n    }\n  };\n\n  return (\n    <VStack spacing=\"10px\">\n      <FormControl id=\"email\" isRequired>\n        <FormLabel>Email Address</FormLabel>\n        <Input\n          value={email}\n          type=\"email\"\n          placeholder=\"Enter Your Email Address\"\n          onChange={(e) => setEmail(e.target.value)}\n        />\n      </FormControl>\n      <FormControl id=\"password\" isRequired>\n        <FormLabel>Password</FormLabel>\n        <InputGroup size=\"md\">\n          <Input\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            type={show ? \"text\" : \"password\"}\n            placeholder=\"Enter password\"\n          />\n          <InputRightElement width=\"4.5rem\">\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\n              {show ? <ViewOffIcon /> : <ViewIcon />}\n            </Button>\n          </InputRightElement>\n        </InputGroup>\n      </FormControl>\n      <Button\n        bg=\"#000\"\n        width=\"30%\"\n        _hover={{ bg: \"#fff\", color: \"#000\", border: \"1px solid #000\" }}\n        color=\"#fff\"\n        style={{ marginTop: 15 }}\n        onClick={submitHandler}\n        isLoading={loading}\n      >\n        Login\n      </Button>\n    </VStack>\n  );\n};\n\nexport default Login;\n","import { Button } from \"@chakra-ui/button\";\nimport { FormControl, FormLabel } from \"@chakra-ui/form-control\";\nimport { Input, InputGroup, InputRightElement } from \"@chakra-ui/input\";\nimport { VStack } from \"@chakra-ui/layout\";\nimport { useToast } from \"@chakra-ui/toast\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { ChatState } from \"../../Context/ChatProvider\";\nimport { ViewIcon, ViewOffIcon } from \"@chakra-ui/icons\";\n\nconst Signup = () => {\n  const [show, setShow] = useState(false);\n  const [cshow, setCshow] = useState(false);\n  const handleClick = () => setShow(!show);\n  const toast = useToast();\n  const history = useHistory();\n\n  const [name, setName] = useState();\n  const [email, setEmail] = useState();\n  const [confirmpassword, setConfirmpassword] = useState();\n  const [password, setPassword] = useState();\n  const [pic, setPic] = useState();\n  const [picLoading, setPicLoading] = useState(false);\n\n  const { user, setUser } = ChatState();\n\n  const submitHandler = async () => {\n    setPicLoading(true);\n    if (!name || !email || !password || !confirmpassword) {\n      toast({\n        title: \"Please Fill all the Feilds\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setPicLoading(false);\n      return;\n    }\n    if (password !== confirmpassword) {\n      toast({\n        title: \"Passwords Do Not Match\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n    try {\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n      };\n      const { data } = await axios.post(\n        \"/api/user\",\n        {\n          name,\n          email,\n          password,\n          pic,\n        },\n        config\n      );\n\n      toast({\n        title: \"Registration Successful\",\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setUser(data);\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\n      setPicLoading(false);\n      history.push(\"/chats\");\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setPicLoading(false);\n    }\n  };\n\n  const postDetails = (pics) => {\n    setPicLoading(true);\n    if (pics === undefined) {\n      toast({\n        title: \"Please Select an Image!\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n\n    if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\n      const data = new FormData();\n      data.append(\"file\", pics);\n      data.append(\"upload_preset\", \"chat-app\");\n      data.append(\"cloud_name\", \"djn1nfuky\");\n      fetch(\"https://api.cloudinary.com/v1_1/djn1nfuky/image/upload\", {\n        method: \"post\",\n        body: data,\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          setPic(data.url.toString());\n\n          setPicLoading(false);\n        })\n        .catch((err) => {\n          console.log(err);\n          setPicLoading(false);\n        });\n    } else {\n      toast({\n        title: \"Please Select an Image!\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setPicLoading(false);\n      return;\n    }\n  };\n\n  return (\n    <VStack spacing=\"5px\">\n      <FormControl id=\"first-name\" isRequired>\n        <FormLabel>Name</FormLabel>\n        <Input\n          placeholder=\"Enter Your Name\"\n          onChange={(e) => setName(e.target.value)}\n        />\n      </FormControl>\n      <FormControl id=\"email\" isRequired>\n        <FormLabel>Email Address</FormLabel>\n        <Input\n          type=\"email\"\n          placeholder=\"Enter Your Email Address\"\n          onChange={(e) => setEmail(e.target.value)}\n        />\n      </FormControl>\n      <FormControl id=\"password\" isRequired>\n        <FormLabel>Password</FormLabel>\n        <InputGroup size=\"md\">\n          <Input\n            type={show ? \"text\" : \"password\"}\n            placeholder=\"Enter Password\"\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          <InputRightElement width=\"4.5rem\">\n            <Button h=\"1.75rem\" size=\"sm\" onClick={() => setShow(!show)}>\n              {show ? <ViewOffIcon /> : <ViewIcon />}\n            </Button>\n          </InputRightElement>\n        </InputGroup>\n      </FormControl>\n      <FormControl id=\"password\" isRequired>\n        <FormLabel>Confirm Password</FormLabel>\n        <InputGroup size=\"md\">\n          <Input\n            type={cshow ? \"text\" : \"password\"}\n            placeholder=\"Confirm password\"\n            onChange={(e) => setConfirmpassword(e.target.value)}\n          />\n          <InputRightElement width=\"4.5rem\">\n            <Button h=\"1.75rem\" size=\"sm\" onClick={() => setCshow(!cshow)}>\n              {cshow ? <ViewOffIcon /> : <ViewIcon />}\n            </Button>\n          </InputRightElement>\n        </InputGroup>\n      </FormControl>\n      <FormControl id=\"pic\">\n        <FormLabel>Upload your Picture</FormLabel>\n        <Input\n          type=\"file\"\n          p={1.5}\n          accept=\"image/*\"\n          onChange={(e) => postDetails(e.target.files[0])}\n        />\n      </FormControl>\n      <Button\n        bg=\"#000\"\n        width=\"30%\"\n        _hover={{ bg: \"#fff\", color: \"#000\", border: \"1px solid #000\" }}\n        color=\"#fff\"\n        style={{ marginTop: 15 }}\n        onClick={submitHandler}\n        isLoading={picLoading}\n      >\n        Sign Up\n      </Button>\n    </VStack>\n  );\n};\n\nexport default Signup;\n","import {\n  Box,\n  Container,\n  Tab,\n  TabList,\n  TabPanel,\n  TabPanels,\n  Tabs,\n  Text,\n} from \"@chakra-ui/react\";\nimport { useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport Login from \"../components/Authentication/Login\";\nimport Signup from \"../components/Authentication/Signup\";\n\nfunction Homepage() {\n  const history = useHistory();\n\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem(\"userInfo\"));\n\n    if (user) history.push(\"/chats\");\n  }, [history]);\n\n  return (\n    <Container maxW=\"xl\" centerContent>\n      <Box\n        d=\"flex\"\n        justifyContent=\"center\"\n        p={3}\n        bg=\"white\"\n        w=\"100%\"\n        m=\"40px 0 15px 0\"\n        borderRadius=\"lg\"\n        borderWidth=\"1px\"\n      >\n        <Text fontSize=\"4xl\" fontFamily=\"Work sans\">\n          Flipho-Chat-Room\n        </Text>\n      </Box>\n      <Box bg=\"white\" w=\"100%\" p={4} borderRadius=\"lg\" borderWidth=\"1px\">\n        <Tabs isFitted variant=\"enclosed\">\n          <TabList mb=\"1em\">\n            <Tab>Login</Tab>\n            <Tab>Sign Up</Tab>\n          </TabList>\n          <TabPanels>\n            <TabPanel>\n              <Login />\n            </TabPanel>\n            <TabPanel>\n              <Signup />\n            </TabPanel>\n          </TabPanels>\n        </Tabs>\n      </Box>\n    </Container>\n  );\n}\n\nexport default Homepage;\n","import { FormControl } from \"@chakra-ui/form-control\";\nimport { Input } from \"@chakra-ui/input\";\nimport { Box, Text } from \"@chakra-ui/layout\";\nimport \"./styles.css\";\nimport { IconButton, Spinner, useToast, Avatar } from \"@chakra-ui/react\";\nimport {\n  getSender,\n  getSenderPic,\n  getSenderFull,\n  getSenderId,\n} from \"../config/ChatLogics\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { ArrowBackIcon } from \"@chakra-ui/icons\";\nimport ProfileModal from \"./miscellaneous/ProfileModal\";\nimport ScrollableChat from \"./ScrollableChat\";\nimport Lottie from \"react-lottie\";\nimport animationData from \"../animations/typing.json\";\n\nimport io from \"socket.io-client\";\nimport UpdateGroupChatModal from \"./miscellaneous/UpdateGroupChatModal\";\nimport { ChatState } from \"../Context/ChatProvider\";\nconst ENDPOINT = \"https://fliphochat.onrender.com/\";\n// const ENDPOINT = \"http://localhost:5000\";\nvar socket, selectedChatCompare;\n\nconst SingleChat = ({ fetchAgain, setFetchAgain }) => {\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [socketConnected, setSocketConnected] = useState(false);\n  const [typing, setTyping] = useState(false);\n  const [istyping, setIsTyping] = useState(false);\n  const [online, setOnline] = useState(false);\n  const toast = useToast();\n\n  const defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: animationData,\n    rendererSettings: {\n      preserveAspectRatio: \"xMidYMid slice\",\n    },\n  };\n  const { selectedChat, setSelectedChat, user, notification, setNotification } =\n    ChatState();\n\n  const fetchMessages = async () => {\n    if (!selectedChat) return;\n\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      setLoading(true);\n\n      const { data } = await axios.get(\n        `/api/message/${selectedChat._id}`,\n        config\n      );\n      setMessages(data);\n      setLoading(false);\n\n      socket.emit(\"join chat\", selectedChat._id);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Messages\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n    }\n  };\n\n  const sendMessage = async (event) => {\n    if (event.key === \"Enter\" && newMessage) {\n      socket.emit(\"stop typing\", selectedChat._id);\n      try {\n        const config = {\n          headers: {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${user.token}`,\n          },\n        };\n        setNewMessage(\"\");\n        const { data } = await axios.post(\n          \"/api/message\",\n          {\n            content: newMessage,\n            chatId: selectedChat,\n          },\n          config\n        );\n        socket.emit(\"new message\", data);\n        setMessages([...messages, data]);\n      } catch (error) {\n        toast({\n          title: \"Error Occured!\",\n          description: \"Failed to send the Message\",\n          status: \"error\",\n          duration: 5000,\n          isClosable: true,\n          position: \"bottom\",\n        });\n      }\n    }\n  };\n  const [onlineUsers, setOnlineUsers] = useState({});\n\n  useEffect(() => {\n    socket = io(ENDPOINT);\n    socket.emit(\"setup\", user);\n    socket.on(\"connected\", () => setSocketConnected(true));\n    socket.on(\"typing\", () => setIsTyping(true));\n    socket.on(\"stop typing\", () => setIsTyping(false));\n    socket.on(\"onlineUsers\", (users) => {\n      setOnlineUsers(users);\n    });\n    socket.on(\"disconnect\", () => {\n      setSocketConnected(false);\n    });\n\n    return () => {\n      socket.disconnect(); // Disconnect the socket when the component unmounts\n    };\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    fetchMessages();\n\n    selectedChatCompare = selectedChat;\n    // eslint-disable-next-line\n  }, [selectedChat]);\n\n  useEffect(() => {\n    socket.on(\"message recieved\", (newMessageRecieved) => {\n      if (\n        !selectedChatCompare || // if chat is not selected or doesn't match current chat\n        selectedChatCompare._id !== newMessageRecieved.chat._id\n      ) {\n        if (!notification.includes(newMessageRecieved)) {\n          setNotification([newMessageRecieved, ...notification]);\n          setFetchAgain(!fetchAgain);\n        }\n      } else {\n        setMessages([...messages, newMessageRecieved]);\n      }\n    });\n  });\n  useEffect(() => {\n    if (!selectedChat || selectedChat.isGroupChat) return;\n\n    const isUserOnline = selectedChat.users.some(\n      (userId) => userId === user._id\n    );\n\n    setOnline(isUserOnline && socketConnected);\n  }, [selectedChat, socketConnected, user._id]);\n  const typingHandler = (e) => {\n    setNewMessage(e.target.value);\n\n    if (!socketConnected) return;\n\n    if (!typing) {\n      setTyping(true);\n      socket.emit(\"typing\", selectedChat._id);\n    }\n    let lastTypingTime = new Date().getTime();\n    var timerLength = 3000;\n    setTimeout(() => {\n      var timeNow = new Date().getTime();\n      var timeDiff = timeNow - lastTypingTime;\n      if (timeDiff >= timerLength && typing) {\n        socket.emit(\"stop typing\", selectedChat._id);\n        setTyping(false);\n      }\n    }, timerLength);\n  };\n\n  const capitalizeFirstLetter = (str) => {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  };\n\n  return (\n    <>\n      {selectedChat ? (\n        <>\n          <Box\n            fontSize={{ base: \"28px\", md: \"30px\" }}\n            pb={3}\n            px={2}\n            w=\"100%\"\n            fontFamily=\"Work sans\"\n            d=\"flex\"\n            flexDirection=\"row\"\n            justifyContent={{ base: \"space-between\" }}\n            alignItems=\"center\"\n          >\n            <IconButton\n              d={{ md: \"flex\" }}\n              icon={<ArrowBackIcon />}\n              onClick={() => setSelectedChat(\"\")}\n            />\n            {messages &&\n              (!selectedChat.isGroupChat ? (\n                <>\n                  <Box d=\"flex\">\n                    <Box>\n                      <Avatar src={getSenderPic(user, selectedChat.users)} />\n                    </Box>\n                    <Box d=\"flex\" flexDirection=\"column\" pl={2}>\n                      <Text as=\"b\" fontSize=\"22px\">\n                        {getSender(user, selectedChat.users) &&\n                          capitalizeFirstLetter(\n                            getSender(user, selectedChat.users)\n                          ).substring(0, 15)}\n                      </Text>\n                      <Text mt=\"-1.5\" fontSize=\"14px\">\n                        {getSenderId(user, selectedChat.users) in onlineUsers &&\n                          \"Online\"}\n                      </Text>\n                    </Box>\n                  </Box>\n                  <ProfileModal\n                    user={getSenderFull(user, selectedChat.users)}\n                  />\n                </>\n              ) : (\n                <>\n                  <Box d=\"flex\">\n                    <Avatar src={selectedChat.pic} />\n                    <Text pl={2} fontSize=\"2xl\" as=\"b\">\n                      {selectedChat.chatName &&\n                        capitalizeFirstLetter(selectedChat.chatName)}\n                    </Text>\n                  </Box>\n                  <UpdateGroupChatModal\n                    fetchMessages={fetchMessages}\n                    fetchAgain={fetchAgain}\n                    setFetchAgain={setFetchAgain}\n                  />\n                </>\n              ))}\n          </Box>\n          <Box\n            d=\"flex\"\n            flexDir=\"column\"\n            justifyContent=\"flex-end\"\n            p={3}\n            bg=\"#E8E8E8\"\n            w=\"100%\"\n            h=\"100%\"\n            borderRadius=\"lg\"\n            overflowY=\"hidden\"\n          >\n            {loading ? (\n              <Spinner\n                size=\"xl\"\n                w={20}\n                h={20}\n                alignSelf=\"center\"\n                margin=\"auto\"\n              />\n            ) : (\n              <div className=\"messages\">\n                <ScrollableChat messages={messages} />\n              </div>\n            )}\n\n            <FormControl\n              onKeyDown={sendMessage}\n              id=\"first-name\"\n              isRequired\n              mt={3}\n            >\n              {istyping ? (\n                <div>\n                  <Lottie\n                    options={defaultOptions}\n                    // height={50}\n                    width={70}\n                    style={{ marginBottom: 15, marginLeft: 0 }}\n                  />\n                </div>\n              ) : (\n                <></>\n              )}\n              <Input\n                variant=\"filled\"\n                bg=\"#E0E0E0\"\n                placeholder=\"Enter a message..\"\n                value={newMessage}\n                onChange={typingHandler}\n              />\n            </FormControl>\n          </Box>\n        </>\n      ) : (\n        // to get socket.io on same page\n        <Box d=\"flex\" alignItems=\"center\" justifyContent=\"center\" h=\"100%\">\n          <Text fontSize=\"3xl\" pb={3} fontFamily=\"Work sans\">\n            Click on a user to start chatting\n          </Text>\n        </Box>\n      )}\n    </>\n  );\n};\n\nexport default SingleChat;\n","export const isSameSenderMargin = (messages, m, i, userId) => {\n  if (\n    i < messages.length - 1 &&\n    messages[i + 1].sender._id === m.sender._id &&\n    messages[i].sender._id !== userId\n  )\n    return 33;\n  else if (\n    (i < messages.length - 1 &&\n      messages[i + 1].sender._id !== m.sender._id &&\n      messages[i].sender._id !== userId) ||\n    (i === messages.length - 1 && messages[i].sender._id !== userId)\n  )\n    return 0;\n  else return \"auto\";\n};\n\nexport const isSameSender = (messages, m, i, userId) => {\n  return (\n    i < messages.length - 1 &&\n    (messages[i + 1].sender._id !== m.sender._id ||\n      messages[i + 1].sender._id === undefined) &&\n    messages[i].sender._id !== userId\n  );\n};\n\nexport const isLastMessage = (messages, i, userId) => {\n  return (\n    i === messages.length - 1 &&\n    messages[messages.length - 1].sender._id !== userId &&\n    messages[messages.length - 1].sender._id\n  );\n};\n\nexport const isSameUser = (messages, m, i) => {\n  return i > 0 && messages[i - 1].sender._id === m.sender._id;\n};\n\nexport const getSender = (loggedUser, users) => {\n  return users[0]._id === loggedUser._id ? users[1].name : users[0].name;\n};\nexport const getSenderPic = (loggedUser, users) => {\n  return users[0]._id === loggedUser._id ? users[1].pic : users[0].pic;\n};\nexport const getSenderId = (loggedUser, users) => {\n  return users[0]._id === loggedUser._id ? users[1]._id : users[0]._id;\n};\nexport const getSenderFull = (loggedUser, users) => {\n  return users[0]._id === loggedUser._id ? users[1] : users[0];\n};\n","import {\n  useDisclosure,\n  IconButton,\n  Text,\n  Image,\n  Drawer,\n  DrawerBody,\n  DrawerFooter,\n  DrawerHeader,\n  DrawerOverlay,\n  DrawerContent,\n  DrawerCloseButton,\n  Box,\n} from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { ViewIcon } from \"@chakra-ui/icons\";\n\nconst ProfileModal = ({ user, children }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const btnRef = React.useRef();\n  return (\n    <>\n      {children ? (\n        <span onClick={onOpen}>{children}</span>\n      ) : (\n        <IconButton d={{ base: \"flex\" }} icon={<ViewIcon />} onClick={onOpen} />\n      )}\n\n      <Drawer\n        isOpen={isOpen}\n        placement=\"right\"\n        onClose={onClose}\n        finalFocusRef={btnRef}\n        size=\"sm\"\n      >\n        import SideDrawer from \"../components/miscellaneous/SideDrawer\";\n        <DrawerOverlay />\n        <DrawerContent>\n          <DrawerCloseButton />\n          <Box\n            d=\"flex\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n            w=\"100%\"\n            pt={10}\n          >\n            <Image\n              borderRadius=\"full\"\n              boxSize=\"110px\"\n              src={user.pic}\n              alt={user.name}\n            />\n          </Box>\n\n          <DrawerHeader\n            fontFamily=\"Work sans\"\n            d=\"flex\"\n            justifyContent=\"center\"\n            flexDirection=\"column\"\n            alignItems=\"center\"\n            pt={10}\n          >\n            <Box fontSize=\"35px\">{user.name}</Box>\n            <Box> {user.email}</Box>\n          </DrawerHeader>\n\n          <DrawerBody d=\"flex\" flexDir=\"column\" alignItems=\"center\">\n            <Text\n              fontStyle=\"italic\"\n              w=\"100%\"\n              pl={3}\n              pb={2}\n              color=\"#7e7e7e\"\n            ></Text>\n          </DrawerBody>\n          <DrawerFooter></DrawerFooter>\n        </DrawerContent>\n      </Drawer>\n    </>\n  );\n};\n\nexport default ProfileModal;\n","import { Avatar } from \"@chakra-ui/avatar\";\nimport { Tooltip } from \"@chakra-ui/tooltip\";\nimport ScrollableFeed from \"react-scrollable-feed\";\nimport {\n  isLastMessage,\n  isSameSender,\n  isSameSenderMargin,\n  isSameUser,\n} from \"../config/ChatLogics\";\nimport { ChatState } from \"../Context/ChatProvider\";\n\nconst ScrollableChat = ({ messages }) => {\n  const { user } = ChatState();\n\n  return (\n    <ScrollableFeed>\n      {messages &&\n        messages.map((m, i) => (\n          <div style={{ display: \"flex\" }} key={m._id}>\n            {(isSameSender(messages, m, i, user._id) ||\n              isLastMessage(messages, i, user._id)) && (\n              <Tooltip label={m.sender.name} placement=\"bottom-start\" hasArrow>\n                <Avatar\n                  mt=\"7px\"\n                  mr={1}\n                  size=\"sm\"\n                  cursor=\"pointer\"\n                  name={m.sender.name}\n                  src={m.sender.pic}\n                />\n              </Tooltip>\n            )}\n            <span\n              style={{\n                backgroundColor: `${\n                  m.sender._id === user._id ? \"#BEE3F8\" : \"#B9F5D0\"\n                }`,\n                marginLeft: isSameSenderMargin(messages, m, i, user._id),\n                marginTop: isSameUser(messages, m, i, user._id) ? 3 : 10,\n                borderRadius: \"20px\",\n                padding: \"5px 15px\",\n                maxWidth: \"75%\",\n              }}\n            >\n              {m.content}\n            </span>\n          </div>\n        ))}\n    </ScrollableFeed>\n  );\n};\n\nexport default ScrollableChat;\n","import { Avatar } from \"@chakra-ui/avatar\";\nimport { Box, Text } from \"@chakra-ui/layout\";\n\nconst UserListItem = ({ user, handleFunction }) => {\n  return (\n    <Box\n      onClick={handleFunction}\n      cursor=\"pointer\"\n      bg=\"#E8E8E8\"\n      _hover={{\n        background: \"#38B2AC\",\n        color: \"white\",\n      }}\n      w=\"100%\"\n      d=\"flex\"\n      alignItems=\"center\"\n      color=\"black\"\n      px={3}\n      py={2}\n      // mb={2}\n      borderRadius=\"lg\"\n    >\n      <Avatar\n        mr={2}\n        size=\"sm\"\n        cursor=\"pointer\"\n        name={user.name}\n        src={user.pic}\n      />\n      <Box>\n        <Text>{user.name}</Text>\n        <Text fontSize=\"xs\">\n          <b>Email : </b>\n          {user.email}\n        </Text>\n      </Box>\n    </Box>\n  );\n};\n\nexport default UserListItem;\n","import { Avatar } from \"@chakra-ui/avatar\";\nimport { Box, Text } from \"@chakra-ui/layout\";\nimport { ChatState } from \"../../Context/ChatProvider\";\nimport { useState } from \"react\";\nimport {\n  SmallAddIcon,\n  SmallCloseIcon,\n  ChevronDownIcon,\n} from \"@chakra-ui/icons\";\nimport {\n  Badge,\n  Button,\n  Menu,\n  MenuButton,\n  MenuList,\n  MenuItem,\n} from \"@chakra-ui/react\";\nconst ExistGroupUserListItem = ({\n  admin,\n  useringroup,\n  handleRemoveFunction,\n  handleAddToGroupAdminFunction,\n  handleRemoveToGroupAdminFunction,\n}) => {\n  const { user, setSelectedChat } = ChatState();\n  const [isOpen, setIsOpen] = useState(false);\n\n  return (\n    <Box\n      cursor=\"pointer\"\n      bg=\"#E8E8E8\"\n      _hover={{\n        background: \"#38B2AC\",\n        color: \"white\",\n      }}\n      w=\"100%\"\n      d=\"flex\"\n      alignItems=\"center\"\n      color=\"black\"\n      px={3}\n      py={2}\n      mb={2}\n      borderRadius=\"lg\"\n      justifyContent=\"space-between\"\n      pos=\"relative\"\n    >\n      <Box ml={2} d=\"flex\" alignItems=\"center\" w=\"100%\">\n        <Avatar\n          mr={2}\n          size=\"md\"\n          cursor=\"pointer\"\n          name={useringroup.name}\n          src={useringroup.pic}\n        />\n        <Box\n          w=\"100%\"\n          d=\"flex\"\n          alignItems=\"center\"\n          justifyContent=\"space-between\"\n        >\n          <Box>\n            <Text>{useringroup.name}</Text>\n          </Box>\n          {admin.some((admin) => admin._id === useringroup._id) && (\n            <Badge\n              ml=\"3\"\n              colorScheme=\"green\"\n              mr={3}\n              px={2}\n              py={1}\n              borderRadius=\"lg\"\n            >\n              Chat Admin\n            </Badge>\n          )}\n        </Box>\n        {admin.some((admin) => admin._id === user._id) && (\n          <>\n            <Box onClick={() => setIsOpen(!isOpen)}>\n              {!isOpen ? <SmallAddIcon /> : <SmallCloseIcon />}\n            </Box>\n            {isOpen && (\n              <Box\n                pos=\"absolute\"\n                right=\"7\"\n                top=\"10\"\n                bg=\"#fff\"\n                color=\"#000\"\n                d=\"flex\"\n                flexDirection=\"column\"\n                zIndex=\"100\"\n                borderRadius=\"md\"\n                gap={3}\n                py={3}\n                px={5}\n                fontSize={16}\n              >\n                <Box\n                  variant=\"link\"\n\n                  // onClick={() => setSelectedChat(useringroup)}\n                >\n                  Message {useringroup.name}\n                </Box>\n                {!admin.some((admin) => admin._id === useringroup._id) ? (\n                  <Box\n                    variant=\"link\"\n                    onClick={() => {\n                      handleAddToGroupAdminFunction();\n                      setIsOpen(!isOpen);\n                    }}\n                  >\n                    Make group admin\n                  </Box>\n                ) : (\n                  <Box\n                    variant=\"link\"\n                    onClick={() => {\n                      handleRemoveToGroupAdminFunction();\n                      setIsOpen(!isOpen);\n                    }}\n                  >\n                    Dismiss as admin\n                  </Box>\n                )}\n\n                <Box\n                  variant=\"link\"\n                  onClick={() => {\n                    handleRemoveFunction();\n                    setIsOpen(!isOpen);\n                  }}\n                >\n                  Remove {useringroup.name}\n                </Box>\n              </Box>\n            )}\n          </>\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nexport default ExistGroupUserListItem;\n","import { ViewIcon, CloseIcon, SmallAddIcon, EditIcon } from \"@chakra-ui/icons\";\nimport {\n  Button,\n  useDisclosure,\n  FormControl,\n  Input,\n  useToast,\n  Box,\n  IconButton,\n  Text,\n  Spinner,\n  Image,\n  Drawer,\n  DrawerBody,\n  DrawerFooter,\n  DrawerHeader,\n  DrawerOverlay,\n  DrawerContent,\n  DrawerCloseButton,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Stack,\n} from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { ChatState } from \"../../Context/ChatProvider\";\nimport UserListItem from \"../userAvatar/UserListItem\";\nimport ExistGroupUserListItem from \"../userAvatar/existGroupUserListItem\";\nimport React from \"react\";\n\nconst UpdateGroupChatModal = ({ fetchMessages, fetchAgain, setFetchAgain }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const {\n    isOpen: isOpenImage,\n    onOpen: onOpenImage,\n    onClose: onCloseImage,\n  } = useDisclosure();\n  const btnRef = React.useRef();\n\n  const [groupChatName, setGroupChatName] = useState();\n  const [search, setSearch] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [renameloading, setRenameLoading] = useState(false);\n  const toast = useToast();\n\n  const { selectedChat, setSelectedChat, user } = ChatState();\n\n  const handleSearch = async (search) => {\n    console.log(search);\n    if (!search) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\n\n      setLoading(false);\n      setSearchResult(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Search Results\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n      setLoading(false);\n    }\n  };\n\n  const handleRename = async () => {\n    if (!groupChatName) return;\n\n    try {\n      setRenameLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.put(\n        `/api/chat/rename`,\n        {\n          chatId: selectedChat._id,\n          chatName: groupChatName,\n        },\n        config\n      );\n\n      setSelectedChat(data);\n      setFetchAgain(!fetchAgain);\n      setRenameLoading(false);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setRenameLoading(false);\n    }\n    setGroupChatName(\"\");\n  };\n\n  const handleAddUser = async (user1) => {\n    if (selectedChat.users.find((u) => u._id === user1._id)) {\n      toast({\n        title: \"User Already in group!\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n    if (!selectedChat.groupAdmin.some((admin) => admin._id === user._id)) {\n      toast({\n        title: \"Only admins can add someone!\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.put(\n        `/api/chat/groupadd`,\n        {\n          chatId: selectedChat._id,\n          userId: user1._id,\n        },\n        config\n      );\n      setSearch(\"\");\n      setSearchResult([]);\n      setSelectedChat(data);\n      setFetchAgain(!fetchAgain);\n      setLoading(false);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n    }\n    setGroupChatName(\"\");\n  };\n\n  const handleRemove = async (user1) => {\n    if (selectedChat.groupOwner._id === user1._id) {\n      if (selectedChat.groupOwner._id === user._id) {\n        toast({\n          title: \"You cannot remove youself until transfer group ownership!\",\n          status: \"error\",\n          duration: 5000,\n          isClosable: true,\n          position: \"bottom\",\n        });\n        return;\n      } else {\n        toast({\n          title: \"You cant remove Group Owner!\",\n          status: \"error\",\n          duration: 5000,\n          isClosable: true,\n          position: \"bottom\",\n        });\n        return;\n      }\n    }\n\n    if (\n      !selectedChat.groupAdmin.some((admin) => admin._id === user._id) &&\n      !selectedChat.groupAdmin.some((admin) => admin._id === user1._id)\n    ) {\n      toast({\n        title: \"Only admins can remove someone!\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.put(\n        `/api/chat/groupremove`,\n        {\n          chatId: selectedChat._id,\n          userId: user1._id,\n        },\n        config\n      );\n\n      setSelectedChat(data);\n      setFetchAgain(!fetchAgain);\n      fetchMessages();\n      setLoading(false);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n    }\n    setGroupChatName(\"\");\n  };\n\n  const AddToGroupAdmin = async (user1) => {\n    if (selectedChat.groupAdmin.some((admin) => admin._id === user1._id)) {\n      toast({\n        title: \"User is already an admin!\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n    if (!selectedChat.groupAdmin.some((admin) => admin._id === user._id)) {\n      toast({\n        title: \"Only Group Owner can add Admin!\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.put(\n        `/api/chat/groupaddadmin`,\n        {\n          chatId: selectedChat._id,\n          userId: user1._id,\n        },\n        config\n      );\n\n      setSelectedChat(data);\n      setFetchAgain(!fetchAgain);\n      setLoading(false);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n    }\n  };\n\n  const RemoveToGroupAdmin = async (user1) => {\n    if (selectedChat.groupOwner._id === user1._id) {\n      toast({\n        title: \"You cannot remove Group Owner!\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n\n    if (\n      !selectedChat.groupAdmin.some((admin) => admin._id === user._id) &&\n      !selectedChat.groupAdmin.some((admin) => admin._id === user1._id)\n    ) {\n      toast({\n        title: \"Only admins can remove someone!\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.put(\n        `/api/chat/groupremoveadmin`,\n        {\n          chatId: selectedChat._id,\n          userId: user1._id,\n        },\n        config\n      );\n\n      setSelectedChat(data);\n      setFetchAgain(!fetchAgain);\n      setLoading(false);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n    }\n  };\n\n  const [pic, setPic] = useState();\n  const [picLoading, setPicLoading] = useState(false);\n\n  const handleImageUpload = (event) => {\n    const pics = event.target.files[0];\n    setPicLoading(true);\n    if (pics === undefined) {\n      toast({\n        title: \"Please Select an Image!\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n\n    if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\n      const data = new FormData();\n      data.append(\"file\", pics);\n      data.append(\"upload_preset\", \"chat-app\");\n      data.append(\"cloud_name\", \"djn1nfuky\");\n      fetch(\"https://api.cloudinary.com/v1_1/djn1nfuky/image/upload\", {\n        method: \"post\",\n        body: data,\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          setPic(data.url.toString());\n\n          setPicLoading(false);\n        })\n        .catch((err) => {\n          console.log(err);\n          setPicLoading(false);\n        });\n    } else {\n      toast({\n        title: \"Please Select an Image!\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setPicLoading(false);\n      return;\n    }\n  };\n\n  const handleGroupImageUpload = async () => {\n    if (!pic) return;\n\n    try {\n      setPicLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.put(\n        `/api/chat/rename`,\n        {\n          chatId: selectedChat._id,\n          pic: pic,\n        },\n        config\n      );\n\n      setSelectedChat(data);\n      setFetchAgain(!fetchAgain);\n      setPicLoading(false);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setPicLoading(false);\n    }\n  };\n\n  return (\n    <>\n      <IconButton d={{ base: \"flex\" }} icon={<ViewIcon />} onClick={onOpen} />\n\n      <Drawer\n        isOpen={isOpen}\n        placement=\"right\"\n        onClose={onClose}\n        finalFocusRef={btnRef}\n        size=\"md\"\n      >\n        <DrawerOverlay />\n        <DrawerContent>\n          <DrawerCloseButton />\n          <Box\n            d=\"flex\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n            w=\"100%\"\n            pt={10}\n          >\n            <Image\n              borderRadius=\"full\"\n              boxSize=\"110px\"\n              src={selectedChat.pic}\n              alt={selectedChat.chatname}\n            />\n          </Box>\n          <Box\n            d=\"flex\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n            w=\"100%\"\n            pl={100}\n            my={-4}\n            // onClick={onOpenImage}\n          >\n            <IconButton\n              aria-label=\"Search database\"\n              icon={<EditIcon />}\n              onClick={onOpenImage}\n              size=\"xs\"\n            />\n          </Box>\n          <Modal isOpen={isOpenImage} onClose={onCloseImage}>\n            <ModalOverlay />\n            <ModalContent>\n              <ModalHeader>Upload Image</ModalHeader>\n              <ModalCloseButton />\n              <ModalBody>\n                <input type=\"file\" onChange={handleImageUpload} />\n                <Box\n                  my={4}\n                  w=\"100%\"\n                  d=\"flex\"\n                  justifyContent=\"center\"\n                  alignItems=\"center\"\n                >\n                  {pic && <img src={pic} alt=\"Selected\" />}\n                </Box>\n              </ModalBody>\n\n              <ModalFooter>\n                <Button colorScheme=\"blue\" mr={3} onClick={onCloseImage}>\n                  Close\n                </Button>\n                <Button\n                  variant=\"ghost\"\n                  isLoading={picLoading}\n                  onClick={() => {\n                    handleGroupImageUpload();\n                    onCloseImage();\n                  }}\n                >\n                  Update\n                </Button>\n              </ModalFooter>\n            </ModalContent>\n          </Modal>\n          <DrawerHeader\n            fontSize=\"35px\"\n            fontFamily=\"Work sans\"\n            d=\"flex\"\n            justifyContent=\"center\"\n          >\n            {selectedChat.chatName}\n          </DrawerHeader>\n\n          <DrawerBody d=\"flex\" flexDir=\"column\" alignItems=\"center\">\n            <Text fontStyle=\"italic\" w=\"100%\" pl={3} pb={2} color=\"#7e7e7e\">\n              Created by{\" \"}\n              {selectedChat.groupOwner._id === user._id\n                ? \"You\"\n                : selectedChat.groupOwner.name}\n              , {selectedChat.createdAt.slice(0, 10)}\n            </Text>\n\n            <FormControl d=\"flex\">\n              <Input\n                placeholder=\"Chat Name\"\n                mb={3}\n                value={groupChatName}\n                onChange={(e) => setGroupChatName(e.target.value)}\n              />\n              <Button\n                variant=\"solid\"\n                colorScheme=\"teal\"\n                ml={1}\n                isLoading={renameloading}\n                onClick={handleRename}\n              >\n                Update\n              </Button>\n            </FormControl>\n            <FormControl>\n              <Input\n                placeholder=\"Add User to group\"\n                mb={1}\n                value={search}\n                onChange={(e) => {\n                  setSearch(e.target.value);\n                  handleSearch(search);\n                }}\n              />\n            </FormControl>\n            {search.length > 0 && (\n              <Box d=\"flex\" w=\"100%\" px={3} py={3}>\n                <CloseIcon\n                  boxSize={2}\n                  onClick={() => {\n                    setSearch(\"\");\n                    setSearchResult([]);\n                  }}\n                />\n              </Box>\n            )}\n            {loading ? (\n              <Spinner size=\"lg\" />\n            ) : (\n              <>\n                {searchResult?.map((searchUser) => (\n                  <UserListItem\n                    key={searchUser._id}\n                    user={searchUser}\n                    handleFunction={() => handleAddUser(searchUser)}\n                  />\n                ))}\n              </>\n            )}\n            <Text\n              w=\"100%\"\n              textAlign=\"start\"\n              pl={3}\n              color=\"#7e7e7e\"\n              fontStyle=\"italic\"\n              my={2}\n            >\n              {selectedChat && selectedChat.users.length} participant\n              {selectedChat.length !== 1 ? \"s\" : \"\"}\n            </Text>\n\n            {selectedChat.users\n              .filter(\n                (u) =>\n                  !selectedChat.groupAdmin.some((admin) => admin._id === u._id)\n              )\n              .concat(\n                selectedChat.users.filter((u) =>\n                  selectedChat.groupAdmin.some((admin) => admin._id === u._id)\n                )\n              )\n              .reverse()\n              .map((u) => (\n                <ExistGroupUserListItem\n                  key={u._id}\n                  useringroup={u}\n                  admin={selectedChat.groupAdmin}\n                  handleRemoveFunction={() => handleRemove(u)}\n                  handleAddToGroupAdminFunction={() => AddToGroupAdmin(u)}\n                  handleRemoveToGroupAdminFunction={() => RemoveToGroupAdmin(u)}\n                />\n              ))}\n          </DrawerBody>\n          <DrawerFooter>\n            <Button onClick={() => handleRemove(user)} colorScheme=\"red\">\n              Leave Group\n            </Button>\n          </DrawerFooter>\n        </DrawerContent>\n      </Drawer>\n    </>\n  );\n};\n\nexport default UpdateGroupChatModal;\n","import { Box } from \"@chakra-ui/layout\";\nimport \"./styles.css\";\nimport SingleChat from \"./SingleChat\";\nimport { ChatState } from \"../Context/ChatProvider\";\n\nconst Chatbox = ({ fetchAgain, setFetchAgain }) => {\n  const { selectedChat } = ChatState();\n\n  return (\n    <Box\n      d={{ base: selectedChat ? \"flex\" : \"none\", md: \"flex\" }}\n      alignItems=\"center\"\n      flexDir=\"column\"\n      p={3}\n      bg=\"white\"\n      w={{ base: \"100%\", md: \"71%\" }}\n      borderRadius=\"lg\"\n      borderWidth=\"1px\"\n    >\n      <SingleChat fetchAgain={fetchAgain} setFetchAgain={setFetchAgain} />\n    </Box>\n  );\n};\n\nexport default Chatbox;\n","import { Stack } from \"@chakra-ui/layout\";\nimport { Skeleton } from \"@chakra-ui/skeleton\";\n\nconst ChatLoading = () => {\n  return (\n    <Stack>\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n    </Stack>\n  );\n};\n\nexport default ChatLoading;\n","import { CloseIcon } from \"@chakra-ui/icons\";\nimport { Badge } from \"@chakra-ui/layout\";\n\nconst UserBadgeItem = ({ user, handleFunction, admin }) => {\n  return (\n    <Badge\n      px={2}\n      py={1}\n      borderRadius=\"lg\"\n      m={1}\n      mb={2}\n      variant=\"solid\"\n      fontSize={12}\n      colorScheme=\"purple\"\n      cursor=\"pointer\"\n      onClick={handleFunction}\n    >\n      {user.name}\n      {admin === user._id && <span> (Admin)</span>}\n      <CloseIcon pl={1} />\n    </Badge>\n  );\n};\n\nexport default UserBadgeItem;\n","import {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Button,\n  useDisclosure,\n  FormControl,\n  Input,\n  useToast,\n  Box,\n} from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { ChatState } from \"../../Context/ChatProvider\";\nimport UserBadgeItem from \"../userAvatar/UserBadgeItem\";\nimport UserListItem from \"../userAvatar/UserListItem\";\n\nconst GroupChatModal = ({ children }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [groupChatName, setGroupChatName] = useState();\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const toast = useToast();\n\n  const { user, chats, setChats } = ChatState();\n\n  const handleGroup = (userToAdd) => {\n    if (selectedUsers.includes(userToAdd)) {\n      toast({\n        title: \"User already added\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top\",\n      });\n      return;\n    }\n\n    setSelectedUsers([...selectedUsers, userToAdd]);\n  };\n\n  const handleSearch = async (query) => {\n    setSearch(query);\n    if (!query) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\n      \n      setLoading(false);\n      setSearchResult(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Search Results\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  const handleDelete = (delUser) => {\n    setSelectedUsers(selectedUsers.filter((sel) => sel._id !== delUser._id));\n  };\n\n  const handleSubmit = async () => {\n    if (!groupChatName || !selectedUsers) {\n      toast({\n        title: \"Please fill all the feilds\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top\",\n      });\n      return;\n    }\n\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.post(\n        `/api/chat/group`,\n        {\n          name: groupChatName,\n          users: JSON.stringify(selectedUsers.map((u) => u._id)),\n        },\n        config\n      );\n      setChats([data, ...chats]);\n      onClose();\n      toast({\n        title: \"New Group Chat Created!\",\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n    } catch (error) {\n      toast({\n        title: \"Failed to Create the Chat!\",\n        description: error.response.data,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n    }\n  };\n\n  return (\n    <>\n      <span onClick={onOpen}>{children}</span>\n\n      <Modal onClose={onClose} isOpen={isOpen} isCentered>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader\n            fontSize=\"35px\"\n            fontFamily=\"Work sans\"\n            d=\"flex\"\n            justifyContent=\"center\"\n          >\n            Create Group Chat\n          </ModalHeader>\n          <ModalCloseButton />\n          <ModalBody d=\"flex\" flexDir=\"column\" alignItems=\"center\">\n            <FormControl>\n              <Input\n                placeholder=\"Chat Name\"\n                mb={3}\n                onChange={(e) => setGroupChatName(e.target.value)}\n              />\n            </FormControl>\n            <FormControl>\n              <Input\n                placeholder=\"Add Users eg: John, Piyush, Jane\"\n                mb={1}\n                onChange={(e) => handleSearch(e.target.value)}\n              />\n            </FormControl>\n            <Box w=\"100%\" d=\"flex\" flexWrap=\"wrap\">\n              {selectedUsers.map((u) => (\n                <UserBadgeItem\n                  key={u._id}\n                  user={u}\n                  handleFunction={() => handleDelete(u)}\n                />\n              ))}\n            </Box>\n            {loading ? (\n              // <ChatLoading />\n              <div>Loading...</div>\n            ) : (\n              searchResult\n                ?.slice(0, 4)\n                .map((user) => (\n                  <UserListItem\n                    key={user._id}\n                    user={user}\n                    handleFunction={() => handleGroup(user)}\n                  />\n                ))\n            )}\n          </ModalBody>\n          <ModalFooter>\n            <Button onClick={handleSubmit} colorScheme=\"blue\">\n              Create Chat\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default GroupChatModal;\n","import { AddIcon } from \"@chakra-ui/icons\";\nimport { Box, Stack, Text } from \"@chakra-ui/layout\";\nimport { useToast } from \"@chakra-ui/toast\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { getSender, getSenderPic } from \"../config/ChatLogics\";\nimport ChatLoading from \"./ChatLoading\";\nimport GroupChatModal from \"./miscellaneous/GroupChatModal\";\nimport { Button, Avatar, AvatarGroup } from \"@chakra-ui/react\";\nimport { ChatState } from \"../Context/ChatProvider\";\n\nconst MyChats = ({ fetchAgain }) => {\n  const [loggedUser, setLoggedUser] = useState();\n\n  const { selectedChat, setSelectedChat, user, chats, setChats } = ChatState();\n\n  const toast = useToast();\n\n  const fetchChats = async () => {\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      const { data } = await axios.get(\"/api/chat\", config);\n\n      setChats(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the chats\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    // setLoggedUser(user);\n    setLoggedUser(JSON.parse(localStorage.getItem(\"userInfo\")));\n    fetchChats();\n    // eslint-disable-next-line\n  }, [fetchAgain, user]);\n\n  const capitalizeFirstLetter = (str) => {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  };\n\n  return (\n    <Box\n      d={{ base: selectedChat ? \"none\" : \"flex\", md: \"flex\" }}\n      flexDir=\"column\"\n      alignItems=\"center\"\n      p={3}\n      bg=\"white\"\n      w={{ base: \"100%\", md: \"28%\" }}\n      borderRadius=\"lg\"\n      borderWidth=\"1px\"\n    >\n      <Box\n        pb={3}\n        px={{ base: \"1\", md: \"2\" }}\n        fontSize={{ base: \"28px\", md: \"30px\" }}\n        fontFamily=\"Work sans\"\n        d=\"flex\"\n        w=\"100%\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n      >\n        <Box fontSize={{ base: \"22px\", md: \"15px\", lg: \"17px\" }}>My Chats</Box>\n        <Box>\n          <GroupChatModal>\n            <Button\n              d=\"flex\"\n              fontSize={{ base: \"17px\", md: \"10px\", lg: \"17px\" }}\n              rightIcon={<AddIcon />}\n              w={{ base: \"100%\", md: \"90%\", lg: \"100%\" }}\n            >\n              New Group Chat\n            </Button>\n          </GroupChatModal>\n        </Box>\n      </Box>\n      <Box\n        d=\"flex\"\n        flexDir=\"column\"\n        p={3}\n        bg=\"#F8F8F8\"\n        w=\"100%\"\n        h=\"100%\"\n        borderRadius=\"lg\"\n        overflowY=\"hidden\"\n      >\n        {chats ? (\n          <Stack overflowY=\"scroll\">\n            {chats.map((chat) => (\n              <Box\n                onClick={() => setSelectedChat(chat)}\n                cursor=\"pointer\"\n                bg={selectedChat === chat ? \"#38B2AC\" : \"#E8E8E8\"}\n                color={selectedChat === chat ? \"white\" : \"black\"}\n                px={3}\n                py={2}\n                borderRadius=\"lg\"\n                key={chat._id}\n                d=\"flex\"\n              >\n                <Box d=\"flex\" alignItems=\"center\">\n                  {!chat.isGroupChat ? (\n                    <>\n                      {getSenderPic(loggedUser, chat.users) ? (\n                        <Avatar src={getSenderPic(loggedUser, chat.users)} />\n                      ) : (\n                        <Avatar src=\"https://bit.ly/broken-link\" />\n                      )}\n                    </>\n                  ) : (\n                    <>\n                      {chat.pic ? (\n                        <AvatarGroup size=\"md\" max={2}>\n                          <Avatar src={chat.pic} />\n                          <Avatar src=\"https://bit.ly/broken-link\" mx={-7} />\n                        </AvatarGroup>\n                      ) : (\n                        <Avatar src=\"https://bit.ly/broken-link\" />\n                      )}\n                    </>\n                  )}\n                </Box>\n                <Box ml={3}>\n                  <Text fontSize=\"xl\">\n                    {!chat.isGroupChat\n                      ? getSender(loggedUser, chat.users) &&\n                        capitalizeFirstLetter(getSender(loggedUser, chat.users))\n                      : chat.chatName && capitalizeFirstLetter(chat.chatName)}\n                  </Text>\n                  {chat.latestMessage && (\n                    <Text fontSize=\"xs\" color=\"#3a3a3a\">\n                      {chat.latestMessage.content.length > 50\n                        ? chat.latestMessage.content.substring(0, 51) + \"...\"\n                        : chat.latestMessage.content}\n                    </Text>\n                  )}\n                </Box>\n              </Box>\n            ))}\n          </Stack>\n        ) : (\n          <ChatLoading />\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nexport default MyChats;\n","import {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Button,\n  useDisclosure,\n  IconButton,\n  Text,\n  Image,\n  Drawer,\n  DrawerBody,\n  DrawerFooter,\n  DrawerHeader,\n  DrawerOverlay,\n  DrawerContent,\n  DrawerCloseButton,\n  Box,\n  useToast,\n} from \"@chakra-ui/react\";\nimport React, { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { ViewIcon, EditIcon } from \"@chakra-ui/icons\";\nimport axios from \"axios\";\nimport { ChatState } from \"../../Context/ChatProvider\";\n\nconst MineprofileModal = ({ user, children, fetchAgain, setFetchAgain }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const {\n    isOpen: isOpenImage,\n    onOpen: onOpenImage,\n    onClose: onCloseImage,\n  } = useDisclosure();\n  const btnRef = React.useRef();\n  const [pic, setPic] = useState();\n  const [updatePic, setUpdatepic] = useState();\n\n  const [picLoading, setPicLoading] = useState(false);\n  useEffect(() => {}, [updatePic]);\n\n  const toast = useToast();\n\n  const handleImageUpload = (event) => {\n    const pics = event.target.files[0];\n    setPicLoading(true);\n    if (pics === undefined) {\n      toast({\n        title: \"Please Select an Image!\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n\n    if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\n      const data = new FormData();\n      data.append(\"file\", pics);\n      data.append(\"upload_preset\", \"chat-app\");\n      data.append(\"cloud_name\", \"djn1nfuky\");\n      fetch(\"https://api.cloudinary.com/v1_1/djn1nfuky/image/upload\", {\n        method: \"post\",\n        body: data,\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          setPic(data.url.toString());\n\n          setPicLoading(false);\n        })\n        .catch((err) => {\n          console.log(err);\n          setPicLoading(false);\n        });\n    } else {\n      toast({\n        title: \"Please Select an Image!\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setPicLoading(false);\n      return;\n    }\n  };\n\n  const handleGroupImageUpload = async () => {\n    if (!pic) return;\n\n    try {\n      setPicLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.put(\n        `/api/user/updatepic`,\n        {\n          userId: user._id,\n          pic: pic,\n        },\n        config\n      );\n\n      setUpdatepic(data.pic);\n      const userInfo = localStorage.getItem(\"userInfo\");\n\n      if (userInfo) {\n        const parsedUserInfo = JSON.parse(userInfo);\n        const updatedUserInfo = { ...parsedUserInfo, ...data };\n        localStorage.setItem(\"userInfo\", JSON.stringify(updatedUserInfo));\n      } else {\n        localStorage.setItem(\"userInfo\", JSON.stringify(data));\n      }\n\n      setFetchAgain(!fetchAgain);\n      setPicLoading(false);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setPicLoading(false);\n    }\n  };\n  return (\n    <>\n      {children ? (\n        <span onClick={onOpen}>{children}</span>\n      ) : (\n        <IconButton d={{ base: \"flex\" }} icon={<ViewIcon />} onClick={onOpen} />\n      )}\n\n      <Drawer\n        isOpen={isOpen}\n        placement=\"right\"\n        onClose={onClose}\n        finalFocusRef={btnRef}\n        size=\"sm\"\n      >\n        <DrawerOverlay />\n        <DrawerContent>\n          <DrawerCloseButton />\n          <Box\n            d=\"flex\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n            w=\"100%\"\n            pt={10}\n          >\n            <Image\n              borderRadius=\"full\"\n              boxSize=\"110px\"\n              src={updatePic ? updatePic : user.pic}\n              alt={user.name}\n            />\n          </Box>\n\n          <Box\n            d=\"flex\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n            w=\"100%\"\n            pl={100}\n            my={-4}\n            // onClick={onOpenImage}\n          >\n            <IconButton\n              aria-label=\"Search database\"\n              icon={<EditIcon />}\n              onClick={onOpenImage}\n              size=\"xs\"\n            />\n          </Box>\n\n          <Modal isOpen={isOpenImage} onClose={onCloseImage}>\n            <ModalOverlay />\n            <ModalContent>\n              <ModalHeader>Upload Image</ModalHeader>\n              <ModalCloseButton />\n              <ModalBody>\n                <input type=\"file\" onChange={handleImageUpload} />\n                <Box\n                  my={4}\n                  w=\"100%\"\n                  d=\"flex\"\n                  justifyContent=\"center\"\n                  alignItems=\"center\"\n                >\n                  {pic && <img src={pic} alt=\"Selected\" />}\n                </Box>\n              </ModalBody>\n\n              <ModalFooter>\n                <Button colorScheme=\"blue\" mr={3} onClick={onCloseImage}>\n                  Close\n                </Button>\n                <Button\n                  variant=\"ghost\"\n                  isLoading={picLoading}\n                  onClick={() => {\n                    handleGroupImageUpload();\n                    onCloseImage();\n                  }}\n                >\n                  Update\n                </Button>\n              </ModalFooter>\n            </ModalContent>\n          </Modal>\n          <DrawerHeader\n            fontFamily=\"Work sans\"\n            d=\"flex\"\n            justifyContent=\"center\"\n            flexDirection=\"column\"\n            alignItems=\"center\"\n            pt={10}\n          >\n            <Box fontSize=\"35px\">{user.name}</Box>\n            <Box> {user.email}</Box>\n          </DrawerHeader>\n\n          <DrawerBody d=\"flex\" flexDir=\"column\" alignItems=\"center\">\n            <Text\n              fontStyle=\"italic\"\n              w=\"100%\"\n              pl={3}\n              pb={2}\n              color=\"#7e7e7e\"\n            ></Text>\n          </DrawerBody>\n          <DrawerFooter></DrawerFooter>\n        </DrawerContent>\n      </Drawer>\n    </>\n  );\n};\n\nexport default MineprofileModal;\n","import { Button } from \"@chakra-ui/button\";\nimport { useDisclosure } from \"@chakra-ui/hooks\";\nimport { Input } from \"@chakra-ui/input\";\nimport { Box, Text } from \"@chakra-ui/layout\";\nimport {\n  Menu,\n  MenuButton,\n  MenuDivider,\n  MenuItem,\n  MenuList,\n} from \"@chakra-ui/menu\";\nimport {\n  Drawer,\n  DrawerBody,\n  DrawerContent,\n  DrawerHeader,\n  DrawerOverlay,\n} from \"@chakra-ui/modal\";\nimport { Tooltip } from \"@chakra-ui/tooltip\";\nimport { BellIcon, ChevronDownIcon } from \"@chakra-ui/icons\";\nimport { Avatar } from \"@chakra-ui/avatar\";\nimport { useHistory } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { useToast } from \"@chakra-ui/toast\";\nimport ChatLoading from \"../ChatLoading\";\nimport { Spinner } from \"@chakra-ui/spinner\";\nimport MineprofileModal from \"./MineprofileModal\";\nimport NotificationBadge from \"react-notification-badge\";\nimport { Effect } from \"react-notification-badge\";\nimport { getSender } from \"../../config/ChatLogics\";\nimport UserListItem from \"../userAvatar/UserListItem\";\nimport { ChatState } from \"../../Context/ChatProvider\";\n\nfunction SideDrawer({ fetchAgain, setFetchAgain }) {\n  const [search, setSearch] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [loadingChat, setLoadingChat] = useState(false);\n\n  const {\n    setSelectedChat,\n    user,\n    notification,\n    setNotification,\n    chats,\n    setChats,\n  } = ChatState();\n\n  const toast = useToast();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const history = useHistory();\n\n  const logoutHandler = () => {\n    localStorage.removeItem(\"userInfo\");\n    history.push(\"/\");\n  };\n\n  const handleSearch = async () => {\n    if (!search) {\n      toast({\n        title: \"Please Enter something in search\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top-left\",\n      });\n      return;\n    }\n\n    try {\n      setLoading(true);\n\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\n\n      setLoading(false);\n      setSearchResult(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Search Results\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  const accessChat = async (userId) => {\n    try {\n      setLoadingChat(true);\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.post(`/api/chat`, { userId }, config);\n\n      if (!chats.find((c) => c._id === data._id)) setChats([data, ...chats]);\n      setSelectedChat(data);\n      setLoadingChat(false);\n      onClose();\n    } catch (error) {\n      toast({\n        title: \"Error fetching the chat\",\n        description: error.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  return (\n    <>\n      <Box\n        d=\"flex\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        bg=\"white\"\n        w=\"100%\"\n        p=\"5px 10px 5px 10px\"\n        borderWidth=\"5px\"\n      >\n        <Tooltip label=\"Search Users to chat\" hasArrow placement=\"bottom-end\">\n          <Button variant=\"ghost\" onClick={onOpen}>\n            <i className=\"fas fa-search\"></i>\n            <Text d={{ base: \"none\", md: \"flex\" }} px={4}>\n              Search User\n            </Text>\n          </Button>\n        </Tooltip>\n        <Text fontSize=\"2xl\" fontFamily=\"Work sans\" pr={{ base: \"2\" }}>\n          FliphoChatRoom\n        </Text>\n        <Box d={{ base: \"flex\" }}>\n          <Menu>\n            <MenuButton p={{ md: \"1\" }}>\n              <NotificationBadge\n                count={notification.length}\n                effect={Effect.SCALE}\n              />\n              <BellIcon fontSize=\"2xl\" m={1} />\n            </MenuButton>\n            <MenuList pl={2}>\n              {!notification.length && \"No New Messages\"}\n              {notification.map((notif) => (\n                <MenuItem\n                  key={notif._id}\n                  onClick={() => {\n                    setSelectedChat(notif.chat);\n                    setNotification(notification.filter((n) => n !== notif));\n                  }}\n                >\n                  {notif.chat.isGroupChat\n                    ? `New Message in ${notif.chat.chatName}`\n                    : `New Message from ${getSender(user, notif.chat.users)}`}\n                </MenuItem>\n              ))}\n            </MenuList>\n          </Menu>\n          <Menu>\n            <MenuButton\n              px={{ base: \"1\" }}\n              as={Button}\n              bg=\"white\"\n              rightIcon={<ChevronDownIcon />}\n            >\n              <Avatar\n                size=\"sm\"\n                cursor=\"pointer\"\n                name={user.name}\n                src={user.pic}\n              />\n            </MenuButton>\n            <MenuList>\n              <MineprofileModal\n                user={user}\n                fetchAgain={fetchAgain}\n                setFetchAgain={setFetchAgain}\n              >\n                <MenuItem>My Profile</MenuItem>{\" \"}\n              </MineprofileModal>\n              <MenuDivider />\n              <MenuItem onClick={logoutHandler}>Logout</MenuItem>\n            </MenuList>\n          </Menu>\n        </Box>\n      </Box>\n\n      <Drawer placement=\"left\" onClose={onClose} isOpen={isOpen}>\n        <DrawerOverlay />\n        <DrawerContent>\n          <DrawerHeader borderBottomWidth=\"1px\">Search Users</DrawerHeader>\n          <DrawerBody>\n            <Box d=\"flex\" pb={2}>\n              <Input\n                placeholder=\"Search by name or email\"\n                mr={2}\n                value={search}\n                onChange={(e) => setSearch(e.target.value)}\n              />\n              <Button onClick={handleSearch}>Go</Button>\n            </Box>\n            {loading ? (\n              <ChatLoading />\n            ) : (\n              searchResult?.map((searuser) => (\n                <UserListItem\n                  key={searuser._id}\n                  user={searuser}\n                  handleFunction={() => accessChat(searuser._id)}\n                />\n              ))\n            )}\n            {loadingChat && <Spinner ml=\"auto\" d=\"flex\" />}\n          </DrawerBody>\n        </DrawerContent>\n      </Drawer>\n    </>\n  );\n}\n\nexport default SideDrawer;\n","import { Box } from \"@chakra-ui/layout\";\nimport { useState } from \"react\";\nimport Chatbox from \"../components/Chatbox\";\nimport MyChats from \"../components/MyChats\";\nimport SideDrawer from \"../components/miscellaneous/SideDrawer\";\nimport { ChatState } from \"../Context/ChatProvider\";\n\nconst Chatpage = () => {\n  const [fetchAgain, setFetchAgain] = useState(false);\n  const { user } = ChatState();\n\n  return (\n    <div style={{ width: \"100%\" }}>\n      {user && (\n        <SideDrawer fetchAgain={fetchAgain} setFetchAgain={setFetchAgain} />\n      )}\n      <Box d=\"flex\" justifyContent=\"space-between\" w=\"100%\" h=\"91.5vh\" p=\"10px\">\n        {user && <MyChats fetchAgain={fetchAgain} />}\n        {user && (\n          <Chatbox fetchAgain={fetchAgain} setFetchAgain={setFetchAgain} />\n        )}\n      </Box>\n    </div>\n  );\n};\n\nexport default Chatpage;\n","import \"./App.css\";\nimport Homepage from \"./Pages/Homepage\";\nimport { Route } from \"react-router-dom\";\nimport Chatpage from \"./Pages/Chatpage\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Route path=\"/\" component={Homepage} exact />\n      <Route path=\"/chats\" component={Chatpage} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport ChatProvider from \"./Context/ChatProvider\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <ChakraProvider>\n      <ChatProvider>\n        <App />\n      </ChatProvider>\n    </ChakraProvider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}