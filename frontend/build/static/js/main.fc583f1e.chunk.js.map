{"version":3,"sources":["Context/ChatProvider.js","components/Authentication/Login.js","components/Authentication/Signup.js","Pages/Homepage.js","components/SingleChat.js","config/ChatLogics.js","components/miscellaneous/ProfileModal.js","components/ScrollableChat.js","components/userAvatar/UserBadgeItem.js","components/userAvatar/UserListItem.js","components/userAvatar/existGroupUserListItem.js","components/miscellaneous/UpdateGroupChatModal.js","components/Chatbox.js","components/ChatLoading.js","components/miscellaneous/GroupChatModal.js","components/MyChats.js","components/miscellaneous/SideDrawer.js","Pages/Chatpage.js","App.js","index.js"],"names":["ChatContext","createContext","ChatState","useContext","ChatProvider","_ref","children","_useState","useState","_useState2","_slicedToArray","selectedChat","setSelectedChat","_useState3","_useState4","user","setUser","_useState5","_useState6","notification","setNotification","_useState7","_useState8","chats","setChats","history","useHistory","useEffect","userInfo","JSON","parse","localStorage","getItem","push","_jsx","Provider","value","Login","show","setShow","toast","useToast","email","setEmail","password","setPassword","loading","setLoading","_ChatState","submitHandler","_asyncToGenerator","_regeneratorRuntime","mark","_callee","config","_yield$axios$post","data","wrap","_context","prev","next","title","status","duration","isClosable","position","abrupt","headers","axios","post","sent","setItem","stringify","t0","description","response","message","stop","apply","arguments","_jsxs","VStack","spacing","FormControl","id","isRequired","FormLabel","Input","type","placeholder","onChange","e","target","InputGroup","size","InputRightElement","width","Button","h","onClick","colorScheme","style","marginTop","isLoading","variant","Signup","handleClick","name","setName","confirmpassword","setConfirmpassword","_useState9","_useState10","_useState11","_useState12","pic","setPic","_useState13","_useState14","picLoading","setPicLoading","console","log","p","accept","pics","undefined","FormData","append","fetch","method","body","then","res","json","url","toString","catch","err","postDetails","files","Homepage","socket","selectedChatCompare","Container","maxW","centerContent","Box","d","justifyContent","bg","w","m","borderRadius","borderWidth","Text","fontSize","fontFamily","Tabs","isFitted","TabList","mb","Tab","TabPanels","TabPanel","isSameSenderMargin","messages","i","userId","length","sender","_id","isSameSender","isLastMessage","isSameUser","getSender","loggedUser","users","ProfileModal","_useDisclosure","useDisclosure","isOpen","onOpen","onClose","_Fragment","IconButton","base","icon","ViewIcon","Modal","isCentered","ModalOverlay","ModalContent","ModalHeader","ModalCloseButton","ModalBody","flexDir","alignItems","Image","boxSize","src","alt","md","ModalFooter","ScrollableChat","ScrollableFeed","map","display","Tooltip","label","placement","hasArrow","Avatar","mt","mr","cursor","backgroundColor","concat","marginLeft","padding","maxWidth","content","UserBadgeItem","handleFunction","admin","Badge","px","py","CloseIcon","pl","UserListItem","_hover","background","color","ExistGroupUserListItem","useringroup","handleRemoveFunction","handleAddToGroupAdminFunction","handleRemoveToGroupAdminFunction","setIsOpen","pos","ml","some","SmallCloseIcon","SmallAddIcon","right","top","flexDirection","zIndex","UpdateGroupChatModal","fetchMessages","fetchAgain","setFetchAgain","btnRef","React","useRef","groupChatName","setGroupChatName","search","setSearch","searchResult","setSearchResult","renameloading","setRenameLoading","handleSearch","_ref2","query","_yield$axios$get","Authorization","token","get","_x","handleRename","_ref3","_callee2","_yield$axios$put","_context2","put","chatId","chatName","handleAddUser","_ref4","_callee3","user1","_yield$axios$put2","_context3","find","u","groupAdmin","_x2","handleRemove","_ref5","_callee4","_yield$axios$put3","_context4","groupOwner","_x3","AddToGroupAdmin","_ref6","_callee5","_yield$axios$put4","_context5","_x4","RemoveToGroupAdmin","_ref7","_callee6","_yield$axios$put5","_context6","_x5","Drawer","finalFocusRef","DrawerOverlay","DrawerContent","DrawerCloseButton","pt","chatname","my","htmlFor","EditIcon","DrawerHeader","DrawerBody","fontStyle","pb","createdAt","slice","Spinner","Stack","overflowY","searchUser","textAlign","filter","reverse","DrawerFooter","SingleChat","setMessages","newMessage","setNewMessage","socketConnected","setSocketConnected","typing","setTyping","istyping","setIsTyping","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","emit","sendMessage","event","key","_toConsumableArray","io","on","newMessageRecieved","chat","includes","ArrowBackIcon","isGroupChat","toUpperCase","alignSelf","margin","className","onKeyDown","Lottie","options","marginBottom","lastTypingTime","Date","getTime","setTimeout","Chatbox","ChatLoading","Skeleton","height","GroupChatModal","selectedUsers","setSelectedUsers","handleSubmit","flexWrap","delUser","sel","userToAdd","MyChats","setLoggedUser","fetchChats","lg","rightIcon","AddIcon","latestMessage","substring","SideDrawer","loadingChat","setLoadingChat","accessChat","c","Menu","MenuButton","NotificationBadge","count","effect","Effect","SCALE","BellIcon","MenuList","notif","MenuItem","n","as","ChevronDownIcon","MenuDivider","removeItem","borderBottomWidth","searuser","Chatpage","App","Route","path","component","exact","ReactDOM","render","BrowserRouter","ChakraProvider","document","getElementById"],"mappings":"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","file":"static/js/main.fc583f1e.chunk.js","sourcesContent":["import React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst ChatContext = createContext();\n\nconst ChatProvider = ({ children }) => {\n  const [selectedChat, setSelectedChat] = useState();\n  const [user, setUser] = useState();\n  const [notification, setNotification] = useState([]);\n  const [chats, setChats] = useState();\n\n  const history = useHistory();\n\n  useEffect(() => {\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\n    setUser(userInfo);\n\n    if (!userInfo) history.push(\"/\");\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [history]);\n\n  return (\n    <ChatContext.Provider\n      value={{\n        selectedChat,\n        setSelectedChat,\n        user,\n        setUser,\n        notification,\n        setNotification,\n        chats,\n        setChats,\n      }}\n    >\n      {children}\n    </ChatContext.Provider>\n  );\n};\n\nexport const ChatState = () => {\n  return useContext(ChatContext);\n};\n\nexport default ChatProvider;\n","import { Button } from \"@chakra-ui/button\";\nimport { FormControl, FormLabel } from \"@chakra-ui/form-control\";\nimport { Input, InputGroup, InputRightElement } from \"@chakra-ui/input\";\nimport { VStack } from \"@chakra-ui/layout\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { useToast } from \"@chakra-ui/react\";\nimport { useHistory } from \"react-router-dom\";\nimport { ChatState } from \"../../Context/ChatProvider\";\n\nconst Login = () => {\n  const [show, setShow] = useState(false);\n  const handleClick = () => setShow(!show);\n  const toast = useToast();\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const [loading, setLoading] = useState(false);\n\n  const history = useHistory();\n  const { user, setUser } = ChatState();\n\n  const submitHandler = async () => {\n    setLoading(true);\n    if (!email || !password) {\n      toast({\n        title: \"Please Fill all the Feilds\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n      return;\n    }\n\n    // console.log(email, password);\n    try {\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n      };\n\n      const { data } = await axios.post(\n        \"/api/user/login\",\n        { email, password },\n        config\n      );\n\n      // console.log(JSON.stringify(data));\n      toast({\n        title: \"Login Successful\",\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\n      setLoading(false);\n      setUser(data);\n      history.push(\"/chats\");\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n    }\n  };\n\n  return (\n    <VStack spacing=\"10px\">\n      <FormControl id=\"email\" isRequired>\n        <FormLabel>Email Address</FormLabel>\n        <Input\n          value={email}\n          type=\"email\"\n          placeholder=\"Enter Your Email Address\"\n          onChange={(e) => setEmail(e.target.value)}\n        />\n      </FormControl>\n      <FormControl id=\"password\" isRequired>\n        <FormLabel>Password</FormLabel>\n        <InputGroup size=\"md\">\n          <Input\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            type={show ? \"text\" : \"password\"}\n            placeholder=\"Enter password\"\n          />\n          <InputRightElement width=\"4.5rem\">\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\n              {show ? \"Hide\" : \"Show\"}\n            </Button>\n          </InputRightElement>\n        </InputGroup>\n      </FormControl>\n      <Button\n        colorScheme=\"blue\"\n        width=\"100%\"\n        style={{ marginTop: 15 }}\n        onClick={submitHandler}\n        isLoading={loading}\n      >\n        Login\n      </Button>\n      <Button\n        variant=\"solid\"\n        colorScheme=\"red\"\n        width=\"100%\"\n        onClick={() => {\n          setEmail(\"guest@example.com\");\n          setPassword(\"123456\");\n        }}\n      >\n        Get Guest User Credentials\n      </Button>\n    </VStack>\n  );\n};\n\nexport default Login;\n","import { Button } from \"@chakra-ui/button\";\nimport { FormControl, FormLabel } from \"@chakra-ui/form-control\";\nimport { Input, InputGroup, InputRightElement } from \"@chakra-ui/input\";\nimport { VStack } from \"@chakra-ui/layout\";\nimport { useToast } from \"@chakra-ui/toast\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router\";\n\nconst Signup = () => {\n  const [show, setShow] = useState(false);\n  const handleClick = () => setShow(!show);\n  const toast = useToast();\n  const history = useHistory();\n\n  const [name, setName] = useState();\n  const [email, setEmail] = useState();\n  const [confirmpassword, setConfirmpassword] = useState();\n  const [password, setPassword] = useState();\n  const [pic, setPic] = useState();\n  const [picLoading, setPicLoading] = useState(false);\n\n  const submitHandler = async () => {\n    setPicLoading(true);\n    if (!name || !email || !password || !confirmpassword) {\n      toast({\n        title: \"Please Fill all the Feilds\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setPicLoading(false);\n      return;\n    }\n    if (password !== confirmpassword) {\n      toast({\n        title: \"Passwords Do Not Match\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n    console.log(name, email, password, pic);\n    try {\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n      };\n      const { data } = await axios.post(\n        \"/api/user\",\n        {\n          name,\n          email,\n          password,\n          pic,\n        },\n        config\n      );\n      console.log(data);\n      toast({\n        title: \"Registration Successful\",\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\n      setPicLoading(false);\n      history.push(\"/chats\");\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setPicLoading(false);\n    }\n  };\n\n  const postDetails = (pics) => {\n    setPicLoading(true);\n    if (pics === undefined) {\n      toast({\n        title: \"Please Select an Image!\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n    console.log(pics);\n    if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\n      const data = new FormData();\n      data.append(\"file\", pics);\n      data.append(\"upload_preset\", \"chat-app\");\n      data.append(\"cloud_name\", \"djn1nfuky\");\n      fetch(\"https://api.cloudinary.com/v1_1/djn1nfuky/image/upload\", {\n        method: \"post\",\n        body: data,\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          setPic(data.url.toString());\n          console.log(data.url.toString());\n          setPicLoading(false);\n        })\n        .catch((err) => {\n          console.log(err);\n          setPicLoading(false);\n        });\n    } else {\n      toast({\n        title: \"Please Select an Image!\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setPicLoading(false);\n      return;\n    }\n  };\n\n  return (\n    <VStack spacing=\"5px\">\n      <FormControl id=\"first-name\" isRequired>\n        <FormLabel>Name</FormLabel>\n        <Input\n          placeholder=\"Enter Your Name\"\n          onChange={(e) => setName(e.target.value)}\n        />\n      </FormControl>\n      <FormControl id=\"email\" isRequired>\n        <FormLabel>Email Address</FormLabel>\n        <Input\n          type=\"email\"\n          placeholder=\"Enter Your Email Address\"\n          onChange={(e) => setEmail(e.target.value)}\n        />\n      </FormControl>\n      <FormControl id=\"password\" isRequired>\n        <FormLabel>Password</FormLabel>\n        <InputGroup size=\"md\">\n          <Input\n            type={show ? \"text\" : \"password\"}\n            placeholder=\"Enter Password\"\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          <InputRightElement width=\"4.5rem\">\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\n              {show ? \"Hide\" : \"Show\"}\n            </Button>\n          </InputRightElement>\n        </InputGroup>\n      </FormControl>\n      <FormControl id=\"password\" isRequired>\n        <FormLabel>Confirm Password</FormLabel>\n        <InputGroup size=\"md\">\n          <Input\n            type={show ? \"text\" : \"password\"}\n            placeholder=\"Confirm password\"\n            onChange={(e) => setConfirmpassword(e.target.value)}\n          />\n          <InputRightElement width=\"4.5rem\">\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\n              {show ? \"Hide\" : \"Show\"}\n            </Button>\n          </InputRightElement>\n        </InputGroup>\n      </FormControl>\n      <FormControl id=\"pic\">\n        <FormLabel>Upload your Picture</FormLabel>\n        <Input\n          type=\"file\"\n          p={1.5}\n          accept=\"image/*\"\n          onChange={(e) => postDetails(e.target.files[0])}\n        />\n      </FormControl>\n      <Button\n        colorScheme=\"blue\"\n        width=\"100%\"\n        style={{ marginTop: 15 }}\n        onClick={submitHandler}\n        isLoading={picLoading}\n      >\n        Sign Up\n      </Button>\n    </VStack>\n  );\n};\n\nexport default Signup;\n","import {\n  Box,\n  Container,\n  Tab,\n  TabList,\n  TabPanel,\n  TabPanels,\n  Tabs,\n  Text,\n} from \"@chakra-ui/react\";\nimport { useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport Login from \"../components/Authentication/Login\";\nimport Signup from \"../components/Authentication/Signup\";\n\nfunction Homepage() {\n  const history = useHistory();\n\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem(\"userInfo\"));\n\n    if (user) history.push(\"/chats\");\n  }, [history]);\n\n  return (\n    <Container maxW=\"xl\" centerContent>\n      <Box\n        d=\"flex\"\n        justifyContent=\"center\"\n        p={3}\n        bg=\"white\"\n        w=\"100%\"\n        m=\"40px 0 15px 0\"\n        borderRadius=\"lg\"\n        borderWidth=\"1px\"\n      >\n        <Text fontSize=\"4xl\" fontFamily=\"Work sans\">\n          Flipho-Chat-Room\n        </Text>\n      </Box>\n      <Box bg=\"white\" w=\"100%\" p={4} borderRadius=\"lg\" borderWidth=\"1px\">\n        <Tabs isFitted variant=\"soft-rounded\">\n          <TabList mb=\"1em\">\n            <Tab>Login</Tab>\n            <Tab>Sign Up</Tab>\n          </TabList>\n          <TabPanels>\n            <TabPanel>\n              <Login />\n            </TabPanel>\n            <TabPanel>\n              <Signup />\n            </TabPanel>\n          </TabPanels>\n        </Tabs>\n      </Box>\n    </Container>\n  );\n}\n\nexport default Homepage;\n","import { FormControl } from \"@chakra-ui/form-control\";\nimport { Input } from \"@chakra-ui/input\";\nimport { Box, Text } from \"@chakra-ui/layout\";\nimport \"./styles.css\";\nimport { IconButton, Spinner, useToast } from \"@chakra-ui/react\";\nimport { getSender, getSenderFull } from \"../config/ChatLogics\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { ArrowBackIcon } from \"@chakra-ui/icons\";\nimport ProfileModal from \"./miscellaneous/ProfileModal\";\nimport ScrollableChat from \"./ScrollableChat\";\nimport Lottie from \"react-lottie\";\nimport animationData from \"../animations/typing.json\";\n\nimport io from \"socket.io-client\";\nimport UpdateGroupChatModal from \"./miscellaneous/UpdateGroupChatModal\";\nimport { ChatState } from \"../Context/ChatProvider\";\nconst ENDPOINT = \"https://fliphochat.onrender.com/\";\n// const ENDPOINT = \"http://localhost:5000\";\nvar socket, selectedChatCompare;\n\nconst SingleChat = ({ fetchAgain, setFetchAgain }) => {\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [socketConnected, setSocketConnected] = useState(false);\n  const [typing, setTyping] = useState(false);\n  const [istyping, setIsTyping] = useState(false);\n  const toast = useToast();\n\n  const defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: animationData,\n    rendererSettings: {\n      preserveAspectRatio: \"xMidYMid slice\",\n    },\n  };\n  const { selectedChat, setSelectedChat, user, notification, setNotification } =\n    ChatState();\n\n  const fetchMessages = async () => {\n    if (!selectedChat) return;\n\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      setLoading(true);\n\n      const { data } = await axios.get(\n        `/api/message/${selectedChat._id}`,\n        config\n      );\n      setMessages(data);\n      setLoading(false);\n\n      socket.emit(\"join chat\", selectedChat._id);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Messages\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n    }\n  };\n\n  const sendMessage = async (event) => {\n    if (event.key === \"Enter\" && newMessage) {\n      socket.emit(\"stop typing\", selectedChat._id);\n      try {\n        const config = {\n          headers: {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${user.token}`,\n          },\n        };\n        setNewMessage(\"\");\n        const { data } = await axios.post(\n          \"/api/message\",\n          {\n            content: newMessage,\n            chatId: selectedChat,\n          },\n          config\n        );\n        socket.emit(\"new message\", data);\n        setMessages([...messages, data]);\n      } catch (error) {\n        toast({\n          title: \"Error Occured!\",\n          description: \"Failed to send the Message\",\n          status: \"error\",\n          duration: 5000,\n          isClosable: true,\n          position: \"bottom\",\n        });\n      }\n    }\n  };\n\n  useEffect(() => {\n    socket = io(ENDPOINT);\n    socket.emit(\"setup\", user);\n    socket.on(\"connected\", () => setSocketConnected(true));\n    socket.on(\"typing\", () => setIsTyping(true));\n    socket.on(\"stop typing\", () => setIsTyping(false));\n\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    fetchMessages();\n\n    selectedChatCompare = selectedChat;\n    // eslint-disable-next-line\n  }, [selectedChat]);\n\n  useEffect(() => {\n    socket.on(\"message recieved\", (newMessageRecieved) => {\n      if (\n        !selectedChatCompare || // if chat is not selected or doesn't match current chat\n        selectedChatCompare._id !== newMessageRecieved.chat._id\n      ) {\n        if (!notification.includes(newMessageRecieved)) {\n          setNotification([newMessageRecieved, ...notification]);\n          setFetchAgain(!fetchAgain);\n        }\n      } else {\n        setMessages([...messages, newMessageRecieved]);\n      }\n    });\n  });\n\n  const typingHandler = (e) => {\n    setNewMessage(e.target.value);\n\n    if (!socketConnected) return;\n\n    if (!typing) {\n      setTyping(true);\n      socket.emit(\"typing\", selectedChat._id);\n    }\n    let lastTypingTime = new Date().getTime();\n    var timerLength = 3000;\n    setTimeout(() => {\n      var timeNow = new Date().getTime();\n      var timeDiff = timeNow - lastTypingTime;\n      if (timeDiff >= timerLength && typing) {\n        socket.emit(\"stop typing\", selectedChat._id);\n        setTyping(false);\n      }\n    }, timerLength);\n  };\n\n  return (\n    <>\n      {selectedChat ? (\n        <>\n          <Text\n            fontSize={{ base: \"28px\", md: \"30px\" }}\n            pb={3}\n            px={2}\n            w=\"100%\"\n            fontFamily=\"Work sans\"\n            d=\"flex\"\n            justifyContent={{ base: \"space-between\" }}\n            alignItems=\"center\"\n          >\n            <IconButton\n              d={{ base: \"flex\", md: \"none\" }}\n              icon={<ArrowBackIcon />}\n              onClick={() => setSelectedChat(\"\")}\n            />\n            {messages &&\n              (!selectedChat.isGroupChat ? (\n                <>\n                  {getSender(user, selectedChat.users)}\n                  <ProfileModal\n                    user={getSenderFull(user, selectedChat.users)}\n                  />\n                </>\n              ) : (\n                <>\n                  {selectedChat.chatName.toUpperCase()}\n                  <UpdateGroupChatModal\n                    fetchMessages={fetchMessages}\n                    fetchAgain={fetchAgain}\n                    setFetchAgain={setFetchAgain}\n                  />\n                </>\n              ))}\n          </Text>\n          <Box\n            d=\"flex\"\n            flexDir=\"column\"\n            justifyContent=\"flex-end\"\n            p={3}\n            bg=\"#E8E8E8\"\n            w=\"100%\"\n            h=\"100%\"\n            borderRadius=\"lg\"\n            overflowY=\"hidden\"\n          >\n            {loading ? (\n              <Spinner\n                size=\"xl\"\n                w={20}\n                h={20}\n                alignSelf=\"center\"\n                margin=\"auto\"\n              />\n            ) : (\n              <div className=\"messages\">\n                <ScrollableChat messages={messages} />\n              </div>\n            )}\n\n            <FormControl\n              onKeyDown={sendMessage}\n              id=\"first-name\"\n              isRequired\n              mt={3}\n            >\n              {istyping ? (\n                <div>\n                  <Lottie\n                    options={defaultOptions}\n                    // height={50}\n                    width={70}\n                    style={{ marginBottom: 15, marginLeft: 0 }}\n                  />\n                </div>\n              ) : (\n                <></>\n              )}\n              <Input\n                variant=\"filled\"\n                bg=\"#E0E0E0\"\n                placeholder=\"Enter a message..\"\n                value={newMessage}\n                onChange={typingHandler}\n              />\n            </FormControl>\n          </Box>\n        </>\n      ) : (\n        // to get socket.io on same page\n        <Box d=\"flex\" alignItems=\"center\" justifyContent=\"center\" h=\"100%\">\n          <Text fontSize=\"3xl\" pb={3} fontFamily=\"Work sans\">\n            Click on a user to start chatting\n          </Text>\n        </Box>\n      )}\n    </>\n  );\n};\n\nexport default SingleChat;\n","export const isSameSenderMargin = (messages, m, i, userId) => {\n  // console.log(i === messages.length - 1);\n\n  if (\n    i < messages.length - 1 &&\n    messages[i + 1].sender._id === m.sender._id &&\n    messages[i].sender._id !== userId\n  )\n    return 33;\n  else if (\n    (i < messages.length - 1 &&\n      messages[i + 1].sender._id !== m.sender._id &&\n      messages[i].sender._id !== userId) ||\n    (i === messages.length - 1 && messages[i].sender._id !== userId)\n  )\n    return 0;\n  else return \"auto\";\n};\n\nexport const isSameSender = (messages, m, i, userId) => {\n  return (\n    i < messages.length - 1 &&\n    (messages[i + 1].sender._id !== m.sender._id ||\n      messages[i + 1].sender._id === undefined) &&\n    messages[i].sender._id !== userId\n  );\n};\n\nexport const isLastMessage = (messages, i, userId) => {\n  return (\n    i === messages.length - 1 &&\n    messages[messages.length - 1].sender._id !== userId &&\n    messages[messages.length - 1].sender._id\n  );\n};\n\nexport const isSameUser = (messages, m, i) => {\n  return i > 0 && messages[i - 1].sender._id === m.sender._id;\n};\n\nexport const getSender = (loggedUser, users) => {\n  return users[0]._id === loggedUser._id ? users[1].name : users[0].name;\n};\n\nexport const getSenderFull = (loggedUser, users) => {\n  return users[0]._id === loggedUser._id ? users[1] : users[0];\n};\n","import { ViewIcon } from \"@chakra-ui/icons\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Button,\n  useDisclosure,\n  IconButton,\n  Text,\n  Image,\n} from \"@chakra-ui/react\";\n\nconst ProfileModal = ({ user, children }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  return (\n    <>\n      {children ? (\n        <span onClick={onOpen}>{children}</span>\n      ) : (\n        <IconButton d={{ base: \"flex\" }} icon={<ViewIcon />} onClick={onOpen} />\n      )}\n      <Modal size=\"lg\" onClose={onClose} isOpen={isOpen} isCentered>\n        <ModalOverlay />\n        <ModalContent h=\"410px\">\n          <ModalHeader\n            fontSize=\"40px\"\n            fontFamily=\"Work sans\"\n            d=\"flex\"\n            justifyContent=\"center\"\n          >\n            {user.name}\n          </ModalHeader>\n          <ModalCloseButton />\n          <ModalBody\n            d=\"flex\"\n            flexDir=\"column\"\n            alignItems=\"center\"\n            justifyContent=\"space-between\"\n          >\n            <Image\n              borderRadius=\"full\"\n              boxSize=\"150px\"\n              src={user.pic}\n              alt={user.name}\n            />\n            <Text\n              fontSize={{ base: \"28px\", md: \"30px\" }}\n              fontFamily=\"Work sans\"\n            >\n              Email: {user.email}\n            </Text>\n          </ModalBody>\n          <ModalFooter>\n            <Button onClick={onClose}>Close</Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default ProfileModal;\n","import { Avatar } from \"@chakra-ui/avatar\";\nimport { Tooltip } from \"@chakra-ui/tooltip\";\nimport ScrollableFeed from \"react-scrollable-feed\";\nimport {\n  isLastMessage,\n  isSameSender,\n  isSameSenderMargin,\n  isSameUser,\n} from \"../config/ChatLogics\";\nimport { ChatState } from \"../Context/ChatProvider\";\n\nconst ScrollableChat = ({ messages }) => {\n  const { user } = ChatState();\n\n  return (\n    <ScrollableFeed>\n      {messages &&\n        messages.map((m, i) => (\n          <div style={{ display: \"flex\" }} key={m._id}>\n            {(isSameSender(messages, m, i, user._id) ||\n              isLastMessage(messages, i, user._id)) && (\n              <Tooltip label={m.sender.name} placement=\"bottom-start\" hasArrow>\n                <Avatar\n                  mt=\"7px\"\n                  mr={1}\n                  size=\"sm\"\n                  cursor=\"pointer\"\n                  name={m.sender.name}\n                  src={m.sender.pic}\n                />\n              </Tooltip>\n            )}\n            <span\n              style={{\n                backgroundColor: `${\n                  m.sender._id === user._id ? \"#BEE3F8\" : \"#B9F5D0\"\n                }`,\n                marginLeft: isSameSenderMargin(messages, m, i, user._id),\n                marginTop: isSameUser(messages, m, i, user._id) ? 3 : 10,\n                borderRadius: \"20px\",\n                padding: \"5px 15px\",\n                maxWidth: \"75%\",\n              }}\n            >\n              {m.content}\n            </span>\n          </div>\n        ))}\n    </ScrollableFeed>\n  );\n};\n\nexport default ScrollableChat;\n","import { CloseIcon } from \"@chakra-ui/icons\";\nimport { Badge } from \"@chakra-ui/layout\";\n\nconst UserBadgeItem = ({ user, handleFunction, admin }) => {\n  return (\n    <Badge\n      px={2}\n      py={1}\n      borderRadius=\"lg\"\n      m={1}\n      mb={2}\n      variant=\"solid\"\n      fontSize={12}\n      colorScheme=\"purple\"\n      cursor=\"pointer\"\n      onClick={handleFunction}\n    >\n      {user.name}\n      {admin === user._id && <span> (Admin)</span>}\n      <CloseIcon pl={1} />\n    </Badge>\n  );\n};\n\nexport default UserBadgeItem;\n","import { Avatar } from \"@chakra-ui/avatar\";\nimport { Box, Text } from \"@chakra-ui/layout\";\nimport { ChatState } from \"../../Context/ChatProvider\";\n\nconst UserListItem = ({ user, handleFunction }) => {\n  // const { user } = ChatState();\n\n  return (\n    <Box\n      onClick={handleFunction}\n      cursor=\"pointer\"\n      bg=\"#E8E8E8\"\n      _hover={{\n        background: \"#38B2AC\",\n        color: \"white\",\n      }}\n      w=\"100%\"\n      d=\"flex\"\n      alignItems=\"center\"\n      color=\"black\"\n      px={3}\n      py={2}\n      // mb={2}\n      borderRadius=\"lg\"\n    >\n      <Avatar\n        mr={2}\n        size=\"sm\"\n        cursor=\"pointer\"\n        name={user.name}\n        src={user.pic}\n      />\n      <Box>\n        <Text>{user.name}</Text>\n        <Text fontSize=\"xs\">\n          <b>Email : </b>\n          {user.email}\n        </Text>\n      </Box>\n    </Box>\n  );\n};\n\nexport default UserListItem;\n","import { Avatar } from \"@chakra-ui/avatar\";\nimport { Box, Text } from \"@chakra-ui/layout\";\nimport { ChatState } from \"../../Context/ChatProvider\";\nimport { useState } from \"react\";\nimport { SmallAddIcon, SmallCloseIcon } from \"@chakra-ui/icons\";\nimport { Badge, Button } from \"@chakra-ui/react\";\nconst ExistGroupUserListItem = ({\n  admin,\n  useringroup,\n  handleRemoveFunction,\n  handleAddToGroupAdminFunction,\n  handleRemoveToGroupAdminFunction,\n}) => {\n  const { user, setSelectedChat } = ChatState();\n  const [isOpen, setIsOpen] = useState(false);\n\n  return (\n    <Box\n      cursor=\"pointer\"\n      bg=\"#E8E8E8\"\n      _hover={{\n        background: \"#38B2AC\",\n        color: \"white\",\n      }}\n      w=\"100%\"\n      d=\"flex\"\n      alignItems=\"center\"\n      color=\"black\"\n      px={3}\n      py={2}\n      mb={2}\n      borderRadius=\"lg\"\n      justifyContent=\"space-between\"\n      pos=\"relative\"\n    >\n      <Box ml={2} d=\"flex\" alignItems=\"center\" w=\"100%\">\n        <Avatar\n          mr={2}\n          size=\"sm\"\n          cursor=\"pointer\"\n          name={useringroup.name}\n          src={useringroup.pic}\n        />\n        <Box\n          w=\"100%\"\n          d=\"flex\"\n          alignItems=\"center\"\n          justifyContent=\"space-between\"\n        >\n          <Box>\n            <Text>{useringroup.name}</Text>\n            <Text fontSize=\"xs\">\n              <b>Email : </b>\n              {useringroup.email}\n            </Text>\n          </Box>\n          {admin.some((admin) => admin._id === useringroup._id) && (\n            <Badge\n              ml=\"3\"\n              colorScheme=\"green\"\n              mr={3}\n              px={2}\n              py={1}\n              borderRadius=\"lg\"\n            >\n              Chat Admin\n            </Badge>\n          )}\n        </Box>\n        {admin.some((admin) => admin._id === user._id) && (\n          <>\n            <Box onClick={() => setIsOpen(!isOpen)}>\n              {!isOpen ? <SmallAddIcon /> : <SmallCloseIcon />}\n            </Box>\n            {isOpen && (\n              <Box\n                pos=\"absolute\"\n                right=\"7\"\n                top=\"10\"\n                bg=\"#fff\"\n                color=\"#000\"\n                d=\"flex\"\n                flexDirection=\"column\"\n                zIndex=\"100\"\n                borderRadius=\"md\"\n              >\n                <Box\n                  variant=\"link\"\n                  py={1}\n                  px={2}\n                  // onClick={() => setSelectedChat(useringroup)}\n                >\n                  Message {useringroup.name}\n                </Box>\n                {!admin.some((admin) => admin._id === useringroup._id) ? (\n                  <Box\n                    variant=\"link\"\n                    py={1}\n                    px={2}\n                    onClick={() => {\n                      handleAddToGroupAdminFunction();\n                      setIsOpen(!isOpen);\n                    }}\n                  >\n                    Make group admin\n                  </Box>\n                ) : (\n                  <Box\n                    variant=\"link\"\n                    py={1}\n                    px={2}\n                    onClick={() => {\n                      handleRemoveToGroupAdminFunction();\n                      setIsOpen(!isOpen);\n                    }}\n                  >\n                    Dismiss as admin\n                  </Box>\n                )}\n\n                <Box\n                  py={1}\n                  px={2}\n                  variant=\"link\"\n                  onClick={() => {\n                    handleRemoveFunction();\n                    setIsOpen(!isOpen);\n                  }}\n                >\n                  Remove {useringroup.name}\n                </Box>\n              </Box>\n            )}\n          </>\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nexport default ExistGroupUserListItem;\n","import { ViewIcon, CloseIcon, SmallAddIcon, EditIcon } from \"@chakra-ui/icons\";\nimport {\n  Button,\n  useDisclosure,\n  FormControl,\n  Input,\n  useToast,\n  Box,\n  IconButton,\n  Text,\n  Spinner,\n  Image,\n  Drawer,\n  DrawerBody,\n  DrawerFooter,\n  DrawerHeader,\n  DrawerOverlay,\n  DrawerContent,\n  DrawerCloseButton,\n  Stack,\n} from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { ChatState } from \"../../Context/ChatProvider\";\nimport UserBadgeItem from \"../userAvatar/UserBadgeItem\";\nimport UserListItem from \"../userAvatar/UserListItem\";\nimport ExistGroupUserListItem from \"../userAvatar/existGroupUserListItem\";\nimport React from \"react\";\n\nconst UpdateGroupChatModal = ({ fetchMessages, fetchAgain, setFetchAgain }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const btnRef = React.useRef();\n\n  const [groupChatName, setGroupChatName] = useState();\n  const [search, setSearch] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [renameloading, setRenameLoading] = useState(false);\n  const toast = useToast();\n\n  const { selectedChat, setSelectedChat, user } = ChatState();\n\n  const [pic, setPic] = useState();\n  const [picLoading, setPicLoading] = useState(false);\n\n  const handleSearch = async (query) => {\n    setSearch(query);\n    if (!query) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\n      console.log(data);\n      setLoading(false);\n      setSearchResult(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Search Results\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n      setLoading(false);\n    }\n  };\n\n  const handleRename = async () => {\n    if (!groupChatName) return;\n\n    try {\n      setRenameLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.put(\n        `/api/chat/rename`,\n        {\n          chatId: selectedChat._id,\n          chatName: groupChatName,\n        },\n        config\n      );\n\n      console.log(data._id);\n      // setSelectedChat(\"\");\n      setSelectedChat(data);\n      setFetchAgain(!fetchAgain);\n      setRenameLoading(false);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setRenameLoading(false);\n    }\n    setGroupChatName(\"\");\n  };\n\n  const handleAddUser = async (user1) => {\n    if (selectedChat.users.find((u) => u._id === user1._id)) {\n      toast({\n        title: \"User Already in group!\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n    if (!selectedChat.groupAdmin.some((admin) => admin._id === user._id)) {\n      toast({\n        title: \"Only admins can add someone!\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.put(\n        `/api/chat/groupadd`,\n        {\n          chatId: selectedChat._id,\n          userId: user1._id,\n        },\n        config\n      );\n\n      setSelectedChat(data);\n      setFetchAgain(!fetchAgain);\n      setLoading(false);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n    }\n    setGroupChatName(\"\");\n  };\n\n  const handleRemove = async (user1) => {\n    if (selectedChat.groupOwner._id === user1._id) {\n      if (selectedChat.groupOwner._id === user._id) {\n        toast({\n          title: \"You cannot remove youself until transfer group ownership!\",\n          status: \"error\",\n          duration: 5000,\n          isClosable: true,\n          position: \"bottom\",\n        });\n        return;\n      } else {\n        toast({\n          title: \"You cant remove Group Owner!\",\n          status: \"error\",\n          duration: 5000,\n          isClosable: true,\n          position: \"bottom\",\n        });\n        return;\n      }\n    }\n\n    if (\n      !selectedChat.groupAdmin.some((admin) => admin._id === user._id) &&\n      !selectedChat.groupAdmin.some((admin) => admin._id === user1._id)\n    ) {\n      toast({\n        title: \"Only admins can remove someone!\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.put(\n        `/api/chat/groupremove`,\n        {\n          chatId: selectedChat._id,\n          userId: user1._id,\n        },\n        config\n      );\n\n      // // user1._id === user._id ? setSelectedChat() : setSelectedChat(data);\n      console.log(data);\n      setSelectedChat(data);\n      setFetchAgain(!fetchAgain);\n      fetchMessages();\n      setLoading(false);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n    }\n    setGroupChatName(\"\");\n  };\n\n  const AddToGroupAdmin = async (user1) => {\n    if (selectedChat.groupAdmin.some((admin) => admin._id === user1._id)) {\n      toast({\n        title: \"User is already an admin!\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n    if (!selectedChat.groupAdmin.some((admin) => admin._id === user._id)) {\n      toast({\n        title: \"Only Group Owner can add Admin!\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.put(\n        `/api/chat/groupaddadmin`,\n        {\n          chatId: selectedChat._id,\n          userId: user1._id,\n        },\n        config\n      );\n\n      setSelectedChat(data);\n      setFetchAgain(!fetchAgain);\n      setLoading(false);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n    }\n  };\n\n  const RemoveToGroupAdmin = async (user1) => {\n    if (selectedChat.groupOwner._id === user1._id) {\n      toast({\n        title: \"You cannot remove Group Owner!\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n\n    if (\n      !selectedChat.groupAdmin.some((admin) => admin._id === user._id) &&\n      !selectedChat.groupAdmin.some((admin) => admin._id === user1._id)\n    ) {\n      toast({\n        title: \"Only admins can remove someone!\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.put(\n        `/api/chat/groupremoveadmin`,\n        {\n          chatId: selectedChat._id,\n          userId: user1._id,\n        },\n        config\n      );\n\n      setSelectedChat(data);\n      setFetchAgain(!fetchAgain);\n      setLoading(false);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n    }\n  };\n  const postDetails = (pics) => {\n    setPicLoading(true);\n    if (pics === undefined) {\n      toast({\n        title: \"Please Select an Image!\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n\n    if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\n      const data = new FormData();\n      data.append(\"file\", pics);\n      data.append(\"upload_preset\", \"chat-app\");\n      data.append(\"cloud_name\", \"djn1nfuky\");\n      fetch(\"https://api.cloudinary.com/v1_1/djn1nfuky/image/upload\", {\n        method: \"post\",\n        body: data,\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          setPic(data.url.toString());\n          console.log(data.url.toString());\n          setPicLoading(false);\n        })\n        .catch((err) => {\n          console.log(err);\n          setPicLoading(false);\n        });\n    } else {\n      toast({\n        title: \"Please Select an Image!\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setPicLoading(false);\n      return;\n    }\n  };\n\n  return (\n    <>\n      <IconButton d={{ base: \"flex\" }} icon={<ViewIcon />} onClick={onOpen} />\n\n      <Drawer\n        isOpen={isOpen}\n        placement=\"right\"\n        onClose={onClose}\n        finalFocusRef={btnRef}\n        size=\"sm\"\n      >\n        <DrawerOverlay />\n        <DrawerContent>\n          <DrawerCloseButton />\n          <Box\n            d=\"flex\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n            w=\"100%\"\n            pt={10}\n          >\n            <Image\n              borderRadius=\"full\"\n              boxSize=\"110px\"\n              src={selectedChat.pic}\n              alt={selectedChat.chatname}\n            />\n          </Box>\n          <Box\n            d=\"flex\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n            w=\"100%\"\n            pl={20}\n            my={-3}\n          >\n            <label htmlFor=\"upload-input\">\n              <EditIcon color=\"#bdbdbd\" />\n            </label>\n            <Input\n              type=\"file\"\n              display=\"none\"\n              onChange={(e) => postDetails(e.target.files[0])}\n              id=\"upload-input\"\n            />\n          </Box>\n          <DrawerHeader\n            fontSize=\"35px\"\n            fontFamily=\"Work sans\"\n            d=\"flex\"\n            justifyContent=\"center\"\n          >\n            {selectedChat.chatName}\n          </DrawerHeader>\n\n          <DrawerBody d=\"flex\" flexDir=\"column\" alignItems=\"center\">\n            <Text fontStyle=\"italic\" w=\"100%\" pl={3} pb={2} color=\"#7e7e7e\">\n              Created by{\" \"}\n              {selectedChat.groupOwner._id === user._id\n                ? \"You\"\n                : selectedChat.groupOwner.name}\n              , {selectedChat.createdAt.slice(0, 10)}\n            </Text>\n            <FormControl d=\"flex\">\n              <Input\n                placeholder=\"Chat Name\"\n                mb={3}\n                value={groupChatName}\n                onChange={(e) => setGroupChatName(e.target.value)}\n              />\n              <Button\n                variant=\"solid\"\n                colorScheme=\"teal\"\n                ml={1}\n                isLoading={renameloading}\n                onClick={handleRename}\n              >\n                Update\n              </Button>\n            </FormControl>\n            <FormControl>\n              <Input\n                placeholder=\"Add User to group\"\n                mb={1}\n                onChange={(e) => handleSearch(e.target.value)}\n              />\n            </FormControl>\n            {searchResult.length > 0 && (\n              <Box d=\"flex\" w=\"100%\" px={3} py={3}>\n                <CloseIcon boxSize={2} onClick={() => setSearchResult([])} />\n              </Box>\n            )}\n            {loading ? (\n              <Spinner size=\"lg\" />\n            ) : (\n              <>\n                <Stack\n                  overflowY=\"scroll\"\n                  w=\"100%\"\n                  h={searchResult.length > 3 && \"197px\"}\n                >\n                  {searchResult?.map((searchUser) => (\n                    <UserListItem\n                      key={searchUser._id}\n                      user={searchUser}\n                      handleFunction={() => handleAddUser(searchUser)}\n                    />\n                  ))}\n                </Stack>\n              </>\n            )}\n            <Text\n              w=\"100%\"\n              textAlign=\"start\"\n              pl={3}\n              color=\"#7e7e7e\"\n              fontStyle=\"italic\"\n              my={2}\n            >\n              {selectedChat && selectedChat.users.length} participant\n              {selectedChat.length !== 1 ? \"s\" : \"\"}\n            </Text>\n\n            {selectedChat.users\n              .filter(\n                (u) =>\n                  !selectedChat.groupAdmin.some((admin) => admin._id === u._id)\n              )\n              .concat(\n                selectedChat.users.filter((u) =>\n                  selectedChat.groupAdmin.some((admin) => admin._id === u._id)\n                )\n              )\n              .reverse()\n              .map((u) => (\n                <ExistGroupUserListItem\n                  key={u._id}\n                  useringroup={u}\n                  admin={selectedChat.groupAdmin}\n                  handleRemoveFunction={() => handleRemove(u)}\n                  handleAddToGroupAdminFunction={() => AddToGroupAdmin(u)}\n                  handleRemoveToGroupAdminFunction={() => RemoveToGroupAdmin(u)}\n                />\n              ))}\n          </DrawerBody>\n          <DrawerFooter>\n            <Button onClick={() => handleRemove(user)} colorScheme=\"red\">\n              Leave Group\n            </Button>\n          </DrawerFooter>\n        </DrawerContent>\n      </Drawer>\n    </>\n  );\n};\n\nexport default UpdateGroupChatModal;\n","import { Box } from \"@chakra-ui/layout\";\nimport \"./styles.css\";\nimport SingleChat from \"./SingleChat\";\nimport { ChatState } from \"../Context/ChatProvider\";\n\nconst Chatbox = ({ fetchAgain, setFetchAgain }) => {\n  const { selectedChat } = ChatState();\n\n  return (\n    <Box\n      d={{ base: selectedChat ? \"flex\" : \"none\", md: \"flex\" }}\n      alignItems=\"center\"\n      flexDir=\"column\"\n      p={3}\n      bg=\"white\"\n      w={{ base: \"100%\", md: \"68%\" }}\n      borderRadius=\"lg\"\n      borderWidth=\"1px\"\n    >\n      <SingleChat fetchAgain={fetchAgain} setFetchAgain={setFetchAgain} />\n    </Box>\n  );\n};\n\nexport default Chatbox;\n","import { Stack } from \"@chakra-ui/layout\";\nimport { Skeleton } from \"@chakra-ui/skeleton\";\n\nconst ChatLoading = () => {\n  return (\n    <Stack>\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n    </Stack>\n  );\n};\n\nexport default ChatLoading;\n","import {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Button,\n  useDisclosure,\n  FormControl,\n  Input,\n  useToast,\n  Box,\n} from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { ChatState } from \"../../Context/ChatProvider\";\nimport UserBadgeItem from \"../userAvatar/UserBadgeItem\";\nimport UserListItem from \"../userAvatar/UserListItem\";\n\nconst GroupChatModal = ({ children }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [groupChatName, setGroupChatName] = useState();\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const toast = useToast();\n\n  const { user, chats, setChats } = ChatState();\n\n  const handleGroup = (userToAdd) => {\n    if (selectedUsers.includes(userToAdd)) {\n      toast({\n        title: \"User already added\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top\",\n      });\n      return;\n    }\n\n    setSelectedUsers([...selectedUsers, userToAdd]);\n  };\n\n  const handleSearch = async (query) => {\n    setSearch(query);\n    if (!query) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\n      console.log(data);\n      setLoading(false);\n      setSearchResult(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Search Results\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  const handleDelete = (delUser) => {\n    setSelectedUsers(selectedUsers.filter((sel) => sel._id !== delUser._id));\n  };\n\n  const handleSubmit = async () => {\n    if (!groupChatName || !selectedUsers) {\n      toast({\n        title: \"Please fill all the feilds\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top\",\n      });\n      return;\n    }\n\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.post(\n        `/api/chat/group`,\n        {\n          name: groupChatName,\n          users: JSON.stringify(selectedUsers.map((u) => u._id)),\n        },\n        config\n      );\n      setChats([data, ...chats]);\n      onClose();\n      toast({\n        title: \"New Group Chat Created!\",\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n    } catch (error) {\n      toast({\n        title: \"Failed to Create the Chat!\",\n        description: error.response.data,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n    }\n  };\n\n  return (\n    <>\n      <span onClick={onOpen}>{children}</span>\n\n      <Modal onClose={onClose} isOpen={isOpen} isCentered>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader\n            fontSize=\"35px\"\n            fontFamily=\"Work sans\"\n            d=\"flex\"\n            justifyContent=\"center\"\n          >\n            Create Group Chat\n          </ModalHeader>\n          <ModalCloseButton />\n          <ModalBody d=\"flex\" flexDir=\"column\" alignItems=\"center\">\n            <FormControl>\n              <Input\n                placeholder=\"Chat Name\"\n                mb={3}\n                onChange={(e) => setGroupChatName(e.target.value)}\n              />\n            </FormControl>\n            <FormControl>\n              <Input\n                placeholder=\"Add Users eg: John, Piyush, Jane\"\n                mb={1}\n                onChange={(e) => handleSearch(e.target.value)}\n              />\n            </FormControl>\n            <Box w=\"100%\" d=\"flex\" flexWrap=\"wrap\">\n              {selectedUsers.map((u) => (\n                <UserBadgeItem\n                  key={u._id}\n                  user={u}\n                  handleFunction={() => handleDelete(u)}\n                />\n              ))}\n            </Box>\n            {loading ? (\n              // <ChatLoading />\n              <div>Loading...</div>\n            ) : (\n              searchResult\n                ?.slice(0, 4)\n                .map((user) => (\n                  <UserListItem\n                    key={user._id}\n                    user={user}\n                    handleFunction={() => handleGroup(user)}\n                  />\n                ))\n            )}\n          </ModalBody>\n          <ModalFooter>\n            <Button onClick={handleSubmit} colorScheme=\"blue\">\n              Create Chat\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default GroupChatModal;\n","import { AddIcon } from \"@chakra-ui/icons\";\nimport { Box, Stack, Text } from \"@chakra-ui/layout\";\nimport { useToast } from \"@chakra-ui/toast\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { getSender } from \"../config/ChatLogics\";\nimport ChatLoading from \"./ChatLoading\";\nimport GroupChatModal from \"./miscellaneous/GroupChatModal\";\nimport { Button } from \"@chakra-ui/react\";\nimport { ChatState } from \"../Context/ChatProvider\";\n\nconst MyChats = ({ fetchAgain }) => {\n  const [loggedUser, setLoggedUser] = useState();\n\n  const { selectedChat, setSelectedChat, user, chats, setChats } = ChatState();\n\n  const toast = useToast();\n\n  const fetchChats = async () => {\n    // console.log(user._id);\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      const { data } = await axios.get(\"/api/chat\", config);\n      // console.log(data);\n      setChats(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the chats\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    setLoggedUser(JSON.parse(localStorage.getItem(\"userInfo\")));\n    fetchChats();\n    // eslint-disable-next-line\n  }, [fetchAgain]);\n\n  return (\n    <Box\n      d={{ base: selectedChat ? \"none\" : \"flex\", md: \"flex\" }}\n      flexDir=\"column\"\n      alignItems=\"center\"\n      p={3}\n      bg=\"white\"\n      w={{ base: \"100%\", md: \"31%\" }}\n      borderRadius=\"lg\"\n      borderWidth=\"1px\"\n    >\n      <Box\n        pb={3}\n        px={3}\n        fontSize={{ base: \"28px\", md: \"30px\" }}\n        fontFamily=\"Work sans\"\n        d=\"flex\"\n        w=\"100%\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n      >\n        My Chats\n        <GroupChatModal>\n          <Button\n            d=\"flex\"\n            fontSize={{ base: \"17px\", md: \"10px\", lg: \"17px\" }}\n            rightIcon={<AddIcon />}\n          >\n            New Group Chat\n          </Button>\n        </GroupChatModal>\n      </Box>\n      <Box\n        d=\"flex\"\n        flexDir=\"column\"\n        p={3}\n        bg=\"#F8F8F8\"\n        w=\"100%\"\n        h=\"100%\"\n        borderRadius=\"lg\"\n        overflowY=\"hidden\"\n      >\n        {chats ? (\n          <Stack overflowY=\"scroll\">\n            {chats.map((chat) => (\n              <Box\n                onClick={() => setSelectedChat(chat)}\n                cursor=\"pointer\"\n                bg={selectedChat === chat ? \"#38B2AC\" : \"#E8E8E8\"}\n                color={selectedChat === chat ? \"white\" : \"black\"}\n                px={3}\n                py={2}\n                borderRadius=\"lg\"\n                key={chat._id}\n              >\n                <Text>\n                  {!chat.isGroupChat\n                    ? getSender(loggedUser, chat.users)\n                    : chat.chatName}\n                </Text>\n                {chat.latestMessage && (\n                  <Text fontSize=\"xs\">\n                    <b>{chat.latestMessage.sender.name} : </b>\n                    {chat.latestMessage.content.length > 50\n                      ? chat.latestMessage.content.substring(0, 51) + \"...\"\n                      : chat.latestMessage.content}\n                  </Text>\n                )}\n              </Box>\n            ))}\n          </Stack>\n        ) : (\n          <ChatLoading />\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nexport default MyChats;\n","import { Button } from \"@chakra-ui/button\";\nimport { useDisclosure } from \"@chakra-ui/hooks\";\nimport { Input } from \"@chakra-ui/input\";\nimport { Box, Text } from \"@chakra-ui/layout\";\nimport {\n  Menu,\n  MenuButton,\n  MenuDivider,\n  MenuItem,\n  MenuList,\n} from \"@chakra-ui/menu\";\nimport {\n  Drawer,\n  DrawerBody,\n  DrawerContent,\n  DrawerHeader,\n  DrawerOverlay,\n} from \"@chakra-ui/modal\";\nimport { Tooltip } from \"@chakra-ui/tooltip\";\nimport { BellIcon, ChevronDownIcon } from \"@chakra-ui/icons\";\nimport { Avatar } from \"@chakra-ui/avatar\";\nimport { useHistory } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { useToast } from \"@chakra-ui/toast\";\nimport ChatLoading from \"../ChatLoading\";\nimport { Spinner } from \"@chakra-ui/spinner\";\nimport ProfileModal from \"./ProfileModal\";\nimport NotificationBadge from \"react-notification-badge\";\nimport { Effect } from \"react-notification-badge\";\nimport { getSender } from \"../../config/ChatLogics\";\nimport UserListItem from \"../userAvatar/UserListItem\";\nimport { ChatState } from \"../../Context/ChatProvider\";\n\nfunction SideDrawer() {\n  const [search, setSearch] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [loadingChat, setLoadingChat] = useState(false);\n\n  const {\n    setSelectedChat,\n    user,\n    notification,\n    setNotification,\n    chats,\n    setChats,\n  } = ChatState();\n\n  const toast = useToast();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const history = useHistory();\n\n  const logoutHandler = () => {\n    localStorage.removeItem(\"userInfo\");\n    history.push(\"/\");\n  };\n\n  const handleSearch = async () => {\n    if (!search) {\n      toast({\n        title: \"Please Enter something in search\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top-left\",\n      });\n      return;\n    }\n\n    try {\n      setLoading(true);\n\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\n\n      setLoading(false);\n      setSearchResult(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Search Results\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  const accessChat = async (userId) => {\n    console.log(userId);\n\n    try {\n      setLoadingChat(true);\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.post(`/api/chat`, { userId }, config);\n\n      if (!chats.find((c) => c._id === data._id)) setChats([data, ...chats]);\n      setSelectedChat(data);\n      setLoadingChat(false);\n      onClose();\n    } catch (error) {\n      toast({\n        title: \"Error fetching the chat\",\n        description: error.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  return (\n    <>\n      <Box\n        d=\"flex\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        bg=\"white\"\n        w=\"100%\"\n        p=\"5px 10px 5px 10px\"\n        borderWidth=\"5px\"\n      >\n        <Tooltip label=\"Search Users to chat\" hasArrow placement=\"bottom-end\">\n          <Button variant=\"ghost\" onClick={onOpen}>\n            <i className=\"fas fa-search\"></i>\n            <Text d={{ base: \"none\", md: \"flex\" }} px={4}>\n              Search User\n            </Text>\n          </Button>\n        </Tooltip>\n        <Text fontSize=\"2xl\" fontFamily=\"Work sans\">\n          Flipho-Chat-Room\n        </Text>\n        <div>\n          <Menu>\n            <MenuButton p={1}>\n              <NotificationBadge\n                count={notification.length}\n                effect={Effect.SCALE}\n              />\n              <BellIcon fontSize=\"2xl\" m={1} />\n            </MenuButton>\n            <MenuList pl={2}>\n              {!notification.length && \"No New Messages\"}\n              {notification.map((notif) => (\n                <MenuItem\n                  key={notif._id}\n                  onClick={() => {\n                    setSelectedChat(notif.chat);\n                    setNotification(notification.filter((n) => n !== notif));\n                  }}\n                >\n                  {notif.chat.isGroupChat\n                    ? `New Message in ${notif.chat.chatName}`\n                    : `New Message from ${getSender(user, notif.chat.users)}`}\n                </MenuItem>\n              ))}\n            </MenuList>\n          </Menu>\n          <Menu>\n            <MenuButton as={Button} bg=\"white\" rightIcon={<ChevronDownIcon />}>\n              <Avatar\n                size=\"sm\"\n                cursor=\"pointer\"\n                name={user.name}\n                src={user.pic}\n              />\n            </MenuButton>\n            <MenuList>\n              <ProfileModal user={user}>\n                <MenuItem>My Profile</MenuItem>{\" \"}\n              </ProfileModal>\n              <MenuDivider />\n              <MenuItem onClick={logoutHandler}>Logout</MenuItem>\n            </MenuList>\n          </Menu>\n        </div>\n      </Box>\n\n      <Drawer placement=\"left\" onClose={onClose} isOpen={isOpen}>\n        <DrawerOverlay />\n        <DrawerContent>\n          <DrawerHeader borderBottomWidth=\"1px\">Search Users</DrawerHeader>\n          <DrawerBody>\n            <Box d=\"flex\" pb={2}>\n              <Input\n                placeholder=\"Search by name or email\"\n                mr={2}\n                value={search}\n                onChange={(e) => setSearch(e.target.value)}\n              />\n              <Button onClick={handleSearch}>Go</Button>\n            </Box>\n            {loading ? (\n              <ChatLoading />\n            ) : (\n              searchResult?.map((searuser) => (\n                <UserListItem\n                  key={searuser._id}\n                  user={searuser}\n                  handleFunction={() => accessChat(searuser._id)}\n                />\n              ))\n            )}\n            {loadingChat && <Spinner ml=\"auto\" d=\"flex\" />}\n          </DrawerBody>\n        </DrawerContent>\n      </Drawer>\n    </>\n  );\n}\n\nexport default SideDrawer;\n","import { Box } from \"@chakra-ui/layout\";\nimport { useState } from \"react\";\nimport Chatbox from \"../components/Chatbox\";\nimport MyChats from \"../components/MyChats\";\nimport SideDrawer from \"../components/miscellaneous/SideDrawer\";\nimport { ChatState } from \"../Context/ChatProvider\";\n\nconst Chatpage = () => {\n  const [fetchAgain, setFetchAgain] = useState(false);\n  const { user } = ChatState();\n\n  return (\n    <div style={{ width: \"100%\" }}>\n      {user && <SideDrawer />}\n      <Box d=\"flex\" justifyContent=\"space-between\" w=\"100%\" h=\"91.5vh\" p=\"10px\">\n        {user && <MyChats fetchAgain={fetchAgain} />}\n        {user && (\n          <Chatbox fetchAgain={fetchAgain} setFetchAgain={setFetchAgain} />\n        )}\n      </Box>\n    </div>\n  );\n};\n\nexport default Chatpage;\n","import \"./App.css\";\nimport Homepage from \"./Pages/Homepage\";\nimport { Route } from \"react-router-dom\";\nimport Chatpage from \"./Pages/Chatpage\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Route path=\"/\" component={Homepage} exact />\n      <Route path=\"/chats\" component={Chatpage} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport ChatProvider from \"./Context/ChatProvider\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <ChakraProvider>\n      <ChatProvider>\n        <App />\n      </ChatProvider>\n    </ChakraProvider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}