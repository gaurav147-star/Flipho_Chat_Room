{"version":3,"sources":["Context/ChatProvider.js","components/Authentication/Login.js","components/Authentication/Signup.js","Pages/Homepage.js","components/SingleChat.js","config/ChatLogics.js","components/miscellaneous/ProfileModal.js","components/ScrollableChat.js","components/userAvatar/UserBadgeItem.js","components/userAvatar/UserListItem.js","components/userAvatar/existGroupUserListItem.js","components/miscellaneous/UpdateGroupChatModal.js","components/Chatbox.js","components/ChatLoading.js","components/miscellaneous/GroupChatModal.js","components/MyChats.js","components/miscellaneous/SideDrawer.js","Pages/Chatpage.js","App.js","index.js"],"names":["ChatContext","createContext","ChatState","useContext","ChatProvider","_ref","children","_useState","useState","_useState2","_slicedToArray","selectedChat","setSelectedChat","_useState3","_useState4","user","setUser","_useState5","_useState6","notification","setNotification","_useState7","_useState8","chats","setChats","history","useHistory","useEffect","userInfo","JSON","parse","localStorage","getItem","push","_jsx","Provider","value","Login","show","setShow","toast","useToast","email","setEmail","password","setPassword","loading","setLoading","_ChatState","submitHandler","_asyncToGenerator","_regeneratorRuntime","mark","_callee","config","_yield$axios$post","data","wrap","_context","prev","next","title","status","duration","isClosable","position","abrupt","headers","axios","post","sent","setItem","stringify","t0","description","response","message","stop","apply","arguments","_jsxs","VStack","spacing","FormControl","id","isRequired","FormLabel","Input","type","placeholder","onChange","e","target","InputGroup","size","InputRightElement","width","Button","h","onClick","colorScheme","style","marginTop","isLoading","variant","Signup","handleClick","name","setName","confirmpassword","setConfirmpassword","_useState9","_useState10","_useState11","_useState12","pic","setPic","_useState13","_useState14","picLoading","setPicLoading","p","accept","pics","undefined","FormData","append","fetch","method","body","then","res","json","url","toString","catch","err","console","log","postDetails","files","Homepage","socket","selectedChatCompare","Container","maxW","centerContent","Box","d","justifyContent","bg","w","m","borderRadius","borderWidth","Text","fontSize","fontFamily","Tabs","isFitted","TabList","mb","Tab","TabPanels","TabPanel","isSameSenderMargin","messages","i","userId","length","sender","_id","isSameSender","isLastMessage","isSameUser","getSender","loggedUser","users","getSenderPic","ProfileModal","_useDisclosure","useDisclosure","isOpen","onOpen","onClose","_Fragment","IconButton","base","icon","ViewIcon","Modal","isCentered","ModalOverlay","ModalContent","ModalHeader","ModalCloseButton","ModalBody","flexDir","alignItems","Image","boxSize","src","alt","md","ModalFooter","ScrollableChat","ScrollableFeed","map","display","Tooltip","label","placement","hasArrow","Avatar","mt","mr","cursor","backgroundColor","concat","marginLeft","padding","maxWidth","content","UserBadgeItem","handleFunction","admin","Badge","px","py","CloseIcon","pl","UserListItem","_hover","background","color","ExistGroupUserListItem","useringroup","handleRemoveFunction","handleAddToGroupAdminFunction","handleRemoveToGroupAdminFunction","setIsOpen","pos","ml","some","SmallCloseIcon","SmallAddIcon","right","top","flexDirection","zIndex","UpdateGroupChatModal","fetchMessages","fetchAgain","setFetchAgain","btnRef","React","useRef","groupChatName","setGroupChatName","search","setSearch","searchResult","setSearchResult","renameloading","setRenameLoading","handleSearch","_ref2","query","_yield$axios$get","Authorization","token","get","_x","handleRename","_ref3","_callee2","_yield$axios$put","_context2","put","chatId","chatName","handleAddUser","_ref4","_callee3","user1","_yield$axios$put2","_context3","find","u","groupAdmin","_x2","handleRemove","_ref5","_callee4","_yield$axios$put3","_context4","groupOwner","_x3","AddToGroupAdmin","_ref6","_callee5","_yield$axios$put4","_context5","_x4","RemoveToGroupAdmin","_ref7","_callee6","_yield$axios$put5","_context6","_x5","Drawer","finalFocusRef","DrawerOverlay","DrawerContent","DrawerCloseButton","pt","chatname","my","htmlFor","EditIcon","DrawerHeader","DrawerBody","fontStyle","pb","createdAt","slice","Spinner","Stack","overflowY","searchUser","textAlign","filter","reverse","DrawerFooter","SingleChat","setMessages","newMessage","setNewMessage","socketConnected","setSocketConnected","typing","setTyping","istyping","setIsTyping","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","emit","sendMessage","event","key","_toConsumableArray","io","on","newMessageRecieved","chat","includes","capitalizeFirstLetter","str","charAt","toUpperCase","isGroupChat","as","alignSelf","margin","className","onKeyDown","Lottie","options","marginBottom","lastTypingTime","Date","getTime","setTimeout","Chatbox","ChatLoading","Skeleton","height","GroupChatModal","selectedUsers","setSelectedUsers","handleSubmit","flexWrap","delUser","sel","userToAdd","MyChats","setLoggedUser","fetchChats","lg","rightIcon","AddIcon","latestMessage","substring","SideDrawer","loadingChat","setLoadingChat","accessChat","c","Menu","MenuButton","NotificationBadge","count","effect","Effect","SCALE","BellIcon","MenuList","notif","MenuItem","n","ChevronDownIcon","MenuDivider","removeItem","borderBottomWidth","searuser","Chatpage","App","Route","path","component","exact","ReactDOM","render","BrowserRouter","ChakraProvider","document","getElementById"],"mappings":"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","file":"static/js/main.67587949.chunk.js","sourcesContent":["import React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst ChatContext = createContext();\n\nconst ChatProvider = ({ children }) => {\n  const [selectedChat, setSelectedChat] = useState();\n  const [user, setUser] = useState();\n  const [notification, setNotification] = useState([]);\n  const [chats, setChats] = useState();\n\n  const history = useHistory();\n\n  useEffect(() => {\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\n    setUser(userInfo);\n    // setUser(user);\n\n    if (!userInfo) history.push(\"/\");\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [history]);\n\n  return (\n    <ChatContext.Provider\n      value={{\n        selectedChat,\n        setSelectedChat,\n        user,\n        setUser,\n        notification,\n        setNotification,\n        chats,\n        setChats,\n      }}\n    >\n      {children}\n    </ChatContext.Provider>\n  );\n};\n\nexport const ChatState = () => {\n  return useContext(ChatContext);\n};\n\nexport default ChatProvider;\n","import { Button } from \"@chakra-ui/button\";\nimport { FormControl, FormLabel } from \"@chakra-ui/form-control\";\nimport { Input, InputGroup, InputRightElement } from \"@chakra-ui/input\";\nimport { VStack } from \"@chakra-ui/layout\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { useToast } from \"@chakra-ui/react\";\nimport { useHistory } from \"react-router-dom\";\nimport { ChatState } from \"../../Context/ChatProvider\";\n\nconst Login = () => {\n  const [show, setShow] = useState(false);\n  const handleClick = () => setShow(!show);\n  const toast = useToast();\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const [loading, setLoading] = useState(false);\n\n  const history = useHistory();\n  const { user, setUser } = ChatState();\n\n  const submitHandler = async () => {\n    setLoading(true);\n    if (!email || !password) {\n      toast({\n        title: \"Please Fill all the Feilds\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n      return;\n    }\n\n    try {\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n      };\n\n      const { data } = await axios.post(\n        \"/api/user/login\",\n        { email, password },\n        config\n      );\n\n      toast({\n        title: \"Login Successful\",\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\n      setUser(data);\n      setLoading(false);\n      history.push(\"/chats\");\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n    }\n  };\n\n  return (\n    <VStack spacing=\"10px\">\n      <FormControl id=\"email\" isRequired>\n        <FormLabel>Email Address</FormLabel>\n        <Input\n          value={email}\n          type=\"email\"\n          placeholder=\"Enter Your Email Address\"\n          onChange={(e) => setEmail(e.target.value)}\n        />\n      </FormControl>\n      <FormControl id=\"password\" isRequired>\n        <FormLabel>Password</FormLabel>\n        <InputGroup size=\"md\">\n          <Input\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            type={show ? \"text\" : \"password\"}\n            placeholder=\"Enter password\"\n          />\n          <InputRightElement width=\"4.5rem\">\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\n              {show ? \"Hide\" : \"Show\"}\n            </Button>\n          </InputRightElement>\n        </InputGroup>\n      </FormControl>\n      <Button\n        colorScheme=\"blue\"\n        width=\"100%\"\n        style={{ marginTop: 15 }}\n        onClick={submitHandler}\n        isLoading={loading}\n      >\n        Login\n      </Button>\n      <Button\n        variant=\"solid\"\n        colorScheme=\"red\"\n        width=\"100%\"\n        onClick={() => {\n          setEmail(\"guest@example.com\");\n          setPassword(\"123456\");\n        }}\n      >\n        Get Guest User Credentials\n      </Button>\n    </VStack>\n  );\n};\n\nexport default Login;\n","import { Button } from \"@chakra-ui/button\";\nimport { FormControl, FormLabel } from \"@chakra-ui/form-control\";\nimport { Input, InputGroup, InputRightElement } from \"@chakra-ui/input\";\nimport { VStack } from \"@chakra-ui/layout\";\nimport { useToast } from \"@chakra-ui/toast\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { ChatState } from \"../../Context/ChatProvider\";\n\nconst Signup = () => {\n  const [show, setShow] = useState(false);\n  const handleClick = () => setShow(!show);\n  const toast = useToast();\n  const history = useHistory();\n\n  const [name, setName] = useState();\n  const [email, setEmail] = useState();\n  const [confirmpassword, setConfirmpassword] = useState();\n  const [password, setPassword] = useState();\n  const [pic, setPic] = useState();\n  const [picLoading, setPicLoading] = useState(false);\n\n  const { user, setUser } = ChatState();\n\n  const submitHandler = async () => {\n    setPicLoading(true);\n    if (!name || !email || !password || !confirmpassword) {\n      toast({\n        title: \"Please Fill all the Feilds\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setPicLoading(false);\n      return;\n    }\n    if (password !== confirmpassword) {\n      toast({\n        title: \"Passwords Do Not Match\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n    try {\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n      };\n      const { data } = await axios.post(\n        \"/api/user\",\n        {\n          name,\n          email,\n          password,\n          pic,\n        },\n        config\n      );\n\n      toast({\n        title: \"Registration Successful\",\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setUser(data);\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\n      setPicLoading(false);\n      history.push(\"/chats\");\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setPicLoading(false);\n    }\n  };\n\n  const postDetails = (pics) => {\n    setPicLoading(true);\n    if (pics === undefined) {\n      toast({\n        title: \"Please Select an Image!\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n\n    if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\n      const data = new FormData();\n      data.append(\"file\", pics);\n      data.append(\"upload_preset\", \"chat-app\");\n      data.append(\"cloud_name\", \"djn1nfuky\");\n      fetch(\"https://api.cloudinary.com/v1_1/djn1nfuky/image/upload\", {\n        method: \"post\",\n        body: data,\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          setPic(data.url.toString());\n\n          setPicLoading(false);\n        })\n        .catch((err) => {\n          console.log(err);\n          setPicLoading(false);\n        });\n    } else {\n      toast({\n        title: \"Please Select an Image!\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setPicLoading(false);\n      return;\n    }\n  };\n\n  return (\n    <VStack spacing=\"5px\">\n      <FormControl id=\"first-name\" isRequired>\n        <FormLabel>Name</FormLabel>\n        <Input\n          placeholder=\"Enter Your Name\"\n          onChange={(e) => setName(e.target.value)}\n        />\n      </FormControl>\n      <FormControl id=\"email\" isRequired>\n        <FormLabel>Email Address</FormLabel>\n        <Input\n          type=\"email\"\n          placeholder=\"Enter Your Email Address\"\n          onChange={(e) => setEmail(e.target.value)}\n        />\n      </FormControl>\n      <FormControl id=\"password\" isRequired>\n        <FormLabel>Password</FormLabel>\n        <InputGroup size=\"md\">\n          <Input\n            type={show ? \"text\" : \"password\"}\n            placeholder=\"Enter Password\"\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          <InputRightElement width=\"4.5rem\">\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\n              {show ? \"Hide\" : \"Show\"}\n            </Button>\n          </InputRightElement>\n        </InputGroup>\n      </FormControl>\n      <FormControl id=\"password\" isRequired>\n        <FormLabel>Confirm Password</FormLabel>\n        <InputGroup size=\"md\">\n          <Input\n            type={show ? \"text\" : \"password\"}\n            placeholder=\"Confirm password\"\n            onChange={(e) => setConfirmpassword(e.target.value)}\n          />\n          <InputRightElement width=\"4.5rem\">\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\n              {show ? \"Hide\" : \"Show\"}\n            </Button>\n          </InputRightElement>\n        </InputGroup>\n      </FormControl>\n      <FormControl id=\"pic\">\n        <FormLabel>Upload your Picture</FormLabel>\n        <Input\n          type=\"file\"\n          p={1.5}\n          accept=\"image/*\"\n          onChange={(e) => postDetails(e.target.files[0])}\n        />\n      </FormControl>\n      <Button\n        colorScheme=\"blue\"\n        width=\"100%\"\n        style={{ marginTop: 15 }}\n        onClick={submitHandler}\n        isLoading={picLoading}\n      >\n        Sign Up\n      </Button>\n    </VStack>\n  );\n};\n\nexport default Signup;\n","import {\n  Box,\n  Container,\n  Tab,\n  TabList,\n  TabPanel,\n  TabPanels,\n  Tabs,\n  Text,\n} from \"@chakra-ui/react\";\nimport { useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport Login from \"../components/Authentication/Login\";\nimport Signup from \"../components/Authentication/Signup\";\n\nfunction Homepage() {\n  const history = useHistory();\n\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem(\"userInfo\"));\n\n    if (user) history.push(\"/chats\");\n  }, [history]);\n\n  return (\n    <Container maxW=\"xl\" centerContent>\n      <Box\n        d=\"flex\"\n        justifyContent=\"center\"\n        p={3}\n        bg=\"white\"\n        w=\"100%\"\n        m=\"40px 0 15px 0\"\n        borderRadius=\"lg\"\n        borderWidth=\"1px\"\n      >\n        <Text fontSize=\"4xl\" fontFamily=\"Work sans\">\n          Flipho-Chat-Room\n        </Text>\n      </Box>\n      <Box bg=\"white\" w=\"100%\" p={4} borderRadius=\"lg\" borderWidth=\"1px\">\n        <Tabs isFitted variant=\"soft-rounded\">\n          <TabList mb=\"1em\">\n            <Tab>Login</Tab>\n            <Tab>Sign Up</Tab>\n          </TabList>\n          <TabPanels>\n            <TabPanel>\n              <Login />\n            </TabPanel>\n            <TabPanel>\n              <Signup />\n            </TabPanel>\n          </TabPanels>\n        </Tabs>\n      </Box>\n    </Container>\n  );\n}\n\nexport default Homepage;\n","import { FormControl } from \"@chakra-ui/form-control\";\nimport { Input } from \"@chakra-ui/input\";\nimport { Box, Text } from \"@chakra-ui/layout\";\nimport \"./styles.css\";\nimport { IconButton, Spinner, useToast, Avatar } from \"@chakra-ui/react\";\nimport { getSender, getSenderPic, getSenderFull } from \"../config/ChatLogics\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { ArrowBackIcon } from \"@chakra-ui/icons\";\nimport ProfileModal from \"./miscellaneous/ProfileModal\";\nimport ScrollableChat from \"./ScrollableChat\";\nimport Lottie from \"react-lottie\";\nimport animationData from \"../animations/typing.json\";\n\nimport io from \"socket.io-client\";\nimport UpdateGroupChatModal from \"./miscellaneous/UpdateGroupChatModal\";\nimport { ChatState } from \"../Context/ChatProvider\";\nconst ENDPOINT = \"https://fliphochat.onrender.com/\";\n// const ENDPOINT = \"http://localhost:5000\";\nvar socket, selectedChatCompare;\n\nconst SingleChat = ({ fetchAgain, setFetchAgain }) => {\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [socketConnected, setSocketConnected] = useState(false);\n  const [typing, setTyping] = useState(false);\n  const [istyping, setIsTyping] = useState(false);\n  const toast = useToast();\n\n  const defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: animationData,\n    rendererSettings: {\n      preserveAspectRatio: \"xMidYMid slice\",\n    },\n  };\n  const { selectedChat, setSelectedChat, user, notification, setNotification } =\n    ChatState();\n\n  const fetchMessages = async () => {\n    if (!selectedChat) return;\n\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      setLoading(true);\n\n      const { data } = await axios.get(\n        `/api/message/${selectedChat._id}`,\n        config\n      );\n      setMessages(data);\n      setLoading(false);\n\n      socket.emit(\"join chat\", selectedChat._id);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Messages\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n    }\n  };\n\n  const sendMessage = async (event) => {\n    if (event.key === \"Enter\" && newMessage) {\n      socket.emit(\"stop typing\", selectedChat._id);\n      try {\n        const config = {\n          headers: {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${user.token}`,\n          },\n        };\n        setNewMessage(\"\");\n        const { data } = await axios.post(\n          \"/api/message\",\n          {\n            content: newMessage,\n            chatId: selectedChat,\n          },\n          config\n        );\n        socket.emit(\"new message\", data);\n        setMessages([...messages, data]);\n      } catch (error) {\n        toast({\n          title: \"Error Occured!\",\n          description: \"Failed to send the Message\",\n          status: \"error\",\n          duration: 5000,\n          isClosable: true,\n          position: \"bottom\",\n        });\n      }\n    }\n  };\n\n  useEffect(() => {\n    socket = io(ENDPOINT);\n    socket.emit(\"setup\", user);\n    socket.on(\"connected\", () => setSocketConnected(true));\n    socket.on(\"typing\", () => setIsTyping(true));\n    socket.on(\"stop typing\", () => setIsTyping(false));\n\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    fetchMessages();\n\n    selectedChatCompare = selectedChat;\n    // eslint-disable-next-line\n  }, [selectedChat]);\n\n  useEffect(() => {\n    socket.on(\"message recieved\", (newMessageRecieved) => {\n      if (\n        !selectedChatCompare || // if chat is not selected or doesn't match current chat\n        selectedChatCompare._id !== newMessageRecieved.chat._id\n      ) {\n        if (!notification.includes(newMessageRecieved)) {\n          setNotification([newMessageRecieved, ...notification]);\n          setFetchAgain(!fetchAgain);\n        }\n      } else {\n        setMessages([...messages, newMessageRecieved]);\n      }\n    });\n  });\n\n  const typingHandler = (e) => {\n    setNewMessage(e.target.value);\n\n    if (!socketConnected) return;\n\n    if (!typing) {\n      setTyping(true);\n      socket.emit(\"typing\", selectedChat._id);\n    }\n    let lastTypingTime = new Date().getTime();\n    var timerLength = 3000;\n    setTimeout(() => {\n      var timeNow = new Date().getTime();\n      var timeDiff = timeNow - lastTypingTime;\n      if (timeDiff >= timerLength && typing) {\n        socket.emit(\"stop typing\", selectedChat._id);\n        setTyping(false);\n      }\n    }, timerLength);\n  };\n\n  const capitalizeFirstLetter = (str) => {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  };\n\n  return (\n    <>\n      {selectedChat ? (\n        <>\n          <Box\n            fontSize={{ base: \"28px\", md: \"30px\" }}\n            pb={3}\n            px={2}\n            w=\"100%\"\n            fontFamily=\"Work sans\"\n            d=\"flex\"\n            flexDirection=\"row\"\n            justifyContent={{ base: \"space-between\" }}\n            alignItems=\"center\"\n          >\n            {messages &&\n              (!selectedChat.isGroupChat ? (\n                <>\n                  <Box d=\"flex\">\n                    <Avatar src={getSenderPic(user, selectedChat.users)} />\n                    <Text pl={2} as=\"b\" fontSize=\"2xl\">\n                      {getSender(user, selectedChat.users) &&\n                        capitalizeFirstLetter(\n                          getSender(user, selectedChat.users)\n                        )}\n                    </Text>\n                  </Box>\n                  <ProfileModal\n                    user={getSenderFull(user, selectedChat.users)}\n                  />\n                </>\n              ) : (\n                <>\n                  <Box d=\"flex\">\n                    <Avatar src={getSenderPic(user, selectedChat.users)} />\n                    <Text pl={2} fontSize=\"2xl\" as=\"b\">\n                      {selectedChat.chatName &&\n                        capitalizeFirstLetter(selectedChat.chatName)}\n                    </Text>\n                  </Box>\n                  <UpdateGroupChatModal\n                    fetchMessages={fetchMessages}\n                    fetchAgain={fetchAgain}\n                    setFetchAgain={setFetchAgain}\n                  />\n                </>\n              ))}\n          </Box>\n          <Box\n            d=\"flex\"\n            flexDir=\"column\"\n            justifyContent=\"flex-end\"\n            p={3}\n            bg=\"#E8E8E8\"\n            w=\"100%\"\n            h=\"100%\"\n            borderRadius=\"lg\"\n            overflowY=\"hidden\"\n          >\n            {loading ? (\n              <Spinner\n                size=\"xl\"\n                w={20}\n                h={20}\n                alignSelf=\"center\"\n                margin=\"auto\"\n              />\n            ) : (\n              <div className=\"messages\">\n                <ScrollableChat messages={messages} />\n              </div>\n            )}\n\n            <FormControl\n              onKeyDown={sendMessage}\n              id=\"first-name\"\n              isRequired\n              mt={3}\n            >\n              {istyping ? (\n                <div>\n                  <Lottie\n                    options={defaultOptions}\n                    // height={50}\n                    width={70}\n                    style={{ marginBottom: 15, marginLeft: 0 }}\n                  />\n                </div>\n              ) : (\n                <></>\n              )}\n              <Input\n                variant=\"filled\"\n                bg=\"#E0E0E0\"\n                placeholder=\"Enter a message..\"\n                value={newMessage}\n                onChange={typingHandler}\n              />\n            </FormControl>\n          </Box>\n        </>\n      ) : (\n        // to get socket.io on same page\n        <Box d=\"flex\" alignItems=\"center\" justifyContent=\"center\" h=\"100%\">\n          <Text fontSize=\"3xl\" pb={3} fontFamily=\"Work sans\">\n            Click on a user to start chatting\n          </Text>\n        </Box>\n      )}\n    </>\n  );\n};\n\nexport default SingleChat;\n","export const isSameSenderMargin = (messages, m, i, userId) => {\n  if (\n    i < messages.length - 1 &&\n    messages[i + 1].sender._id === m.sender._id &&\n    messages[i].sender._id !== userId\n  )\n    return 33;\n  else if (\n    (i < messages.length - 1 &&\n      messages[i + 1].sender._id !== m.sender._id &&\n      messages[i].sender._id !== userId) ||\n    (i === messages.length - 1 && messages[i].sender._id !== userId)\n  )\n    return 0;\n  else return \"auto\";\n};\n\nexport const isSameSender = (messages, m, i, userId) => {\n  return (\n    i < messages.length - 1 &&\n    (messages[i + 1].sender._id !== m.sender._id ||\n      messages[i + 1].sender._id === undefined) &&\n    messages[i].sender._id !== userId\n  );\n};\n\nexport const isLastMessage = (messages, i, userId) => {\n  return (\n    i === messages.length - 1 &&\n    messages[messages.length - 1].sender._id !== userId &&\n    messages[messages.length - 1].sender._id\n  );\n};\n\nexport const isSameUser = (messages, m, i) => {\n  return i > 0 && messages[i - 1].sender._id === m.sender._id;\n};\n\nexport const getSender = (loggedUser, users) => {\n  return users[0]._id === loggedUser._id ? users[1].name : users[0].name;\n};\nexport const getSenderPic = (loggedUser, users) => {\n  return users[0]._id === loggedUser._id ? users[1].pic : users[0].pic;\n};\n\nexport const getSenderFull = (loggedUser, users) => {\n  return users[0]._id === loggedUser._id ? users[1] : users[0];\n};\n","import { ViewIcon } from \"@chakra-ui/icons\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Button,\n  useDisclosure,\n  IconButton,\n  Text,\n  Image,\n} from \"@chakra-ui/react\";\n\nconst ProfileModal = ({ user, children }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  return (\n    <>\n      {children ? (\n        <span onClick={onOpen}>{children}</span>\n      ) : (\n        <IconButton d={{ base: \"flex\" }} icon={<ViewIcon />} onClick={onOpen} />\n      )}\n      <Modal size=\"lg\" onClose={onClose} isOpen={isOpen} isCentered>\n        <ModalOverlay />\n        <ModalContent h=\"410px\">\n          <ModalHeader\n            fontSize=\"40px\"\n            fontFamily=\"Work sans\"\n            d=\"flex\"\n            justifyContent=\"center\"\n          >\n            {user.name}\n          </ModalHeader>\n          <ModalCloseButton />\n          <ModalBody\n            d=\"flex\"\n            flexDir=\"column\"\n            alignItems=\"center\"\n            justifyContent=\"space-between\"\n          >\n            <Image\n              borderRadius=\"full\"\n              boxSize=\"150px\"\n              src={user.pic}\n              alt={user.name}\n            />\n            <Text\n              fontSize={{ base: \"28px\", md: \"30px\" }}\n              fontFamily=\"Work sans\"\n            >\n              Email: {user.email}\n            </Text>\n          </ModalBody>\n          <ModalFooter>\n            <Button onClick={onClose}>Close</Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default ProfileModal;\n","import { Avatar } from \"@chakra-ui/avatar\";\nimport { Tooltip } from \"@chakra-ui/tooltip\";\nimport ScrollableFeed from \"react-scrollable-feed\";\nimport {\n  isLastMessage,\n  isSameSender,\n  isSameSenderMargin,\n  isSameUser,\n} from \"../config/ChatLogics\";\nimport { ChatState } from \"../Context/ChatProvider\";\n\nconst ScrollableChat = ({ messages }) => {\n  const { user } = ChatState();\n\n  return (\n    <ScrollableFeed>\n      {messages &&\n        messages.map((m, i) => (\n          <div style={{ display: \"flex\" }} key={m._id}>\n            {(isSameSender(messages, m, i, user._id) ||\n              isLastMessage(messages, i, user._id)) && (\n              <Tooltip label={m.sender.name} placement=\"bottom-start\" hasArrow>\n                <Avatar\n                  mt=\"7px\"\n                  mr={1}\n                  size=\"sm\"\n                  cursor=\"pointer\"\n                  name={m.sender.name}\n                  src={m.sender.pic}\n                />\n              </Tooltip>\n            )}\n            <span\n              style={{\n                backgroundColor: `${\n                  m.sender._id === user._id ? \"#BEE3F8\" : \"#B9F5D0\"\n                }`,\n                marginLeft: isSameSenderMargin(messages, m, i, user._id),\n                marginTop: isSameUser(messages, m, i, user._id) ? 3 : 10,\n                borderRadius: \"20px\",\n                padding: \"5px 15px\",\n                maxWidth: \"75%\",\n              }}\n            >\n              {m.content}\n            </span>\n          </div>\n        ))}\n    </ScrollableFeed>\n  );\n};\n\nexport default ScrollableChat;\n","import { CloseIcon } from \"@chakra-ui/icons\";\nimport { Badge } from \"@chakra-ui/layout\";\n\nconst UserBadgeItem = ({ user, handleFunction, admin }) => {\n  return (\n    <Badge\n      px={2}\n      py={1}\n      borderRadius=\"lg\"\n      m={1}\n      mb={2}\n      variant=\"solid\"\n      fontSize={12}\n      colorScheme=\"purple\"\n      cursor=\"pointer\"\n      onClick={handleFunction}\n    >\n      {user.name}\n      {admin === user._id && <span> (Admin)</span>}\n      <CloseIcon pl={1} />\n    </Badge>\n  );\n};\n\nexport default UserBadgeItem;\n","import { Avatar } from \"@chakra-ui/avatar\";\nimport { Box, Text } from \"@chakra-ui/layout\";\nimport { ChatState } from \"../../Context/ChatProvider\";\n\nconst UserListItem = ({ user, handleFunction }) => {\n  // const { user } = ChatState();\n\n  return (\n    <Box\n      onClick={handleFunction}\n      cursor=\"pointer\"\n      bg=\"#E8E8E8\"\n      _hover={{\n        background: \"#38B2AC\",\n        color: \"white\",\n      }}\n      w=\"100%\"\n      d=\"flex\"\n      alignItems=\"center\"\n      color=\"black\"\n      px={3}\n      py={2}\n      // mb={2}\n      borderRadius=\"lg\"\n    >\n      <Avatar\n        mr={2}\n        size=\"sm\"\n        cursor=\"pointer\"\n        name={user.name}\n        src={user.pic}\n      />\n      <Box>\n        <Text>{user.name}</Text>\n        <Text fontSize=\"xs\">\n          <b>Email : </b>\n          {user.email}\n        </Text>\n      </Box>\n    </Box>\n  );\n};\n\nexport default UserListItem;\n","import { Avatar } from \"@chakra-ui/avatar\";\nimport { Box, Text } from \"@chakra-ui/layout\";\nimport { ChatState } from \"../../Context/ChatProvider\";\nimport { useState } from \"react\";\nimport { SmallAddIcon, SmallCloseIcon } from \"@chakra-ui/icons\";\nimport { Badge, Button } from \"@chakra-ui/react\";\nconst ExistGroupUserListItem = ({\n  admin,\n  useringroup,\n  handleRemoveFunction,\n  handleAddToGroupAdminFunction,\n  handleRemoveToGroupAdminFunction,\n}) => {\n  const { user, setSelectedChat } = ChatState();\n  const [isOpen, setIsOpen] = useState(false);\n\n  return (\n    <Box\n      cursor=\"pointer\"\n      bg=\"#E8E8E8\"\n      _hover={{\n        background: \"#38B2AC\",\n        color: \"white\",\n      }}\n      w=\"100%\"\n      d=\"flex\"\n      alignItems=\"center\"\n      color=\"black\"\n      px={3}\n      py={2}\n      mb={2}\n      borderRadius=\"lg\"\n      justifyContent=\"space-between\"\n      pos=\"relative\"\n    >\n      <Box ml={2} d=\"flex\" alignItems=\"center\" w=\"100%\">\n        <Avatar\n          mr={2}\n          size=\"sm\"\n          cursor=\"pointer\"\n          name={useringroup.name}\n          src={useringroup.pic}\n        />\n        <Box\n          w=\"100%\"\n          d=\"flex\"\n          alignItems=\"center\"\n          justifyContent=\"space-between\"\n        >\n          <Box>\n            <Text>{useringroup.name}</Text>\n            <Text fontSize=\"xs\">\n              <b>Email : </b>\n              {useringroup.email}\n            </Text>\n          </Box>\n          {admin.some((admin) => admin._id === useringroup._id) && (\n            <Badge\n              ml=\"3\"\n              colorScheme=\"green\"\n              mr={3}\n              px={2}\n              py={1}\n              borderRadius=\"lg\"\n            >\n              Chat Admin\n            </Badge>\n          )}\n        </Box>\n        {admin.some((admin) => admin._id === user._id) && (\n          <>\n            <Box onClick={() => setIsOpen(!isOpen)}>\n              {!isOpen ? <SmallAddIcon /> : <SmallCloseIcon />}\n            </Box>\n            {isOpen && (\n              <Box\n                pos=\"absolute\"\n                right=\"7\"\n                top=\"10\"\n                bg=\"#fff\"\n                color=\"#000\"\n                d=\"flex\"\n                flexDirection=\"column\"\n                zIndex=\"100\"\n                borderRadius=\"md\"\n              >\n                <Box\n                  variant=\"link\"\n                  py={1}\n                  px={2}\n                  // onClick={() => setSelectedChat(useringroup)}\n                >\n                  Message {useringroup.name}\n                </Box>\n                {!admin.some((admin) => admin._id === useringroup._id) ? (\n                  <Box\n                    variant=\"link\"\n                    py={1}\n                    px={2}\n                    onClick={() => {\n                      handleAddToGroupAdminFunction();\n                      setIsOpen(!isOpen);\n                    }}\n                  >\n                    Make group admin\n                  </Box>\n                ) : (\n                  <Box\n                    variant=\"link\"\n                    py={1}\n                    px={2}\n                    onClick={() => {\n                      handleRemoveToGroupAdminFunction();\n                      setIsOpen(!isOpen);\n                    }}\n                  >\n                    Dismiss as admin\n                  </Box>\n                )}\n\n                <Box\n                  py={1}\n                  px={2}\n                  variant=\"link\"\n                  onClick={() => {\n                    handleRemoveFunction();\n                    setIsOpen(!isOpen);\n                  }}\n                >\n                  Remove {useringroup.name}\n                </Box>\n              </Box>\n            )}\n          </>\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nexport default ExistGroupUserListItem;\n","import { ViewIcon, CloseIcon, SmallAddIcon, EditIcon } from \"@chakra-ui/icons\";\nimport {\n  Button,\n  useDisclosure,\n  FormControl,\n  Input,\n  useToast,\n  Box,\n  IconButton,\n  Text,\n  Spinner,\n  Image,\n  Drawer,\n  DrawerBody,\n  DrawerFooter,\n  DrawerHeader,\n  DrawerOverlay,\n  DrawerContent,\n  DrawerCloseButton,\n  Stack,\n} from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { ChatState } from \"../../Context/ChatProvider\";\nimport UserBadgeItem from \"../userAvatar/UserBadgeItem\";\nimport UserListItem from \"../userAvatar/UserListItem\";\nimport ExistGroupUserListItem from \"../userAvatar/existGroupUserListItem\";\nimport React from \"react\";\n\nconst UpdateGroupChatModal = ({ fetchMessages, fetchAgain, setFetchAgain }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const btnRef = React.useRef();\n\n  const [groupChatName, setGroupChatName] = useState();\n  const [search, setSearch] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [renameloading, setRenameLoading] = useState(false);\n  const toast = useToast();\n\n  const { selectedChat, setSelectedChat, user } = ChatState();\n\n  const [pic, setPic] = useState();\n  const [picLoading, setPicLoading] = useState(false);\n\n  const handleSearch = async (query) => {\n    setSearch(query);\n    if (!query) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\n\n      setLoading(false);\n      setSearchResult(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Search Results\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n      setLoading(false);\n    }\n  };\n\n  const handleRename = async () => {\n    if (!groupChatName) return;\n\n    try {\n      setRenameLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.put(\n        `/api/chat/rename`,\n        {\n          chatId: selectedChat._id,\n          chatName: groupChatName,\n        },\n        config\n      );\n\n      setSelectedChat(data);\n      setFetchAgain(!fetchAgain);\n      setRenameLoading(false);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setRenameLoading(false);\n    }\n    setGroupChatName(\"\");\n  };\n\n  const handleAddUser = async (user1) => {\n    if (selectedChat.users.find((u) => u._id === user1._id)) {\n      toast({\n        title: \"User Already in group!\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n    if (!selectedChat.groupAdmin.some((admin) => admin._id === user._id)) {\n      toast({\n        title: \"Only admins can add someone!\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.put(\n        `/api/chat/groupadd`,\n        {\n          chatId: selectedChat._id,\n          userId: user1._id,\n        },\n        config\n      );\n\n      setSelectedChat(data);\n      setFetchAgain(!fetchAgain);\n      setLoading(false);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n    }\n    setGroupChatName(\"\");\n  };\n\n  const handleRemove = async (user1) => {\n    if (selectedChat.groupOwner._id === user1._id) {\n      if (selectedChat.groupOwner._id === user._id) {\n        toast({\n          title: \"You cannot remove youself until transfer group ownership!\",\n          status: \"error\",\n          duration: 5000,\n          isClosable: true,\n          position: \"bottom\",\n        });\n        return;\n      } else {\n        toast({\n          title: \"You cant remove Group Owner!\",\n          status: \"error\",\n          duration: 5000,\n          isClosable: true,\n          position: \"bottom\",\n        });\n        return;\n      }\n    }\n\n    if (\n      !selectedChat.groupAdmin.some((admin) => admin._id === user._id) &&\n      !selectedChat.groupAdmin.some((admin) => admin._id === user1._id)\n    ) {\n      toast({\n        title: \"Only admins can remove someone!\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.put(\n        `/api/chat/groupremove`,\n        {\n          chatId: selectedChat._id,\n          userId: user1._id,\n        },\n        config\n      );\n\n      setSelectedChat(data);\n      setFetchAgain(!fetchAgain);\n      fetchMessages();\n      setLoading(false);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n    }\n    setGroupChatName(\"\");\n  };\n\n  const AddToGroupAdmin = async (user1) => {\n    if (selectedChat.groupAdmin.some((admin) => admin._id === user1._id)) {\n      toast({\n        title: \"User is already an admin!\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n    if (!selectedChat.groupAdmin.some((admin) => admin._id === user._id)) {\n      toast({\n        title: \"Only Group Owner can add Admin!\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.put(\n        `/api/chat/groupaddadmin`,\n        {\n          chatId: selectedChat._id,\n          userId: user1._id,\n        },\n        config\n      );\n\n      setSelectedChat(data);\n      setFetchAgain(!fetchAgain);\n      setLoading(false);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n    }\n  };\n\n  const RemoveToGroupAdmin = async (user1) => {\n    if (selectedChat.groupOwner._id === user1._id) {\n      toast({\n        title: \"You cannot remove Group Owner!\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n\n    if (\n      !selectedChat.groupAdmin.some((admin) => admin._id === user._id) &&\n      !selectedChat.groupAdmin.some((admin) => admin._id === user1._id)\n    ) {\n      toast({\n        title: \"Only admins can remove someone!\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.put(\n        `/api/chat/groupremoveadmin`,\n        {\n          chatId: selectedChat._id,\n          userId: user1._id,\n        },\n        config\n      );\n\n      setSelectedChat(data);\n      setFetchAgain(!fetchAgain);\n      setLoading(false);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n    }\n  };\n  const postDetails = (pics) => {\n    setPicLoading(true);\n    if (pics === undefined) {\n      toast({\n        title: \"Please Select an Image!\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n\n    if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\n      const data = new FormData();\n      data.append(\"file\", pics);\n      data.append(\"upload_preset\", \"chat-app\");\n      data.append(\"cloud_name\", \"djn1nfuky\");\n      fetch(\"https://api.cloudinary.com/v1_1/djn1nfuky/image/upload\", {\n        method: \"post\",\n        body: data,\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          setPic(data.url.toString());\n\n          setPicLoading(false);\n        })\n        .catch((err) => {\n          setPicLoading(false);\n        });\n    } else {\n      toast({\n        title: \"Please Select an Image!\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setPicLoading(false);\n      return;\n    }\n  };\n\n  return (\n    <>\n      <IconButton d={{ base: \"flex\" }} icon={<ViewIcon />} onClick={onOpen} />\n\n      <Drawer\n        isOpen={isOpen}\n        placement=\"right\"\n        onClose={onClose}\n        finalFocusRef={btnRef}\n        size=\"sm\"\n      >\n        <DrawerOverlay />\n        <DrawerContent>\n          <DrawerCloseButton />\n          <Box\n            d=\"flex\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n            w=\"100%\"\n            pt={10}\n          >\n            <Image\n              borderRadius=\"full\"\n              boxSize=\"110px\"\n              src={selectedChat.pic}\n              alt={selectedChat.chatname}\n            />\n          </Box>\n          <Box\n            d=\"flex\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n            w=\"100%\"\n            pl={20}\n            my={-3}\n          >\n            <label htmlFor=\"upload-input\">\n              <EditIcon color=\"#bdbdbd\" />\n            </label>\n            <Input\n              type=\"file\"\n              display=\"none\"\n              onChange={(e) => postDetails(e.target.files[0])}\n              id=\"upload-input\"\n            />\n          </Box>\n          <DrawerHeader\n            fontSize=\"35px\"\n            fontFamily=\"Work sans\"\n            d=\"flex\"\n            justifyContent=\"center\"\n          >\n            {selectedChat.chatName}\n          </DrawerHeader>\n\n          <DrawerBody d=\"flex\" flexDir=\"column\" alignItems=\"center\">\n            <Text fontStyle=\"italic\" w=\"100%\" pl={3} pb={2} color=\"#7e7e7e\">\n              Created by{\" \"}\n              {selectedChat.groupOwner._id === user._id\n                ? \"You\"\n                : selectedChat.groupOwner.name}\n              , {selectedChat.createdAt.slice(0, 10)}\n            </Text>\n            <FormControl d=\"flex\">\n              <Input\n                placeholder=\"Chat Name\"\n                mb={3}\n                value={groupChatName}\n                onChange={(e) => setGroupChatName(e.target.value)}\n              />\n              <Button\n                variant=\"solid\"\n                colorScheme=\"teal\"\n                ml={1}\n                isLoading={renameloading}\n                onClick={handleRename}\n              >\n                Update\n              </Button>\n            </FormControl>\n            <FormControl>\n              <Input\n                placeholder=\"Add User to group\"\n                mb={1}\n                onChange={(e) => handleSearch(e.target.value)}\n              />\n            </FormControl>\n            {searchResult.length > 0 && (\n              <Box d=\"flex\" w=\"100%\" px={3} py={3}>\n                <CloseIcon boxSize={2} onClick={() => setSearchResult([])} />\n              </Box>\n            )}\n            {loading ? (\n              <Spinner size=\"lg\" />\n            ) : (\n              <>\n                <Stack\n                  overflowY=\"scroll\"\n                  w=\"100%\"\n                  h={searchResult.length > 3 && \"197px\"}\n                >\n                  {searchResult?.map((searchUser) => (\n                    <UserListItem\n                      key={searchUser._id}\n                      user={searchUser}\n                      handleFunction={() => handleAddUser(searchUser)}\n                    />\n                  ))}\n                </Stack>\n              </>\n            )}\n            <Text\n              w=\"100%\"\n              textAlign=\"start\"\n              pl={3}\n              color=\"#7e7e7e\"\n              fontStyle=\"italic\"\n              my={2}\n            >\n              {selectedChat && selectedChat.users.length} participant\n              {selectedChat.length !== 1 ? \"s\" : \"\"}\n            </Text>\n\n            {selectedChat.users\n              .filter(\n                (u) =>\n                  !selectedChat.groupAdmin.some((admin) => admin._id === u._id)\n              )\n              .concat(\n                selectedChat.users.filter((u) =>\n                  selectedChat.groupAdmin.some((admin) => admin._id === u._id)\n                )\n              )\n              .reverse()\n              .map((u) => (\n                <ExistGroupUserListItem\n                  key={u._id}\n                  useringroup={u}\n                  admin={selectedChat.groupAdmin}\n                  handleRemoveFunction={() => handleRemove(u)}\n                  handleAddToGroupAdminFunction={() => AddToGroupAdmin(u)}\n                  handleRemoveToGroupAdminFunction={() => RemoveToGroupAdmin(u)}\n                />\n              ))}\n          </DrawerBody>\n          <DrawerFooter>\n            <Button onClick={() => handleRemove(user)} colorScheme=\"red\">\n              Leave Group\n            </Button>\n          </DrawerFooter>\n        </DrawerContent>\n      </Drawer>\n    </>\n  );\n};\n\nexport default UpdateGroupChatModal;\n","import { Box } from \"@chakra-ui/layout\";\nimport \"./styles.css\";\nimport SingleChat from \"./SingleChat\";\nimport { ChatState } from \"../Context/ChatProvider\";\n\nconst Chatbox = ({ fetchAgain, setFetchAgain }) => {\n  const { selectedChat } = ChatState();\n\n  return (\n    <Box\n      d={{ base: selectedChat ? \"flex\" : \"none\", md: \"flex\" }}\n      alignItems=\"center\"\n      flexDir=\"column\"\n      p={3}\n      bg=\"white\"\n      w={{ base: \"100%\", md: \"71%\" }}\n      borderRadius=\"lg\"\n      borderWidth=\"1px\"\n    >\n      <SingleChat fetchAgain={fetchAgain} setFetchAgain={setFetchAgain} />\n    </Box>\n  );\n};\n\nexport default Chatbox;\n","import { Stack } from \"@chakra-ui/layout\";\nimport { Skeleton } from \"@chakra-ui/skeleton\";\n\nconst ChatLoading = () => {\n  return (\n    <Stack>\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n    </Stack>\n  );\n};\n\nexport default ChatLoading;\n","import {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Button,\n  useDisclosure,\n  FormControl,\n  Input,\n  useToast,\n  Box,\n} from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { ChatState } from \"../../Context/ChatProvider\";\nimport UserBadgeItem from \"../userAvatar/UserBadgeItem\";\nimport UserListItem from \"../userAvatar/UserListItem\";\n\nconst GroupChatModal = ({ children }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [groupChatName, setGroupChatName] = useState();\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const toast = useToast();\n\n  const { user, chats, setChats } = ChatState();\n\n  const handleGroup = (userToAdd) => {\n    if (selectedUsers.includes(userToAdd)) {\n      toast({\n        title: \"User already added\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top\",\n      });\n      return;\n    }\n\n    setSelectedUsers([...selectedUsers, userToAdd]);\n  };\n\n  const handleSearch = async (query) => {\n    setSearch(query);\n    if (!query) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\n      \n      setLoading(false);\n      setSearchResult(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Search Results\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  const handleDelete = (delUser) => {\n    setSelectedUsers(selectedUsers.filter((sel) => sel._id !== delUser._id));\n  };\n\n  const handleSubmit = async () => {\n    if (!groupChatName || !selectedUsers) {\n      toast({\n        title: \"Please fill all the feilds\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top\",\n      });\n      return;\n    }\n\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.post(\n        `/api/chat/group`,\n        {\n          name: groupChatName,\n          users: JSON.stringify(selectedUsers.map((u) => u._id)),\n        },\n        config\n      );\n      setChats([data, ...chats]);\n      onClose();\n      toast({\n        title: \"New Group Chat Created!\",\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n    } catch (error) {\n      toast({\n        title: \"Failed to Create the Chat!\",\n        description: error.response.data,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n    }\n  };\n\n  return (\n    <>\n      <span onClick={onOpen}>{children}</span>\n\n      <Modal onClose={onClose} isOpen={isOpen} isCentered>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader\n            fontSize=\"35px\"\n            fontFamily=\"Work sans\"\n            d=\"flex\"\n            justifyContent=\"center\"\n          >\n            Create Group Chat\n          </ModalHeader>\n          <ModalCloseButton />\n          <ModalBody d=\"flex\" flexDir=\"column\" alignItems=\"center\">\n            <FormControl>\n              <Input\n                placeholder=\"Chat Name\"\n                mb={3}\n                onChange={(e) => setGroupChatName(e.target.value)}\n              />\n            </FormControl>\n            <FormControl>\n              <Input\n                placeholder=\"Add Users eg: John, Piyush, Jane\"\n                mb={1}\n                onChange={(e) => handleSearch(e.target.value)}\n              />\n            </FormControl>\n            <Box w=\"100%\" d=\"flex\" flexWrap=\"wrap\">\n              {selectedUsers.map((u) => (\n                <UserBadgeItem\n                  key={u._id}\n                  user={u}\n                  handleFunction={() => handleDelete(u)}\n                />\n              ))}\n            </Box>\n            {loading ? (\n              // <ChatLoading />\n              <div>Loading...</div>\n            ) : (\n              searchResult\n                ?.slice(0, 4)\n                .map((user) => (\n                  <UserListItem\n                    key={user._id}\n                    user={user}\n                    handleFunction={() => handleGroup(user)}\n                  />\n                ))\n            )}\n          </ModalBody>\n          <ModalFooter>\n            <Button onClick={handleSubmit} colorScheme=\"blue\">\n              Create Chat\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default GroupChatModal;\n","import { AddIcon } from \"@chakra-ui/icons\";\nimport { Box, Stack, Text } from \"@chakra-ui/layout\";\nimport { useToast } from \"@chakra-ui/toast\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { getSender, getSenderPic } from \"../config/ChatLogics\";\nimport ChatLoading from \"./ChatLoading\";\nimport GroupChatModal from \"./miscellaneous/GroupChatModal\";\nimport { Button, Avatar } from \"@chakra-ui/react\";\nimport { ChatState } from \"../Context/ChatProvider\";\n\nconst MyChats = ({ fetchAgain }) => {\n  const [loggedUser, setLoggedUser] = useState();\n\n  const { selectedChat, setSelectedChat, user, chats, setChats } = ChatState();\n\n  const toast = useToast();\n\n  const fetchChats = async () => {\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      const { data } = await axios.get(\"/api/chat\", config);\n\n      setChats(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the chats\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    // setLoggedUser(user);\n    setLoggedUser(JSON.parse(localStorage.getItem(\"userInfo\")));\n    fetchChats();\n    // eslint-disable-next-line\n  }, [fetchAgain]);\n\n  const capitalizeFirstLetter = (str) => {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  };\n\n  return (\n    <Box\n      d={{ base: selectedChat ? \"none\" : \"flex\", md: \"flex\" }}\n      flexDir=\"column\"\n      alignItems=\"center\"\n      p={3}\n      bg=\"white\"\n      w={{ base: \"100%\", md: \"28%\" }}\n      borderRadius=\"lg\"\n      borderWidth=\"1px\"\n    >\n      <Box\n        pb={3}\n        px={3}\n        fontSize={{ base: \"28px\", md: \"30px\" }}\n        fontFamily=\"Work sans\"\n        d=\"flex\"\n        w=\"100%\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n      >\n        My Chats\n        <GroupChatModal>\n          <Button\n            d=\"flex\"\n            fontSize={{ base: \"17px\", md: \"10px\", lg: \"17px\" }}\n            rightIcon={<AddIcon />}\n          >\n            New Group Chat\n          </Button>\n        </GroupChatModal>\n      </Box>\n      <Box\n        d=\"flex\"\n        flexDir=\"column\"\n        p={3}\n        bg=\"#F8F8F8\"\n        w=\"100%\"\n        h=\"100%\"\n        borderRadius=\"lg\"\n        overflowY=\"hidden\"\n      >\n        {chats ? (\n          <Stack overflowY=\"scroll\">\n            {chats.map((chat) => (\n              <Box\n                onClick={() => setSelectedChat(chat)}\n                cursor=\"pointer\"\n                bg={selectedChat === chat ? \"#38B2AC\" : \"#E8E8E8\"}\n                color={selectedChat === chat ? \"white\" : \"black\"}\n                px={3}\n                py={2}\n                borderRadius=\"lg\"\n                key={chat._id}\n                d=\"flex\"\n              >\n                <Box d=\"flex\" alignItems=\"center\">\n                  <Avatar src={getSenderPic(loggedUser, chat.users)} />\n                </Box>\n                <Box ml={3}>\n                  <Text fontSize=\"xl\">\n                    {!chat.isGroupChat\n                      ? getSender(loggedUser, chat.users) &&\n                        capitalizeFirstLetter(getSender(loggedUser, chat.users))\n                      : chat.chatName && capitalizeFirstLetter(chat.chatName)}\n                  </Text>\n                  {chat.latestMessage && (\n                    <Text fontSize=\"xs\" color=\"#3a3a3a\">\n                      {chat.latestMessage.content.length > 50\n                        ? chat.latestMessage.content.substring(0, 51) + \"...\"\n                        : chat.latestMessage.content}\n                    </Text>\n                  )}\n                </Box>\n              </Box>\n            ))}\n          </Stack>\n        ) : (\n          <ChatLoading />\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nexport default MyChats;\n","import { Button } from \"@chakra-ui/button\";\nimport { useDisclosure } from \"@chakra-ui/hooks\";\nimport { Input } from \"@chakra-ui/input\";\nimport { Box, Text } from \"@chakra-ui/layout\";\nimport {\n  Menu,\n  MenuButton,\n  MenuDivider,\n  MenuItem,\n  MenuList,\n} from \"@chakra-ui/menu\";\nimport {\n  Drawer,\n  DrawerBody,\n  DrawerContent,\n  DrawerHeader,\n  DrawerOverlay,\n} from \"@chakra-ui/modal\";\nimport { Tooltip } from \"@chakra-ui/tooltip\";\nimport { BellIcon, ChevronDownIcon } from \"@chakra-ui/icons\";\nimport { Avatar } from \"@chakra-ui/avatar\";\nimport { useHistory } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { useToast } from \"@chakra-ui/toast\";\nimport ChatLoading from \"../ChatLoading\";\nimport { Spinner } from \"@chakra-ui/spinner\";\nimport ProfileModal from \"./ProfileModal\";\nimport NotificationBadge from \"react-notification-badge\";\nimport { Effect } from \"react-notification-badge\";\nimport { getSender } from \"../../config/ChatLogics\";\nimport UserListItem from \"../userAvatar/UserListItem\";\nimport { ChatState } from \"../../Context/ChatProvider\";\n\nfunction SideDrawer() {\n  const [search, setSearch] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [loadingChat, setLoadingChat] = useState(false);\n\n  const {\n    setSelectedChat,\n    user,\n    notification,\n    setNotification,\n    chats,\n    setChats,\n  } = ChatState();\n\n  const toast = useToast();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const history = useHistory();\n\n  const logoutHandler = () => {\n    localStorage.removeItem(\"userInfo\");\n    history.push(\"/\");\n  };\n\n  const handleSearch = async () => {\n    if (!search) {\n      toast({\n        title: \"Please Enter something in search\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top-left\",\n      });\n      return;\n    }\n\n    try {\n      setLoading(true);\n\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\n\n      setLoading(false);\n      setSearchResult(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Search Results\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  const accessChat = async (userId) => {\n\n    try {\n      setLoadingChat(true);\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.post(`/api/chat`, { userId }, config);\n\n      if (!chats.find((c) => c._id === data._id)) setChats([data, ...chats]);\n      setSelectedChat(data);\n      setLoadingChat(false);\n      onClose();\n    } catch (error) {\n      toast({\n        title: \"Error fetching the chat\",\n        description: error.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  return (\n    <>\n      <Box\n        d=\"flex\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        bg=\"white\"\n        w=\"100%\"\n        p=\"5px 10px 5px 10px\"\n        borderWidth=\"5px\"\n      >\n        <Tooltip label=\"Search Users to chat\" hasArrow placement=\"bottom-end\">\n          <Button variant=\"ghost\" onClick={onOpen}>\n            <i className=\"fas fa-search\"></i>\n            <Text d={{ base: \"none\", md: \"flex\" }} px={4}>\n              Search User\n            </Text>\n          </Button>\n        </Tooltip>\n        <Text fontSize=\"2xl\" fontFamily=\"Work sans\">\n          Flipho-Chat-Room\n        </Text>\n        <div>\n          <Menu>\n            <MenuButton p={1}>\n              <NotificationBadge\n                count={notification.length}\n                effect={Effect.SCALE}\n              />\n              <BellIcon fontSize=\"2xl\" m={1} />\n            </MenuButton>\n            <MenuList pl={2}>\n              {!notification.length && \"No New Messages\"}\n              {notification.map((notif) => (\n                <MenuItem\n                  key={notif._id}\n                  onClick={() => {\n                    setSelectedChat(notif.chat);\n                    setNotification(notification.filter((n) => n !== notif));\n                  }}\n                >\n                  {notif.chat.isGroupChat\n                    ? `New Message in ${notif.chat.chatName}`\n                    : `New Message from ${getSender(user, notif.chat.users)}`}\n                </MenuItem>\n              ))}\n            </MenuList>\n          </Menu>\n          <Menu>\n            <MenuButton as={Button} bg=\"white\" rightIcon={<ChevronDownIcon />}>\n              <Avatar\n                size=\"sm\"\n                cursor=\"pointer\"\n                name={user.name}\n                src={user.pic}\n              />\n            </MenuButton>\n            <MenuList>\n              <ProfileModal user={user}>\n                <MenuItem>My Profile</MenuItem>{\" \"}\n              </ProfileModal>\n              <MenuDivider />\n              <MenuItem onClick={logoutHandler}>Logout</MenuItem>\n            </MenuList>\n          </Menu>\n        </div>\n      </Box>\n\n      <Drawer placement=\"left\" onClose={onClose} isOpen={isOpen}>\n        <DrawerOverlay />\n        <DrawerContent>\n          <DrawerHeader borderBottomWidth=\"1px\">Search Users</DrawerHeader>\n          <DrawerBody>\n            <Box d=\"flex\" pb={2}>\n              <Input\n                placeholder=\"Search by name or email\"\n                mr={2}\n                value={search}\n                onChange={(e) => setSearch(e.target.value)}\n              />\n              <Button onClick={handleSearch}>Go</Button>\n            </Box>\n            {loading ? (\n              <ChatLoading />\n            ) : (\n              searchResult?.map((searuser) => (\n                <UserListItem\n                  key={searuser._id}\n                  user={searuser}\n                  handleFunction={() => accessChat(searuser._id)}\n                />\n              ))\n            )}\n            {loadingChat && <Spinner ml=\"auto\" d=\"flex\" />}\n          </DrawerBody>\n        </DrawerContent>\n      </Drawer>\n    </>\n  );\n}\n\nexport default SideDrawer;\n","import { Box } from \"@chakra-ui/layout\";\nimport { useState } from \"react\";\nimport Chatbox from \"../components/Chatbox\";\nimport MyChats from \"../components/MyChats\";\nimport SideDrawer from \"../components/miscellaneous/SideDrawer\";\nimport { ChatState } from \"../Context/ChatProvider\";\n\nconst Chatpage = () => {\n  const [fetchAgain, setFetchAgain] = useState(false);\n  const { user } = ChatState();\n\n  return (\n    <div style={{ width: \"100%\" }}>\n      {user && <SideDrawer />}\n      <Box d=\"flex\" justifyContent=\"space-between\" w=\"100%\" h=\"91.5vh\" p=\"10px\">\n        {user && <MyChats fetchAgain={fetchAgain} />}\n        {user && (\n          <Chatbox fetchAgain={fetchAgain} setFetchAgain={setFetchAgain} />\n        )}\n      </Box>\n    </div>\n  );\n};\n\nexport default Chatpage;\n","import \"./App.css\";\nimport Homepage from \"./Pages/Homepage\";\nimport { Route } from \"react-router-dom\";\nimport Chatpage from \"./Pages/Chatpage\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Route path=\"/\" component={Homepage} exact />\n      <Route path=\"/chats\" component={Chatpage} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport ChatProvider from \"./Context/ChatProvider\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <ChakraProvider>\n      <ChatProvider>\n        <App />\n      </ChatProvider>\n    </ChakraProvider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}